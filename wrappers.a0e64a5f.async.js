(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[114],{"9kvl":function(e,n,t){"use strict";var i=t("FfOG");t.d(n,"a",(function(){return i["b"]}));t("bCY9")},afA6:function(e,n,t){"use strict";t.r(n);var i=t("0Owb"),r=t("q1tI"),a=t.n(r),o=t("q3YX"),s=t("9og8"),d=t("WmNS"),l=t.n(d),p=t("rlch"),c="import { ASelect } from 'assui';\nimport { BusinessCardOutlined } from 'a-icons';\nimport { Space } from 'antd';\nimport React from 'react';\nimport './index.less';\n\nconst { Option } = ASelect;\n\nconst handleChange = (value: string) => {\n  console.log(`selected ${value}`);\n};\n\nconst App: React.FC = () => {\n  const valueRender = (value) => {\n    return (\n      <div className=\"a-select-value-wrap\">\n        <BusinessCardOutlined />\n        <span>{value}</span>\n      </div>\n    );\n  };\n\n  const options = [\n    { label: 'Jack', value: 'jack' },\n    { label: 'Lucy', value: 'lucy' },\n    { label: 'Yiminghe', value: 'yiminghe' },\n  ];\n\n  return (\n    <ASelect\n      valueRender={valueRender}\n      defaultValue=\"lucy\"\n      style={{ width: 120 }}\n      onChange={handleChange}\n      options={options}\n    />\n  );\n};\n\nexport default App;",u=".a-select-value-wrap {\n  display: flex;\n  align-items: center;\n  padding-left: 5px;\n\n  .spotecicon {\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n  }\n}",m="import React from 'react';\nimport { AreaText } from 'assui';\n\nconst Index = () => {\n  const text =\n    'Submission time\uff1a{{applyTime}}\\nReview time\uff1a{{time}}\\nApply for leverage\uff1a{{lever}}\\nReason for rejection\uff1a{{remark}}';\n  return (\n    <div>\n      <AreaText value={text} />\n    </div>\n  );\n};\n\nexport default Index;",f="import React, { Component, Fragment } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport type {\n  DropResult,\n  DroppableProvided,\n  DraggableProvided,\n  DraggableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { quotes } from '../data';\nimport reorder from '../reorder';\nimport styles from './index.modules.less';\n\nexport type Quote = {\n  id: string;\n  content: string;\n  author: Author;\n};\n\ntype TableRowProps = {\n  quote: Quote;\n  provided: DraggableProvided;\n  snapshot: DraggableStateSnapshot;\n};\n\nclass TableRow extends Component<TableRowProps> {\n  render() {\n    const { snapshot, quote, provided } = this.props;\n    return (\n      <tr\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        style={{\n          ...provided.draggableProps.style,\n          backgroundColor: snapshot.isDragging ? '#79F2C0' : '',\n          display: snapshot.isDragging ? '#79F2C0' : '',\n        }}\n      >\n        <td className={styles.td}>{quote.author.name}</td>\n        <td className={styles.td}>{quote.content}</td>\n      </tr>\n    );\n  }\n}\n\ntype AppProps = {\n  initial: Quote[];\n};\n\ntype AppState = {\n  quotes: Quote[];\n  layout: 'fixed' | 'auto';\n};\nexport default class TableApp extends Component<AppProps, AppState> {\n  // eslint-disable-next-line react/sort-comp\n  tableRef?: HTMLElement;\n\n  state: AppState = {\n    quotes: quotes,\n    layout: 'auto',\n  };\n\n  onDragEnd = (result: DropResult) => {\n    // dropped outside the list\n    if (!result.destination || result.destination.index === result.source.index) {\n      return;\n    }\n\n    // no movement\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const quotes = reorder(this.state.quotes, result.source.index, result.destination.index);\n\n    this.setState({\n      quotes,\n    });\n  };\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Fragment>\n          <table className={styles.table}>\n            <thead className={styles.thead}>\n              <tr>\n                <th>Author</th>\n                <th>Content</th>\n              </tr>\n            </thead>\n            <Droppable droppableId=\"table\">\n              {(droppableProvided: DroppableProvided) => (\n                <tbody\n                  ref={(ref: HTMLElement) => {\n                    this.tableRef = ref;\n                    droppableProvided.innerRef(ref);\n                  }}\n                  {...droppableProvided.droppableProps}\n                >\n                  {this.state.quotes.map((quote: Quote, index: number) => (\n                    <Draggable draggableId={quote.id} index={index} key={quote.id}>\n                      {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\n                        <TableRow provided={provided} snapshot={snapshot} quote={quote} />\n                      )}\n                    </Draggable>\n                  ))}\n                  {droppableProvided.placeholder}\n                </tbody>\n              )}\n            </Droppable>\n          </table>\n        </Fragment>\n      </DragDropContext>\n    );\n  }\n}",h="const jake = {\n  id: '1',\n  name: 'Jake',\n  url: 'http://adventuretime.wikia.com/wiki/Jake',\n};\n\nconst BMO = {\n  id: '2',\n  name: 'BMO',\n  url: 'http://adventuretime.wikia.com/wiki/BMO',\n};\n\nconst finn = {\n  id: '3',\n  name: 'Finn',\n  url: 'http://adventuretime.wikia.com/wiki/Finn',\n};\n\nconst princess = {\n  id: '4',\n  name: 'Princess bubblegum',\n  url: 'http://adventuretime.wikia.com/wiki/Princess_Bubblegum',\n};\n\nexport const authors = [jake, BMO, finn, princess];\n\nexport const quotes = [\n  {\n    id: '1',\n    content: 'Sometimes life is scary and dark',\n    author: BMO,\n  },\n  {\n    id: '2',\n    content: 'Sucking at something is the first step towards being sorta good at something.',\n    author: jake,\n  },\n  {\n    id: '3',\n    content: \"You got to focus on what's real, man\",\n    author: jake,\n  },\n  {\n    id: '4',\n    content: 'Is that where creativity comes from? From sad biz?',\n    author: finn,\n  },\n  {\n    id: '5',\n    content: 'Homies help homies. Always',\n    author: finn,\n  },\n  {\n    id: '6',\n    content: 'Responsibility demands sacrifice',\n    author: princess,\n  },\n  {\n    id: '7',\n    content: \"That's it! The answer was so simple, I was too smart to see it!\",\n    author: princess,\n  },\n];\n\n// So we do not have any clashes with our hardcoded ones\nlet idCount: number = quotes.length + 1;\n\nexport const getQuotes = (count: number) =>\n  Array.from({ length: count }, (v, k) => k).map(() => {\n    const random = quotes[Math.floor(Math.random() * quotes.length)];\n\n    const custom = {\n      ...random,\n      id: `G${idCount++}`,\n    };\n\n    return custom;\n  });\n\nexport const getAuthors = (count: number) =>\n  Array.from({ length: count }, (v, k) => k).map(() => {\n    const random = authors[Math.floor(Math.random() * authors.length)];\n\n    const custom = {\n      ...random,\n      id: `author-${idCount++}`,\n    };\n\n    return custom;\n  });\n\nconst getByAuthor = (author, items) => items.filter((quote) => quote.author === author);\n\nexport const authorQuoteMap = authors.reduce(\n  (previous, author) => ({\n    ...previous,\n    [author.name]: getByAuthor(author, quotes),\n  }),\n  {},\n);\n\nexport const generateQuoteMap = (quoteCount: number) =>\n  authors.reduce(\n    (previous, author) => ({\n      ...previous,\n      [author.name]: getQuotes(quoteCount / authors.length),\n    }),\n    {},\n  );",y="// @flow\nimport type { Quote, QuoteMap } from './types';\nimport type { DraggableLocation } from 'react-beautiful-dnd';\n\n// a little function to help us with reordering the result\nconst reorder = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport default reorder;\n\ntype ReorderQuoteMapArgs = {\n  quoteMap: QuoteMap;\n  source: DraggableLocation;\n  destination: DraggableLocation;\n};\n\nexport type ReorderQuoteMapResult = {\n  quoteMap: QuoteMap;\n};\n\nexport const reorderQuoteMap = ({\n  quoteMap,\n  source,\n  destination,\n}: ReorderQuoteMapArgs): ReorderQuoteMapResult => {\n  const current: Quote[] = [...quoteMap[source.droppableId]];\n  const next: Quote[] = [...quoteMap[destination.droppableId]];\n  const target: Quote = current[source.index];\n\n  // moving to same list\n  if (source.droppableId === destination.droppableId) {\n    const reordered: Quote[] = reorder(current, source.index, destination.index);\n    const result: QuoteMap = {\n      ...quoteMap,\n      [source.droppableId]: reordered,\n    };\n    return {\n      quoteMap: result,\n    };\n  }\n\n  // moving to different list\n\n  // remove from original\n  current.splice(source.index, 1);\n  // insert into next\n  next.splice(destination.index, 0, target);\n\n  const result: QuoteMap = {\n    ...quoteMap,\n    [source.droppableId]: current,\n    [destination.droppableId]: next,\n  };\n\n  return {\n    quoteMap: result,\n  };\n};\n\ntype List<T> = {\n  id: string;\n  values: T[];\n};\n\ntype MoveBetweenArgs<T> = {\n  list1: List<T>;\n  list2: List<T>;\n  source: DraggableLocation;\n  destination: DraggableLocation;\n};\n\ntype MoveBetweenResult<T> = {\n  list1: List<T>;\n  list2: List<T>;\n};\n\nexport function moveBetween<T>({\n  list1,\n  list2,\n  source,\n  destination,\n}: MoveBetweenArgs<T>): MoveBetweenResult<T> {\n  const newFirst = Array.from(list1.values);\n  const newSecond = Array.from(list2.values);\n\n  const moveFrom = source.droppableId === list1.id ? newFirst : newSecond;\n  const moveTo = moveFrom === newFirst ? newSecond : newFirst;\n\n  const [moved] = moveFrom.splice(source.index, 1);\n  moveTo.splice(destination.index, 0, moved);\n\n  return {\n    list1: {\n      ...list1,\n      values: newFirst,\n    },\n    list2: {\n      ...list2,\n      values: newSecond,\n    },\n  };\n}",v=".table {\n  width: 500px;\n  margin: 0 auto;\n  table-layout: fixed;\n}\n\n.tbody {\n  border: 0;\n}\n\n.thead {\n  background-color: #c1c7d0;\n  border: 0;\n  border-bottom: none;\n}\n\n.td {\n  box-sizing: border-box;\n  width: 50%;\n  padding: 8px;\n}",b="import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport type { DropResult } from 'react-beautiful-dnd';\nimport reorder, { moveBetween } from '../reorder';\nimport styles from './index.modules.less';\n\nexport type Task = {\n  id: string;\n  content: string;\n};\n\nlet uniqueId = 0;\nfunction getTasks(count: number): Task[] {\n  return Array.from({ length: count }, (): Task => {\n    const id: string = `${uniqueId++}`;\n\n    return {\n      id,\n      content: `task: ${id}`,\n    };\n  });\n}\n\nfunction renderTasks(tasks: Task[], options: { isDragEnabled: boolean } = { isDragEnabled: true }) {\n  return tasks.map((task: Task, index: number) => {\n    return (\n      <Draggable\n        draggableId={task.id}\n        index={index}\n        key={task.id}\n        isDragDisabled={!options.isDragEnabled}\n      >\n        {(provided, snapshot) => (\n          <div\n            className={styles.item}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: snapshot.isDragging ? '#79F2C0' : '#EBECF0',\n            }}\n            ref={provided.innerRef}\n          >\n            Task id: {task.id}\n          </div>\n        )}\n      </Draggable>\n    );\n  });\n}\n\nexport default function AddingThings() {\n  const [isShowingBin, setIsShowingBin] = useState(false);\n  const [tasks, setTasks] = useState(() => getTasks(4));\n  const [trash, setTrash] = useState(() => getTasks(2));\n\n  function onBeforeCapture() {\n    setIsShowingBin(true);\n  }\n\n  function onDragEnd(result: DropResult) {\n    setIsShowingBin(false);\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (source.droppableId === 'tasks') {\n        setTasks(reorder(tasks, source.index, destination.index));\n      }\n      // In our current UI it won't be possible to reorder trash\n      return;\n    }\n\n    const { list1, list2 } = moveBetween({\n      list1: {\n        id: 'tasks',\n        values: tasks,\n      },\n      list2: {\n        id: 'trash',\n        values: trash,\n      },\n      source,\n      destination,\n    });\n\n    setTasks(list1.values);\n    setTrash(list2.values);\n  }\n\n  return (\n    <DragDropContext onBeforeCapture={onBeforeCapture} onDragEnd={onDragEnd}>\n      <div className={styles.app}>\n        <div className={styles.list}>\n          <h3 className={styles['list-title']}>\n            Tasks{' '}\n            <span role=\"img\" aria-label=\"book\">\n              \ud83d\udcd8\n            </span>\n          </h3>\n          <Droppable droppableId=\"tasks\">\n            {(provided) => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {renderTasks(tasks)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        {isShowingBin ? (\n          <div className={styles.list}>\n            <div className={styles['list-title']}>\n              Trash{' '}\n              <span role=\"img\" aria-label=\"trash\">\n                \ud83d\uddd1\n              </span>\n            </div>\n            <Droppable droppableId=\"bin\">\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {renderTasks(trash, { isDragEnabled: false })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        ) : null}\n      </div>\n    </DragDropContext>\n  );\n}",g=".app {\n  display: flex;\n  align-items: start;\n  user-select: none;\n}\n\n.tasks,\n.list {\n  margin: 8px;\n  padding-bottom: 8px;\n  text-align: center;\n  border: 1px solid #57d9a3;\n}\n\n.item {\n  margin-top: 8px;\n  margin-right: 8px;\n  margin-left: 8px;\n  padding: 8px;\n  border: 1px solid #ebecf0;\n}\n\n.bin {\n  .item;\n\n  border-color: #ff7452;\n}\n\n.list-title {\n  width: 250px;\n  padding: 8px;\n}",E="import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport type { DragStart, DropResult, DraggableLocation } from 'react-beautiful-dnd';\nimport initial from './data';\nimport { mutliDragAwareReorder, multiSelectTo as multiSelect } from './utils';\nimport Column from './column';\nimport type { Result as ReorderResult } from './utils';\nimport styles from './index.modules.less';\n\nconst getTasks = (entities, columnId) =>\n  entities.columns[columnId].taskIds.map((taskId) => entities.tasks[taskId]);\nexport default class TaskApp extends Component {\n  state = {\n    entities: initial,\n    selectedTaskIds: [],\n    draggingTaskId: null,\n  };\n\n  componentDidMount() {\n    window.addEventListener('click', this.onWindowClick);\n    window.addEventListener('keydown', this.onWindowKeyDown);\n    window.addEventListener('touchend', this.onWindowTouchEnd);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onWindowClick);\n    window.removeEventListener('keydown', this.onWindowKeyDown);\n    window.removeEventListener('touchend', this.onWindowTouchEnd);\n  }\n\n  onDragStart = (start: DragStart) => {\n    const id: string = start.draggableId;\n    const selected = this.state.selectedTaskIds.find((taskId): boolean => taskId === id);\n\n    // if dragging an item that is not selected - unselect all items\n    if (!selected) {\n      this.unselectAll();\n    }\n    this.setState({\n      draggingTaskId: start.draggableId,\n    });\n  };\n\n  onDragEnd = (result: DropResult) => {\n    const destination: DraggableLocation = result.destination;\n    const source: DraggableLocation = result.source;\n\n    // nothing to do\n    if (!destination || result.reason === 'CANCEL') {\n      this.setState({\n        draggingTaskId: null,\n      });\n      return;\n    }\n\n    const processed: ReorderResult = mutliDragAwareReorder({\n      entities: this.state.entities,\n      selectedTaskIds: this.state.selectedTaskIds,\n      source,\n      destination,\n    });\n\n    this.setState({\n      ...processed,\n      draggingTaskId: null,\n    });\n  };\n\n  onWindowKeyDown = (event) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      this.unselectAll();\n    }\n  };\n\n  onWindowClick = (event) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.unselectAll();\n  };\n\n  onWindowTouchEnd = (event: TouchEvent) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.unselectAll();\n  };\n\n  toggleSelection = (taskId) => {\n    console.log('toggleSelection', taskId);\n\n    const selectedTaskIds = this.state.selectedTaskIds;\n    const wasSelected: boolean = selectedTaskIds.includes(taskId);\n    const newTaskIds = (() => {\n      // Task was not previously selected\n      // now will be the only selected item\n      if (!wasSelected) {\n        return [taskId];\n      }\n\n      // Task was part of a selected group\n      // will now become the only selected item\n      if (selectedTaskIds.length > 1) {\n        return [taskId];\n      }\n\n      // task was previously selected but not in a group\n      // we will now clear the selection\n      return [];\n    })();\n\n    this.setState({\n      selectedTaskIds: newTaskIds,\n    });\n  };\n\n  toggleSelectionInGroup = (taskId) => {\n    const selectedTaskIds = this.state.selectedTaskIds;\n    const index: number = selectedTaskIds.indexOf(taskId);\n\n    // if not selected - add it to the selected items\n    if (index === -1) {\n      this.setState({\n        selectedTaskIds: [...selectedTaskIds, taskId],\n      });\n      return;\n    }\n\n    // it was previously selected and now needs to be removed from the group\n    const shallow = [...selectedTaskIds];\n    shallow.splice(index, 1);\n\n    this.setState({\n      selectedTaskIds: shallow,\n    });\n  };\n\n  // This behaviour matches the MacOSX finder selection\n  multiSelectTo = (newTaskId) => {\n    const updated = multiSelect(this.state.entities, this.state.selectedTaskIds, newTaskId);\n\n    if (updated == null) {\n      return;\n    }\n\n    this.setState({\n      selectedTaskIds: updated,\n    });\n  };\n\n  unselect = () => {\n    this.unselectAll();\n  };\n\n  unselectAll = () => {\n    this.setState({\n      selectedTaskIds: [],\n    });\n  };\n\n  render() {\n    const entities = this.state.entities;\n    const selected = this.state.selectedTaskIds;\n\n    return (\n      <DragDropContext onDragStart={this.onDragStart} onDragEnd={this.onDragEnd}>\n        <div className={styles.container}>\n          {entities.columnOrder.map((columnId) => (\n            <Column\n              column={entities.columns[columnId]}\n              tasks={getTasks(entities, columnId)}\n              selectedTaskIds={selected}\n              key={columnId}\n              draggingTaskId={this.state.draggingTaskId}\n              toggleSelection={this.toggleSelection}\n              toggleSelectionInGroup={this.toggleSelectionInGroup}\n              multiSelectTo={this.multiSelectTo}\n            />\n          ))}\n        </div>\n      </DragDropContext>\n    );\n  }\n}",H="const tasks = Array.from({ length: 10 }, (v, k) => k).map((val: number) => ({\n  id: `task-${val}`,\n  content: `Task ${val}`,\n}));\n\nconst taskMap = tasks.reduce((previous, current) => {\n  previous[current.id] = current;\n  return previous;\n}, {});\n\nconst todo = {\n  id: 'todo',\n  title: 'To do',\n  taskIds: tasks.map((task) => task.id),\n};\n\nconst done = {\n  id: 'done',\n  title: 'Done',\n  taskIds: [],\n};\n\nconst entities = {\n  columnOrder: [todo.id, done.id],\n  columns: {\n    [todo.id]: todo,\n    [done.id]: done,\n  },\n  tasks: taskMap,\n};\n\nexport default entities;",w="// @flow\nimport { DraggableLocation } from 'react-beautiful-dnd';\n\nimport reorder from '../reorder';\n\ntype Id = string;\n\ntype Task = {\n  id: Id;\n  content: string;\n};\n\ntype Column = {\n  id: string;\n  title: string;\n  taskIds: Id[];\n};\n\ntype ColumnMap = {\n  [columnId: Id]: Column;\n};\n\ntype TaskMap = {\n  [taskId: Id]: Task;\n};\n\ntype Entities = {\n  columnOrder: Id[];\n  columns: ColumnMap;\n  tasks: TaskMap;\n};\n\ntype Args = {\n  entities: Entities;\n  selectedTaskIds: Id[];\n  source: DraggableLocation;\n  destination: DraggableLocation;\n};\n\nexport type Result = {\n  entities: Entities;\n  // a drop operations can change the order of the selected task array\n  selectedTaskIds: Id[];\n};\n\nconst withNewTaskIds = (column: Column, taskIds: Id[]): Column => ({\n  id: column.id,\n  title: column.title,\n  taskIds,\n});\n\nconst reorderSingleDrag = ({ entities, selectedTaskIds, source, destination }: Args): Result => {\n  // moving in the same list\n  if (source.droppableId === destination.droppableId) {\n    const column: Column = entities.columns[source.droppableId];\n    const reordered: Id[] = reorder(column.taskIds, source.index, destination.index);\n\n    const updated: Entities = {\n      ...entities,\n      columns: {\n        ...entities.columns,\n        [column.id]: withNewTaskIds(column, reordered),\n      },\n    };\n\n    return {\n      entities: updated,\n      selectedTaskIds,\n    };\n  }\n\n  // moving to a new list\n  const home: Column = entities.columns[source.droppableId];\n  const foreign: Column = entities.columns[destination.droppableId];\n\n  // the id of the task to be moved\n  const taskId: Id = home.taskIds[source.index];\n\n  // remove from home column\n  const newHomeTaskIds: Id[] = [...home.taskIds];\n  newHomeTaskIds.splice(source.index, 1);\n\n  // add to foreign column\n  const newForeignTaskIds: Id[] = [...foreign.taskIds];\n  newForeignTaskIds.splice(destination.index, 0, taskId);\n\n  const updated: Entities = {\n    ...entities,\n    columns: {\n      ...entities.columns,\n      [home.id]: withNewTaskIds(home, newHomeTaskIds),\n      [foreign.id]: withNewTaskIds(foreign, newForeignTaskIds),\n    },\n  };\n\n  return {\n    entities: updated,\n    selectedTaskIds,\n  };\n};\n\ntype TaskId = Id;\n\nexport const getHomeColumn = (entities: Entities, taskId: TaskId): Column => {\n  const columnId: Id = entities.columnOrder.find((id: Id) => {\n    const column: Column = entities.columns[id];\n    return column.taskIds.includes(taskId);\n  });\n\n  return entities.columns[columnId];\n};\n\nconst reorderMultiDrag = ({ entities, selectedTaskIds, source, destination }: Args): Result => {\n  const start: Column = entities.columns[source.droppableId];\n  const dragged: TaskId = start.taskIds[source.index];\n\n  const insertAtIndex: number = (() => {\n    const destinationIndexOffset: number = selectedTaskIds.reduce(\n      (previous: number, current: TaskId): number => {\n        if (current === dragged) {\n          return previous;\n        }\n\n        const final: Column = entities.columns[destination.droppableId];\n        const column: Column = getHomeColumn(entities, current);\n\n        if (column !== final) {\n          return previous;\n        }\n\n        const index: number = column.taskIds.indexOf(current);\n\n        if (index >= destination.index) {\n          return previous;\n        }\n\n        // the selected item is before the destination index\n        // we need to account for this when inserting into the new location\n        return previous + 1;\n      },\n      0,\n    );\n\n    const result: number = destination.index - destinationIndexOffset;\n    return result;\n  })();\n\n  // doing the ordering now as we are required to look up columns\n  // and know original ordering\n  const orderedSelectedTaskIds: TaskId[] = [...selectedTaskIds];\n  orderedSelectedTaskIds.sort((a: TaskId, b: TaskId): number => {\n    // moving the dragged item to the top of the list\n    if (a === dragged) {\n      return -1;\n    }\n    if (b === dragged) {\n      return 1;\n    }\n\n    // sorting by their natural indexes\n    const columnForA: Column = getHomeColumn(entities, a);\n    const indexOfA: number = columnForA.taskIds.indexOf(a);\n    const columnForB: Column = getHomeColumn(entities, b);\n    const indexOfB: number = columnForB.taskIds.indexOf(b);\n\n    if (indexOfA !== indexOfB) {\n      return indexOfA - indexOfB;\n    }\n\n    // sorting by their order in the selectedTaskIds list\n    return -1;\n  });\n\n  // we need to remove all of the selected tasks from their columns\n  const withRemovedTasks: ColumnMap = entities.columnOrder.reduce(\n    (previous: ColumnMap, columnId: Id): ColumnMap => {\n      const column: Column = entities.columns[columnId];\n\n      // remove the id's of the items that are selected\n      const remainingTaskIds: TaskId[] = column.taskIds.filter(\n        (id: TaskId): boolean => !selectedTaskIds.includes(id),\n      );\n\n      previous[column.id] = withNewTaskIds(column, remainingTaskIds);\n      return previous;\n    },\n    entities.columns,\n  );\n\n  const final: Column = withRemovedTasks[destination.droppableId];\n  const withInserted: TaskId[] = (() => {\n    const base: TaskId[] = [...final.taskIds];\n    base.splice(insertAtIndex, 0, ...orderedSelectedTaskIds);\n    return base;\n  })();\n\n  // insert all selected tasks into final column\n  const withAddedTasks: ColumnMap = {\n    ...withRemovedTasks,\n    [final.id]: withNewTaskIds(final, withInserted),\n  };\n\n  const updated: Entities = {\n    ...entities,\n    columns: withAddedTasks,\n  };\n\n  return {\n    entities: updated,\n    selectedTaskIds: orderedSelectedTaskIds,\n  };\n};\n\nexport const mutliDragAwareReorder = (args: Args): Result => {\n  if (args.selectedTaskIds.length > 1) {\n    return reorderMultiDrag(args);\n  }\n  return reorderSingleDrag(args);\n};\n\nexport const multiSelectTo = (\n  entities: Entities,\n  selectedTaskIds: Id[],\n  newTaskId: TaskId,\n): Id[] | null => {\n  // Nothing already selected\n  if (!selectedTaskIds.length) {\n    return [newTaskId];\n  }\n\n  const columnOfNew: Column = getHomeColumn(entities, newTaskId);\n  const indexOfNew: number = columnOfNew.taskIds.indexOf(newTaskId);\n\n  const lastSelected: Id = selectedTaskIds[selectedTaskIds.length - 1];\n  const columnOfLast: Column = getHomeColumn(entities, lastSelected);\n  const indexOfLast: number = columnOfLast.taskIds.indexOf(lastSelected);\n\n  // multi selecting to another column\n  // select everything up to the index of the current item\n  if (columnOfNew !== columnOfLast) {\n    return columnOfNew.taskIds.slice(0, indexOfNew + 1);\n  }\n\n  // multi selecting in the same column\n  // need to select everything between the last index and the current index inclusive\n\n  // nothing to do here\n  if (indexOfNew === indexOfLast) {\n    return null;\n  }\n\n  const isSelectingForwards: boolean = indexOfNew > indexOfLast;\n  const start: number = isSelectingForwards ? indexOfLast : indexOfNew;\n  const end: number = isSelectingForwards ? indexOfNew : indexOfLast;\n\n  const inBetween: Id[] = columnOfNew.taskIds.slice(start, end + 1);\n\n  // everything inbetween needs to have it's selection toggled.\n  // with the exception of the start and end values which will always be selected\n\n  const toAdd: Id[] = inBetween.filter((taskId: Id): boolean => {\n    // if already selected: then no need to select it again\n    if (selectedTaskIds.includes(taskId)) {\n      return false;\n    }\n    return true;\n  });\n\n  const sorted: Id[] = isSelectingForwards ? toAdd : [...toAdd].reverse();\n  const combined: Id[] = [...selectedTaskIds, ...sorted];\n\n  return combined;\n};",x="// @flow\nimport React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { Droppable } from 'react-beautiful-dnd';\nimport type { DroppableProvided, DroppableStateSnapshot } from 'react-beautiful-dnd';\nimport Task from './task';\nimport styles from './index.modules.less';\n\ntype Id = string;\n\ntype TaskType = {\n  id: Id;\n  content: string;\n};\n\nexport type ColumnType = {\n  id: string;\n  title: string;\n  taskIds: Id[];\n};\n\ntype Props = {\n  column: ColumnType;\n  tasks: TaskType[];\n  selectedTaskIds: Id[];\n  draggingTaskId?: Id;\n  toggleSelection: (taskId: Id) => void;\n  toggleSelectionInGroup: (taskId: Id) => void;\n  multiSelectTo: (taskId: Id) => void;\n};\n\ntype TaskIdMap = {\n  [taskId: Id]: true;\n};\n\nconst getSelectedMap = memoizeOne((selectedTaskIds: Id[]) =>\n  selectedTaskIds.reduce((previous: TaskIdMap, current: Id): TaskIdMap => {\n    previous[current] = true;\n    return previous;\n  }, {}),\n);\n\nexport default class Column extends Component<Props> {\n  render() {\n    const column: ColumnType = this.props.column;\n    const tasks: TaskType[] = this.props.tasks;\n    const selectedTaskIds: Id[] = this.props.selectedTaskIds;\n    const draggingTaskId: Id = this.props.draggingTaskId;\n    return (\n      <div className={styles['column-container']}>\n        <h3>{column.title}</h3>\n        <Droppable droppableId={column.id}>\n          {(provided: DroppableProvided, snapshot: DroppableStateSnapshot) => (\n            <div\n              className={styles['task-list']}\n              ref={provided.innerRef}\n              style={{\n                backgroundColor: snapshot.isDraggingOver ? '#6B778C' : '',\n              }}\n              {...provided.droppableProps}\n            >\n              {tasks.map((task: TaskType, index: number) => {\n                const isSelected: boolean = Boolean(getSelectedMap(selectedTaskIds)[task.id]);\n                const isGhosting: boolean =\n                  isSelected && Boolean(draggingTaskId) && draggingTaskId !== task.id;\n                return (\n                  <Task\n                    task={task}\n                    index={index}\n                    key={task.id}\n                    isSelected={isSelected}\n                    isGhosting={isGhosting}\n                    selectionCount={selectedTaskIds.length}\n                    toggleSelection={this.props.toggleSelection}\n                    toggleSelectionInGroup={this.props.toggleSelectionInGroup}\n                    multiSelectTo={this.props.multiSelectTo}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n}",I="import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport type { DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\nimport styles from './index.modules.less';\n\ntype Id = string;\n\ntype TaskType = {\n  id: Id;\n  content: string;\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst primaryButton = 0;\n\ntype Props = {\n  task: TaskType;\n  index: number;\n  isSelected: boolean;\n  isGhosting: boolean;\n  selectionCount: number;\n  toggleSelection: (taskId: Id) => void;\n  toggleSelectionInGroup: (taskId: Id) => void;\n  multiSelectTo: (taskId: Id) => void;\n};\n\ntype GetBackgroundColorArgs = {\n  isSelected?: boolean;\n  isDragging?: boolean;\n  isGhosting?: boolean;\n};\n\nconst getBackgroundColor = ({ isSelected, isGhosting }: GetBackgroundColorArgs): string => {\n  if (isGhosting) {\n    return '#FAFBFC';\n  }\n\n  if (isSelected) {\n    return '#DEEBFF';\n  }\n\n  return '#FAFBFC';\n};\n\nconst getColor = ({ isSelected, isGhosting }): string => {\n  if (isGhosting) {\n    return 'darkgrey';\n  }\n  if (isSelected) {\n    return '#2684FF';\n  }\n  return '#091E42';\n};\n\nconst keyCodes = {\n  enter: 13,\n  escape: 27,\n  arrowDown: 40,\n  arrowUp: 38,\n  tab: 9,\n};\n\nexport default class Task extends Component<Props> {\n  onKeyDown = (\n    event: KeyboardEvent,\n    provided: DraggableProvided,\n    snapshot: DraggableStateSnapshot,\n  ) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (snapshot.isDragging) {\n      return;\n    }\n\n    if (event.keyCode !== keyCodes.enter) {\n      return;\n    }\n\n    // we are using the event for selection\n    event.preventDefault();\n\n    this.performAction(event);\n  };\n\n  // Using onClick as it will be correctly\n  // preventing if there was a drag\n  onClick = (event) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.button !== primaryButton) {\n      return;\n    }\n\n    // marking the event as used\n    event.preventDefault();\n\n    this.performAction(event);\n  };\n\n  onTouchEnd = (event) => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // marking the event as used\n    // we would also need to add some extra logic to prevent the click\n    // if this element was an anchor\n    event.preventDefault();\n    this.props.toggleSelectionInGroup(this.props.task.id);\n  };\n\n  // Determines if the platform specific toggle selection in group key was used\n  wasToggleInSelectionGroupKeyUsed = (event: MouseEvent | KeyboardEvent) => {\n    const isUsingWindows = navigator.platform.indexOf('Win') >= 0;\n    return isUsingWindows ? event.ctrlKey : event.metaKey;\n  };\n\n  // Determines if the multiSelect key was used\n  wasMultiSelectKeyUsed = (event: MouseEvent | KeyboardEvent) => event.shiftKey;\n\n  performAction = (event: MouseEvent | KeyboardEvent) => {\n    const { task, toggleSelection, toggleSelectionInGroup, multiSelectTo } = this.props;\n\n    if (this.wasToggleInSelectionGroupKeyUsed(event)) {\n      toggleSelectionInGroup(task.id);\n      return;\n    }\n\n    if (this.wasMultiSelectKeyUsed(event)) {\n      multiSelectTo(task.id);\n      return;\n    }\n\n    toggleSelection(task.id);\n  };\n\n  render() {\n    const task: TaskType = this.props.task;\n    const index: number = this.props.index;\n    const isSelected: boolean = this.props.isSelected;\n    const selectionCount: number = this.props.selectionCount;\n    const isGhosting: boolean = this.props.isGhosting;\n    return (\n      <Draggable draggableId={task.id} index={index}>\n        {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => {\n          const shouldShowSelection: boolean = snapshot.isDragging && selectionCount > 1;\n\n          const containerStyles = {\n            ...provided.draggableProps.style,\n            backgroundColor: getBackgroundColor({ isSelected, isGhosting }),\n            color: getColor({ isSelected, isGhosting }),\n            boxShadow: snapshot.isDragging ? '2px 2px 1px #8993A4' : '',\n            opacity: isGhosting ? '0.8' : '',\n          };\n\n          return (\n            <div\n              className={styles['task-container']}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              onClick={this.onClick}\n              onTouchEnd={this.onTouchEnd}\n              onKeyDown={(event: any) => this.onKeyDown(event, provided, snapshot)}\n              style={containerStyles}\n            >\n              <div className={styles['task-content']}>{task.content}</div>\n              {shouldShowSelection ? (\n                <div className={styles['selection-count']}>{selectionCount}</div>\n              ) : null}\n            </div>\n          );\n        }}\n      </Draggable>\n    );\n  }\n}",T=".container {\n  display: flex;\n  user-select: none;\n}\n\n.column-container {\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin: 8px;\n  background-color: #c1c7d0;\n  border: 1px solid #7a869a;\n  border-radius: 2px;\n}\n\n.task-list {\n  flex-grow: 1;\n  min-height: 200px;\n  padding: 8px;\n  transition: background-color 0.2s ease;\n}\n\n.task-container {\n  /* needed for SelectionCount */\n  position: relative;\n  margin-bottom: 8px;\n  padding: 8px;\n  color: #091e42;\n  font-size: 18px;\n  background-color: #fafbfc;\n  border: 3px solid #8993a4;\n  border-radius: 2px;\n\n  /* avoid default outline which looks lame with the position: absolute; */\n\n  &:focus {\n    border-color: #57d9a3;\n    outline: none;\n  }\n}\n\n.task-content {\n}\n\n.selection-count {\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  width: 30px;\n  height: 30px;\n  color: #fff;\n  font-size: 0.8rem;\n  line-height: 30px;\n  text-align: center;\n  background: #6b778c;\n  border-radius: 50%;\n}",C="import React from 'react';\nimport { Button } from 'antd';\nimport { ButtonDrawer } from 'assui';\n\nconst Content = ({ drawerAction }) => (\n  <div>\n    \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n    <Button type=\"primary\" onClick={() => drawerAction.close()}>\n      \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n    </Button>\n  </div>\n);\n\nexport default () => (\n  <div>\n    <ButtonDrawer\n      title=\"demo\"\n      footer={null}\n      onCancel={() => console.log('onCancel')}\n      trigger={<span>open modal</span>}\n    >\n      <Content />\n    </ButtonDrawer>\n  </div>\n);",M="import React, { useRef } from 'react';\nimport { Button } from 'antd';\nimport { ButtonDrawer } from 'assui';\n\nconst Content = ({ drawerAction }) => (\n  <div>\n    \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n    <Button type=\"primary\" onClick={() => drawerAction.close()}>\n      \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n    </Button>\n  </div>\n);\n\nconst Demo = () => {\n  const drawerRef = useRef();\n  return (\n    <div>\n      <span onClick={() => drawerRef.current.open()}>Ref\u6253\u5f00</span>\n\n      <ButtonDrawer\n        title=\"demo\"\n        ref={drawerRef}\n        onCancel={() => console.log('onCancel')}\n        trigger={<Button disabled> disabled </Button>}\n      >\n        <Content />\n      </ButtonDrawer>\n    </div>\n  );\n};\n\nexport default Demo;",L="import React from 'react';\nimport { Button } from 'antd';\nimport { ButtonDrawer } from 'assui';\n\nconst Demo = () => (\n  <ButtonDrawer\n    title=\"demo\"\n    footer={null}\n    onCancel={() => console.log('onCancel')}\n    trigger={<span>open modal</span>}\n  >\n    {(drawerAction) => (\n      <div>\n        \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n        <Button type=\"primary\" onClick={() => drawerAction.close()}>\n          \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n        </Button>\n      </div>\n    )}\n  </ButtonDrawer>\n);\n\nexport default Demo;",D="import React from 'react';\nimport { Button } from 'antd';\nimport { ButtonModal } from 'assui';\n\nconst Content = ({ modalAction }) => (\n  <div>\n    \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n    <Button type=\"primary\" onClick={() => modalAction.close()}>\n      \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n    </Button>\n  </div>\n);\n\nexport default () => (\n  <div>\n    <ButtonModal\n      title=\"demo\"\n      footer={null}\n      onCancel={() => console.log('onCancel')}\n      trigger={<span>open modal</span>}\n    >\n      <Content />\n    </ButtonModal>\n  </div>\n);",R="import React, { useRef } from 'react';\nimport { Button } from 'antd';\nimport { ButtonModal } from 'assui';\n\nconst Content = ({ modalAction }) => {\n  return (\n    <div>\n      \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n      <Button type=\"primary\" onClick={() => modalAction.close()}>\n        \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n      </Button>\n    </div>\n  );\n};\n\nconst Demo = () => {\n  const modalRef = useRef();\n  console.log('23', modalRef);\n  return (\n    <div>\n      <span onClick={() => modalRef.current.open()}>Ref\u6253\u5f00</span>\n\n      <ButtonModal\n        title=\"demo\"\n        ref={modalRef}\n        onCancel={() => console.log('onCancel')}\n        onOk={() => modalRef.current.close()}\n        trigger={<Button disabled> disabled </Button>}\n      >\n        <Content />\n      </ButtonModal>\n    </div>\n  );\n};\n\nexport default Demo;",k="import React from 'react';\nimport { Button } from 'antd';\nimport { ButtonModal } from 'assui';\n\nconst Demo = () => (\n  <ButtonModal\n    title=\"demo\"\n    footer={null}\n    onCancel={() => console.log('onCancel')}\n    trigger={<span>open modal</span>}\n  >\n    {(modalAction) => (\n      <div>\n        \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n        <Button type=\"primary\" onClick={() => modalAction.close()}>\n          \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n        </Button>\n      </div>\n    )}\n  </ButtonModal>\n);\n\nexport default Demo;",S="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { ConditionInput } from 'assui';\n\nconst Demo = () => {\n  const onChange = (value) => {\n    console.log('Received value: ', value);\n  };\n\n  return (\n    <Descriptions layout=\"vertical\" column={8}>\n      <Descriptions.Item label=\"\u5355\u4e2a\u6b63\u5219(\u53ea\u80fd\u8f93\u5165\u6570\u5b57\u548c\u5b57\u6bcd)\" span={8}>\n        <ConditionInput regexp={/[^\\dA-Za-z]+/g} onChange={onChange} />\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u591a\u4e2a\u6b63\u5219(\u524d\u540e\u4e0d\u5141\u8bb8\u7a7a\u683c\u4e14\u4e0d\u80fd\u80fd\u8f93\u5165\u6570\u5b57)\" span={8}>\n        <ConditionInput regexp={['\\\\s', /\\d/g]} onChange={onChange} />\n      </Descriptions.Item>\n      <Descriptions.Item\n        label=\"\u81ea\u5b9a\u4e49\u4e0d\u7b26\u5408\u89c4\u5219\u7684\u5b57\u7684\u66ff\u6362\u503c(\u5982\u679c\u8f93\u5165\u6570\u5b57\u548c\u66ff\u6362\u6210p)\"\n        span={8}\n      >\n        <ConditionInput\n          regexp={[{ pattern: /\\d/g, replacement: 'p' }]}\n          onChange={onChange}\n        />\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default Demo;",P="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { ConditionInput } from 'assui';\n\nconst Demo = () => {\n  const onChange = (value) => {\n    console.log('Received value: ', value);\n  };\n\n  return (\n    <Descriptions layout=\"vertical\" column={8}>\n      <Descriptions.Item label=\"formatter\u683c\u5f0f\u5316value\" span={8}>\n        <ConditionInput\n          regexp={/[^A-Za-z]+/g}\n          formatter={(value) => value.toUpperCase()}\n          onChange={onChange}\n        />\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default Demo;",N="import React from 'react';\nimport { Form, Button } from 'antd';\nimport { ConditionInput } from 'assui';\n\nconst Demo = () => {\n  const onFinish = (values) => {\n    console.log('Received values: ', values);\n  };\n\n  return (\n    <Form onFinish={onFinish}>\n      <Form.Item name=\"IDAddress\" label=\"ID Address\">\n        <ConditionInput regexp={/[^A-Za-z]+/g} formatter={(value) => value.toUpperCase()} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Demo;",B="import React, { useState } from 'react';\nimport { Select } from 'antd';\nimport type { RangeValue } from 'rc-picker/lib/interface';\nimport { LabelCustomizeRangePicker, ConfigProvider, LocaleType } from 'assui';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst Demo = () => {\n  const now = moment();\n  const [date, setDate] = useState<RangeValue<moment.Moment>>([\n    now.clone().subtract(6, 'day').startOf('day'),\n    now,\n  ]);\n  const [locale, setLocale] = useState<LocaleType>('en-US');\n\n  const onDateChange = (value: RangeValue<moment.Moment>) => {\n    setDate(value);\n  };\n  function handleChange(value) {\n    setLocale(value);\n  }\n\n  return (\n    <div>\n      <Select onChange={handleChange} style={{ width: 200, marginBottom: 10 }}>\n        <Option value=\"en-US\">English</Option>\n        <Option value=\"zh-CN\">\u4e2d\u6587</Option>\n      </Select>\n      <ConfigProvider locale={locale}>\n        <LabelCustomizeRangePicker\n          label=\"\u7ed3\u7b97\u65f6\u95f4\"\n          value={date}\n          onChange={onDateChange}\n        />\n      </ConfigProvider>\n    </div>\n  );\n};\n\nexport default Demo;",O="import React from 'react';\nimport { Button, Input, message } from 'antd';\nimport { CopyToClipboard } from 'assui';\n\nexport default class App extends React.PureComponent {\n  state = { value: 'some\\ntext' };\n\n  onChange = ({ target: { value } }) => {\n    this.setState({ value });\n  };\n\n  onCopy = () => {\n    message.success('\u590d\u5236\u6210\u529f');\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div>\n        <section style={{ marginBottom: 20 }}>\n          <Input.TextArea onChange={this.onChange} rows={4} cols={10} value={value} />\n        </section>\n        <CopyToClipboard onCopy={this.onCopy} text={value}>\n          <Button type=\"primary\">\u590d\u5236</Button>\n        </CopyToClipboard>\n      </div>\n    );\n  }\n}",A="import React from 'react';\nimport { CopyToClipboard } from 'assui';\n\nexport default () => (\n  <CopyToClipboard text=\"\u6210\u529f\u590d\u5236\u4fe1\u606f\" tooltipTitle=\"\u590d\u5236\u6210\u529f\">\n    <span>\u590d\u5236</span>\n  </CopyToClipboard>\n);",j="import React, { useState } from 'react';\nimport { HighlightTextarea } from 'assui';\n\nconst Demo = () => {\n  const [value, setValue] = useState('eslint lines- potato between-class-members');\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <HighlightTextarea value={value} highlight=\"potato\" onChange={(v) => setValue(v)} rows=\"4\" />\n    </div>\n  );\n};\nexport default Demo;",F="import React, { useState } from 'react';\nimport { HighlightTextarea } from 'assui';\n\nconst Demo = () => {\n  const [value, setValue] = useState('Dog, cat, chicken, goose. Dogs, cats, chickens, geese.');\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <HighlightTextarea\n        value={value}\n        highlight={/dogs?|cats?|g(oo|ee)se/gi}\n        onChange={(v) => setValue(v)}\n      />\n    </div>\n  );\n};\nexport default Demo;",z="import React, { useState } from 'react';\nimport { HighlightTextarea } from 'assui';\n\nconst Demo = () => {\n  const [value, setValue] = useState('abcdefgh');\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <HighlightTextarea value={value} onChange={(v) => setValue(v)} highlight={[2, 6]} />\n    </div>\n  );\n};\nexport default Demo;",U="import React, { useState } from 'react';\nimport { HighlightTextarea } from 'assui';\nimport './index.css';\n\nconst Demo = () => {\n  const [value, setValue] = useState('apple watermelon banana orange mango');\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <HighlightTextarea\n        value={value}\n        onChange={(v) => setValue(v)}\n        rows=\"8\"\n        highlight={['orange', /ba(na)*/gi, [0, 5]]}\n      />\n    </div>\n  );\n};\nexport default Demo;",K="mark.blue {\n  background-color: #a3daff !important;\n}\n\nmark.red {\n  background-color: #ffc9c9 !important;\n}\n\nmark.yellow {\n  background-color: #ffec99 !important;\n}",q="import React, { useState } from 'react';\nimport { HighlightTextarea } from 'assui';\nimport './index.css';\n\nconst Demo = () => {\n  const [value, setValue] = useState('Sun Mon Tue Wed Thu Fri Sat :) <-- remove the smiley...');\n\n  function getSmileyDayString(input) {\n    const dayStrings = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n    if (input.indexOf(':)') !== -1) {\n      const dayIndex = new Date().getDay();\n      return dayStrings[dayIndex];\n    }\n    // no smiley, no highlighting\n    return '';\n  }\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <HighlightTextarea\n        value={value}\n        onChange={(v) => setValue(v)}\n        highlight={getSmileyDayString}\n      />\n    </div>\n  );\n};\nexport default Demo;",V="import React, { useState } from 'react';\nimport { HighlightTextarea } from 'assui';\nimport './index.css';\n\nconst Demo = () => {\n  const [value, setValue] = useState(\n    \"Here's a blueberry. There's a strawberry. Surprise, it's a banananana! <h1>hello</h1>\",\n  );\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <HighlightTextarea\n        value={value}\n        onChange={(v) => setValue(v)}\n        highlight={[\n          {\n            highlight: 'strawberry',\n            className: 'red',\n          },\n          {\n            highlight: 'blueberry',\n            className: 'blue',\n          },\n          {\n            highlight: /ba(na)*/gi,\n            className: 'yellow',\n          },\n        ]}\n      />\n    </div>\n  );\n};\nexport default Demo;",_="import React, { useState, useRef } from 'react';\nimport { Tag } from 'antd';\nimport { HighlightTextarea } from 'assui';\n\nconst Demo = () => {\n  const textareaRef = useRef();\n  const [value, setValue] = useState('\u8fd9\u4e2a\u70ab\u9177\u7684\u4f8b\u5b50\uff0c\u8bf7\u70b9\u51fb\u597d\u5b57');\n\n  const handleClick = (tagValue) => {\n    const textareaEl = textareaRef.current;\n    const startPos = textareaEl.selectionStart;\n    const endPos = textareaEl.selectionEnd;\n    const beforeValue = textareaEl.value.substring(0, startPos);\n    const afterValue = textareaEl.value.substring(endPos, textareaEl.value.length);\n    const newValue = `${beforeValue}${tagValue}${afterValue}`;\n    setValue(newValue);\n    textareaEl.selectionStart = startPos + tagValue.length;\n    textareaEl.selectionEnd = startPos + tagValue.length;\n    textareaEl.focus();\n  };\n\n  return (\n    <div style={{ maxWidth: 800, border: 20 }}>\n      <Tag\n        color=\"magenta\"\n        onClick={() => handleClick('\u597d')}\n        style={{ marginBottom: 20, cursor: 'pointer' }}\n      >\n        \u597d\n      </Tag>\n\n      <HighlightTextarea\n        value={value}\n        highlight=\"\u597d\"\n        onChange={(v) => setValue(v)}\n        rows=\"4\"\n        ref={textareaRef}\n      />\n    </div>\n  );\n};\nexport default Demo;",X="import React from 'react';\nimport { HighlightWords } from 'assui';\n\nconst index = () => (\n  <div>\n    <HighlightWords\n      highlightClassName=\"self\"\n      searchWords={['\u4e2a', '2', '\u5b50']}\n      autoEscape\n      textToHighlight=\"\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u4f8b\u5b50 9527\"\n    />\n  </div>\n);\n\nexport default index;",W="import React from 'react';\nimport { HighlightWords } from 'assui';\nimport { Input, Row, Col } from 'antd';\nimport styles from './index.css';\n\nexport default class HighlighterExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: '\u7684 \u4e0a \u4e0d\u505c',\n      textToHighlight: `\u6c60\u5858\u8fb9\u7684\u6995\u6811\u4e0a \u77e5\u4e86\u5728\u58f0\u58f0\u53eb\u7740\u590f\u5929 \u64cd\u573a\u8fb9\u7684\u79cb\u5343\u4e0a \u53ea\u6709\u90a3\u8774\u8776\u505c\u5728\u4e0a\u9762 \u9ed1\u677f\u4e0a\u8001\u5e08\u7684\u7c89\u7b14 \u8fd8\u5728\u62fc\u547d\u53fd\u53fd\u55b3\u55b3\u5199\u4e2a\u4e0d\u505c \u7b49\u5f85\u7740\u4e0b\u8bfe \u7b49\u5f85\u7740\u653e\u5b66 \u7b49\u5f85\u6e38\u620f\u7684\u7ae5\u5e74`,\n      activeIndex: -1,\n    };\n  }\n\n  render() {\n    const { activeIndex, searchText, textToHighlight } = this.state;\n    const searchWords = searchText.split(/\\s/).filter((word) => word);\n\n    return (\n      <div>\n        <Row gutter={16}>\n          <Col span={6}>\n            <h4> \u9ad8\u4eae\u5b57\u7b26\u4e32 </h4>\n            <Input\n              name=\"searchTerms\"\n              value={searchText}\n              onChange={(event) => this.setState({ searchText: event.target.value })}\n            />\n          </Col>\n          <Col span={6}>\n            <h4> Active Index </h4>\n            <Input\n              name=\"activeIndex\"\n              value={activeIndex}\n              onChange={(event) => this.setState({ activeIndex: parseInt(event.target.value, 10) })}\n              type=\"number\"\n            />\n          </Col>\n        </Row>\n\n        <h4 style={{ marginTop: 20 }}> \u8f93\u5165\u6587\u6863 </h4>\n        <Input.TextArea\n          name=\"textToHighlight\"\n          value={textToHighlight}\n          onChange={(event) => this.setState({ textToHighlight: event.target.value })}\n        />\n\n        <h4 style={{ marginTop: 20 }}> \u8f93\u51fa </h4>\n\n        <HighlightWords\n          activeClassName={styles.active}\n          activeIndex={activeIndex}\n          highlightClassName={styles.highlight}\n          searchWords={searchWords}\n          textToHighlight={textToHighlight}\n        />\n      </div>\n    );\n  }\n}",G=".highlight {\n  background-color: #ffd54f;\n}\n\n.active {\n  background-color: #f48f42;\n}",Y="import React from 'react';\nimport { SingleImgUpload, ImgCrop } from 'assui';\nimport { PlusOutlined } from 'a-icons';\n\nimport 'assui/lib/img-crop/style/index';\n\nconst Demo = () => {\n  const onSuccess = (resValues) => {\n    console.log('Received values: ', resValues);\n  };\n\n  return (\n    <ImgCrop rotate aspect={400 / 200} zipImg={{ width: 400, height: 200 }}>\n      <SingleImgUpload\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        onSuccess={onSuccess}\n      >\n        <PlusOutlined />\n      </SingleImgUpload>\n    </ImgCrop>\n  );\n};\n\nexport default Demo;",Q='import React from \'react\';\nimport { KeepTab } from \'assui\';\n\nconst { TabPane } = KeepTab;\n\nconst Demo = () => {\n  const onChange = (key) => {\n    console.log(\'Received key: \', key);\n  };\n\n  return (\n    <KeepTab defaultActiveKey="2" onChange={onChange}>\n      <TabPane tab="Tab 1" key="1">\n        Content of Tab Pane 1\n      </TabPane>\n      <TabPane tab="Tab 2" key="2">\n        Content of Tab Pane 2\n      </TabPane>\n      <TabPane tab="Tab 3" key="3" disabled>\n        Content of Tab Pane 3\n      </TabPane>\n    </KeepTab>\n  );\n};\n\nexport default Demo;',$="import React from 'react';\nimport { Button, Space } from 'antd';\nimport { KeepTab } from 'assui';\nimport { qsHelp } from 'aa-utils';\n\nconst { TabPane } = KeepTab;\n\nconst Demo = () => {\n  const [activeKey, setActiveKey] = React.useState(qsHelp.getQueryObject().control || '1');\n  const onChange = (key) => {\n    setActiveKey(key);\n    console.log('Received key: ', key);\n  };\n\n  return (\n    <div>\n      <Space>\n        <Button onClick={() => setActiveKey('1')}>to 1</Button>\n        <Button onClick={() => setActiveKey('2')}>to 2</Button>\n        <Button onClick={() => setActiveKey('3')}>to 3</Button>\n      </Space>\n      <KeepTab activeKey={activeKey} onChange={onChange} saveActiveKeyName=\"control\">\n        <TabPane tab=\"Tab 1\" key=\"1\">\n          Content of Tab Pane 1\n        </TabPane>\n        <TabPane tab=\"Tab 2\" key=\"2\">\n          Content of Tab Pane 2\n        </TabPane>\n        <TabPane tab=\"Tab 3\" key=\"3\" disabled>\n          Content of Tab Pane 3\n        </TabPane>\n      </KeepTab>\n    </div>\n  );\n};\n\nexport default Demo;",J='import React from \'react\';\nimport { KeepTab } from \'assui\';\nimport \'./index.modules.less\';\n\nconst { TabPane } = KeepTab;\n\nconst Demo = () => {\n  const onChange = (key) => {\n    console.log(\'Received key: \', key);\n  };\n\n  return (\n    <div style={{ backgroundColor: \'#f5f6fa\', padding: 60 }}>\n      <KeepTab\n        defaultActiveKey="2"\n        saveActiveKeyName="countDemo"\n        className="assui-tabs-card"\n        onChange={onChange}\n      >\n        <TabPane tab="Tab 1" key="1" count={2}>\n          Content of Tab Pane 1\n        </TabPane>\n        <TabPane tab="Tab 2" key="2">\n          Content of Tab Pane 232323\n        </TabPane>\n        <TabPane tab="Tab 3" key="3">\n          Content of Tab Pane 3\n        </TabPane>\n      </KeepTab>\n    </div>\n  );\n};\n\nexport default Demo;',Z=".assui-tabs-card {\n  .ant-tabs-tab + .ant-tabs-tab {\n    margin: 0;\n  }\n\n  &.ant-tabs-top > .ant-tabs-nav:before {\n    display: none;\n  }\n\n  .ant-tabs-nav-list {\n    background-color: #fff;\n    border-radius: 6px;\n    box-shadow: 0 11px rgba(92, 118, 166, 0.05);\n\n    .ant-tabs-tab {\n      min-width: 96px;\n      padding: 9px 16px;\n      color: #8598bb;\n      font-size: 16px;\n      border-radius: 6px;\n\n      .ant-tabs-tab-btn {\n        width: 100%;\n        line-height: 22px;\n        text-align: center;\n        transition: none;\n      }\n    }\n\n    .tab-badge {\n      color: #8598bb;\n      font-size: 16px;\n    }\n\n    .ant-badge-count {\n      display: inline-block;\n      height: 14px;\n      padding-right: 4px;\n      padding-left: 3px;\n      font-size: 12px;\n      line-height: 14px;\n      text-align: center;\n      vertical-align: middle;\n      background-color: #ffd100;\n      border-radius: 6.5px;\n      transform: scale(0.9);\n    }\n\n    .ant-tabs-tab-active {\n      background-color: #3093ea;\n\n      .tab-badge {\n        color: #fff;\n      }\n\n      .ant-tabs-tab-btn {\n        color: #fff;\n        transition: none;\n      }\n    }\n\n    .ant-tabs-ink-bar {\n      display: none;\n    }\n  }\n}",ee="import React from 'react';\nimport { Form, Button } from 'antd';\nimport { LabelAutoComplete } from 'assui';\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n  const [options, setOptions] = React.useState<any[]>([\n    { value: 'Burns Bay Road', disabled: true },\n    { value: 'Downing Street' },\n    { value: 'Wall Street' },\n  ]);\n  const onBlur = (e) => {\n    console.log(e);\n  };\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name=\"account\">\n        <LabelAutoComplete\n          label=\"\u8d26\u6237\"\n          allowClear={true}\n          options={options}\n          onBlur={onBlur}\n        />\n      </Form.Item>\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",ne="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { LabelConditionInput } from 'assui';\n\nconst Demo = () => {\n  const onChange = (value) => {\n    console.log('Received value: ', value);\n  };\n\n  return (\n    <Descriptions layout=\"vertical\" column={8}>\n      <Descriptions.Item span={8}>\n        <LabelConditionInput\n          label=\"\u5355\u4e2a\u6b63\u5219(\u53ea\u80fd\u8f93\u5165\u6570\u5b57\u548c\u5b57\u6bcd)\"\n          regexp={/[^\\dA-Za-z]+/g}\n          onChange={onChange}\n        />\n      </Descriptions.Item>\n      <Descriptions.Item span={8}>\n        <LabelConditionInput\n          label=\"\u591a\u4e2a\u6b63\u5219(\u524d\u540e\u4e0d\u5141\u8bb8\u7a7a\u683c\u4e14\u4e0d\u80fd\u80fd\u8f93\u5165\u6570\u5b57)\"\n          regexp={['\\\\s', /\\d/g]}\n          onChange={onChange}\n        />\n      </Descriptions.Item>\n      <Descriptions.Item span={8}>\n        <LabelConditionInput\n          label=\"\u81ea\u5b9a\u4e49\u4e0d\u7b26\u5408\u89c4\u5219\u7684\u5b57\u7684\u66ff\u6362\u503c(\u5982\u679c\u8f93\u5165\u6570\u5b57\u548c\u66ff\u6362\u6210p)\"\n          regexp={[{ pattern: /\\d/g, replacement: 'p' }]}\n          onChange={onChange}\n        />\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default Demo;",te='import React from \'react\';\nimport { Form, Button } from \'antd\';\nimport { LabelCustomizeRangePicker } from \'assui\';\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log(\'value\', value);\n  };\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name="time" rules={[{ required: true }]}>\n        <LabelCustomizeRangePicker label="\u7ed3\u7b97\u65f6\u95f4" />\n      </Form.Item>\n      <Form.Item name="date" rules={[{ required: true }]}>\n        <LabelCustomizeRangePicker rangePickerType="origin" showTime />\n      </Form.Item>\n      <Button htmlType="submit">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;',ie="import React, { useState } from 'react';\nimport type { RangeValue } from 'rc-picker/lib/interface';\nimport { LabelCustomizeRangePicker } from 'assui';\nimport moment from 'moment';\n\nconst Demo = () => {\n  const now = moment();\n  const [date, setDate] = useState<RangeValue<moment.Moment>>([\n    now.clone().subtract(6, 'day').startOf('day'),\n    now,\n  ]);\n\n  const onDateChange = (value: RangeValue<moment.Moment>) => {\n    setDate(value);\n  };\n\n  return <LabelCustomizeRangePicker label=\"\u7ed3\u7b97\u65f6\u95f4\" value={date} onChange={onDateChange} />;\n};\n\nexport default Demo;",re="import React from 'react';\nimport { Form, Button } from 'antd';\nimport moment from 'moment';\nimport { LabelCustomizeRangePicker } from 'assui';\nimport type { RadioListType } from 'assui/lib/label-customize-range-picker';\nimport { dateTypeEnum } from 'assui/lib/label-customize-range-picker/defaultRadioList';\n\nconst now = moment();\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n\n  const radioList: RadioListType[] = [\n    {\n      key: '\u672c\u5468',\n      text: '\u672c\u5468',\n      value: [now.clone().startOf('week'), now.clone().endOf('day')],\n    },\n    {\n      key: 'MONTH',\n      text: '\u672c\u6708',\n      value: [now.clone().startOf('month'), now.clone().endOf('day')],\n    },\n    {\n      key: '\u4eca\u5929',\n      text: '\u4eca\u5929',\n      value: [now.clone().startOf('week'), now.clone().endOf('week')],\n    },\n    {\n      key: '\u660e\u5929',\n      text: '\u660e\u5929',\n      value: [\n        now.clone().add(1, 'day').startOf('day'),\n        now.clone().add(1, 'day').endOf('day'),\n      ],\n    },\n    {\n      key: '\u672a\u6765\u4e03\u5929',\n      text: '\u672a\u6765\u4e03\u5929',\n      value: [\n        now.clone().add(1, 'day').startOf('day'),\n        now.clone().add(7, 'day').endOf('day'),\n      ],\n    },\n  ];\n\n  const customizeTimeList = [\n    dateTypeEnum.BEFORE_365_DAY,\n    dateTypeEnum.BEFORE_180_DAY,\n    dateTypeEnum.BEFORE_7_DAY,\n  ];\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name=\"time\" rules={[{ required: true }]}>\n        <LabelCustomizeRangePicker label=\"\u5b8c\u5168\u81ea\u5b9a\u4e49\" radioList={radioList} />\n      </Form.Item>\n      <Form.Item name=\"date\" rules={[{ required: true }]}>\n        <LabelCustomizeRangePicker\n          label=\"\u534a\u81ea\u5b9a\u4e49\"\n          customizeTimeList={customizeTimeList}\n        />\n      </Form.Item>\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",ae="import React, { useState } from 'react';\nimport type { RangeValue } from 'rc-picker/lib/interface';\nimport { LabelCustomizeRangePicker } from 'assui';\n\nconst Demo = () => {\n  const initData: RangeValue<moment.Moment> = [null, null];\n\n  const [date, setDate] = useState<RangeValue<moment.Moment>>(initData);\n\n  const onDateChange = (value: RangeValue<moment.Moment>) => {\n    setDate(value);\n  };\n\n  return (\n    <LabelCustomizeRangePicker label=\"\u7ed3\u7b97\u65f6\u95f4\" value={date} onChange={onDateChange} maxScope={3} />\n  );\n};\n\nexport default Demo;",oe="import React from 'react';\nimport { Form, Button } from 'antd';\nimport { LabelDatePicker } from 'assui';\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name=\"account\" rules={[{ required: true }]}>\n        <LabelDatePicker label=\"\u5f00\u59cb\u65f6\u95f4\" />\n      </Form.Item>\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",se="import React from 'react';\nimport { Form, Button } from 'antd';\nimport {\n  LabelInput,\n  LabelDatePicker,\n  LabelRangePicker,\n  LabelSelect,\n  LabelTreeSelect,\n  LabelAutoComplete,\n} from 'assui';\n\nimport styles from './index.less';\n\nconst { Option } = LabelSelect;\n\nconst options = [\n  { value: 'Burns Bay Road', disabled: true },\n  { value: 'Downing Street' },\n  { value: 'Wall Street' },\n];\n\nconst treeData = [\n  {\n    title: 'Node1',\n    value: '0-0',\n    key: '0-0',\n    children: [\n      {\n        title: 'Child Node1',\n        value: '0-0-0',\n        key: '0-0-0',\n      },\n    ],\n  },\n  {\n    title: 'Node2',\n    value: '0-1',\n    key: '0-1',\n    children: [\n      {\n        title: 'Child Node3',\n        value: '0-1-0',\n        key: '0-1-0',\n      },\n      {\n        title: 'Child Node4',\n        value: '0-1-1',\n        key: '0-1-1',\n      },\n      {\n        title: 'Child Node5',\n        value: '0-1-2',\n        key: '0-1-2',\n      },\n    ],\n  },\n];\n\nconst Demo = () => {\n  const [value, setValue] = React.useState(['0-0-0']);\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n\n  const onChange = (value) => {\n    console.log('--', value);\n    setValue(value);\n  };\n\n  const tProps = {\n    treeData,\n    value: value,\n    onChange: onChange,\n    treeCheckable: true,\n    showCheckedStrategy: 'SHOW_ALL' as const,\n    style: {\n      width: '100%',\n    },\n  };\n\n  return (\n    <Form className={styles.form} onFinish={onFinish} initialValues={{ account: '' }}>\n      <Form.Item name=\"account23232323\" rules={[{ required: true }]}>\n        <LabelTreeSelect {...tProps} label=\"\u4ee3\u7406\u4eba\" unit=\"\u4eba\" />\n      </Form.Item>\n      <Form.Item name=\"acco12dunt\" rules={[{ required: true }]}>\n        <LabelAutoComplete label=\"\u8d26\u6237\" allowClear={true} options={options} />\n      </Form.Item>\n      <Form.Item name=\"accou111nt\" rules={[{ required: true }]}>\n        <LabelSelect label=\"\u8d26\u6237\">\n          <Option value=\"jack\">Jack</Option>\n          <Option value=\"lucy\">Lucy</Option>\n          <Option value=\"disabled\" disabled>\n            Disabled\n          </Option>\n          <Option value=\"Yiminghe\">yiminghe</Option>\n        </LabelSelect>\n      </Form.Item>\n\n      <Form.Item name=\"accoun232t\" rules={[{ required: true }]}>\n        <LabelRangePicker label=\"\u7ed3\u7b97\u65f6\u95f4\" />\n      </Form.Item>\n\n      <Form.Item name=\"account2323\" rules={[{ required: true }]}>\n        <LabelDatePicker label=\"\u8d26\" />\n      </Form.Item>\n      <Form.Item name=\"account\" rules={[{ required: true }]}>\n        <LabelInput label=\"\u8d26\u6237\u5b89\u629a\u662f\u7684\u8d26\u6237\u5b89\u629a\u662f\u7684\u8d26\u6237\u5b89\u629a\u662f\u7684\" />\n      </Form.Item>\n\n      <Form.Item name=\"adddd1\" rules={[{ required: true }]}>\n        <LabelInput label=\"\u5730\u57401\" suffix=\"CNY\" />\n      </Form.Item>\n\n      <Form.Item name=\"adddd2\" rules={[{ required: true }]}>\n        <LabelInput label=\"\u5730\u57402\" prefix=\"CNY\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" rules={[{ required: true }]}>\n        <LabelInput type=\"password\" maxLength={5} label=\"\u5bc6\u7801\" />\n      </Form.Item>\n\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",de=".form {\n  :global {\n    .ant-form-item-has-error {\n      .label-input-field {\n        border-color: #ff6b00;\n      }\n    }\n  }\n}",le="import React from 'react';\nimport { LabelNumberInput } from 'assui';\n\nconst Demo = () => {\n  const onChange = (value) => {\n    console.log(value, 'value');\n    console.log(typeof value);\n  };\n\n  return (\n    <LabelNumberInput label=\"\u6211\u662f\u6807\u9898\" maxLength={4} enableMinus onChange={onChange} />\n  );\n};\n\nexport default Demo;",pe="import React from 'react';\nimport { Form, Button } from 'antd';\nimport { LabelRangePicker } from 'assui';\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name=\"account\" rules={[{ required: true }]}>\n        <LabelRangePicker label=\"\u7ed3\u7b97\u65f6\u95f4\" />\n      </Form.Item>\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",ce='import React from \'react\';\nimport { Form, Button } from \'antd\';\nimport { LabelSelect } from \'assui\';\n\nconst { Option } = LabelSelect;\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log(\'value\', value);\n  };\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name="account" rules={[{ required: true }]}>\n        <LabelSelect label="\u8d26\u6237">\n          <Option value="jack">Jack</Option>\n          <Option value="lucy">Lucy</Option>\n          <Option value="disabled" disabled>\n            Disabled\n          </Option>\n          <Option value="Yiminghe">yiminghe</Option>\n        </LabelSelect>\n      </Form.Item>\n\n      <Form.Item name="account1" rules={[{ required: true }]}>\n        <LabelSelect label="\u8d26\u62372">\n          <Option value="jack">Jack</Option>\n          <Option value="lucy">Lucy</Option>\n          <Option value="disabled" disabled>\n            Disabled\n          </Option>\n          <Option value="Yiminghe">yiminghe</Option>\n        </LabelSelect>\n      </Form.Item>\n      <Button htmlType="submit">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;',ue='import React from \'react\';\nimport { Form, Button } from \'antd\';\nimport { LabelSelect } from \'assui\';\n\nconst { Option } = LabelSelect;\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log(\'value\', value);\n  };\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name="account" rules={[{ required: true }]}>\n        <LabelSelect label="\u8d26\u6237" mode="multiple">\n          <Option value="jack">Jack</Option>\n          <Option value="lucy">Lucy</Option>\n          <Option value="disabled" disabled>\n            Disabled\n          </Option>\n          <Option value="water">\n            \u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\u542b\u6c34\u7535\u8d39\n          </Option>\n          <Option value="long">\n            hello hello hello hello hello hellohello hello hello hello hello hello\n          </Option>\n          <Option value="Yiminghe">\n            yimingheyimingheyimingheyimingheyimingheyimingheyimingheyimingheyimingheyimingheyimingheyimingheyiminghey\n          </Option>\n        </LabelSelect>\n      </Form.Item>\n      <Button htmlType="submit">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;',me="import React from 'react';\nimport { Form, Button } from 'antd';\nimport { LabelTextArea } from 'assui';\n\nconst Demo = () => {\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n\n  return (\n    <Form onFinish={onFinish} initialValues={{ account: '2323' }}>\n      <Form.Item name=\"account\" rules={[{ required: true }]}>\n        <LabelTextArea label=\"\u8d26\u6237\" />\n      </Form.Item>\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",fe="import React from 'react';\nimport { Form, Button, TreeSelect } from 'antd';\nimport LabelTreeSelect from '../index';\nimport '../style/index';\n\nconst treeData = [\n  {\n    title: 'Node1',\n    value: '0-0',\n    key: '0-0',\n    children: [\n      {\n        title: 'Child Node1',\n        value: '0-0-0',\n        key: '0-0-0',\n      },\n    ],\n  },\n  {\n    title: 'Node2',\n    value: '0-1',\n    key: '0-1',\n    children: [\n      {\n        title: 'Child Node3',\n        value: '0-1-0',\n        key: '0-1-0',\n      },\n      {\n        title: 'Child Node4',\n        value: '0-1-1',\n        key: '0-1-1',\n      },\n      {\n        title: 'Child Node5',\n        value: '0-1-2',\n        key: '0-1-2',\n      },\n    ],\n  },\n];\n\nconst Demo = () => {\n  const [value, setValue] = React.useState(['0-0-0']);\n  const onFinish = (value: any) => {\n    console.log('value', value);\n  };\n\n  const { SHOW_ALL } = TreeSelect;\n\n  const onChange = (value) => {\n    console.log('--', value);\n    setValue(value);\n  };\n\n  const tProps = {\n    treeData,\n    value: value,\n    onChange: onChange,\n    treeCheckable: true,\n    showCheckedStrategy: SHOW_ALL,\n    style: {\n      width: '100%',\n    },\n  };\n\n  return (\n    <Form onFinish={onFinish} style={{ width: 500 }}>\n      <Form.Item name=\"account\" rules={[{ required: true }]}>\n        <LabelTreeSelect {...tProps} label=\"\u4ee3\u7406\u4eba\" unit=\"\u4eba\" />\n      </Form.Item>\n      <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n    </Form>\n  );\n};\n\nexport default Demo;",he="import React from 'react';\nimport useControllableValue from 'ahooks/lib/useControllableValue';\nimport type { BaseSelectRef } from 'rc-select';\nimport type { TreeSelectProps } from 'antd/lib/tree-select';\nimport TreeSelect from 'antd/lib/tree-select';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nexport interface LabelTreeSelectProps\n  extends Omit<TreeSelectProps<string[]>, 'onDropdownVisibleChange'> {\n  /** \u8f93\u5165\u6846\u7684label */\n  label?: React.ReactNode;\n  /** \u8f93\u5165\u6846value\u7684\u5355\u4f4d */\n  unit?: React.ReactNode;\n  onDropdownVisibleChange?: (value: boolean) => void;\n}\n\nconst LabelTreeSelect = (props: LabelTreeSelectProps) => {\n  const { className, label, unit, showSearch = false, onDropdownVisibleChange } = props;\n  const selectRef = React.useRef<BaseSelectRef>(null);\n  const [open, setOpen] = useControllableValue(props, {\n    valuePropName: 'open',\n    trigger: 'setOpen',\n  });\n\n  const [value, setValue] = useControllableValue(props);\n\n  const handleChange: TreeSelectProps<string | React.ReactNode>['onChange'] = (nextValue) => {\n    setValue(nextValue);\n  };\n\n  const handleLabelClick = () => {\n    if (!open) {\n      setOpen(!open);\n    }\n\n    selectRef.current?.focus();\n  };\n\n  const handleDropdownVisibleChange = (nextOpen: boolean) => {\n    setOpen(nextOpen);\n    onDropdownVisibleChange?.(nextOpen);\n  };\n\n  const isValueNotEmpty = !!value?.length;\n\n  return (\n    <div\n      className={classNames(\n        {\n          'label-tree-select': true,\n          'label-tree-select-label-scale': open || isValueNotEmpty,\n        },\n        className,\n      )}\n    >\n      <TreeSelect\n        showSearch={showSearch}\n        {...omit(props, ['open', 'onChange', 'className', 'label'])}\n        open={open}\n        ref={selectRef}\n        size=\"large\"\n        className=\"label-select-selector\"\n        onChange={handleChange}\n        onDropdownVisibleChange={handleDropdownVisibleChange}\n      />\n      {isValueNotEmpty && (\n        <div className=\"label-tree-select-value-length\">\n          <span>{value.length}</span>\n          {unit && <span>{unit}</span>}\n        </div>\n      )}\n\n      <label className=\"label-tree-select-text\" onClick={handleLabelClick}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default LabelTreeSelect;\n\nLabelTreeSelect.Option = Option;",ye="import 'antd/lib/tree-select/style';\nimport './index.less';",ve="/* stylelint-disable indentation */\n@import '~antd/lib/style/index.less';\n@import '../../style/themes/default.less';\n\n@color_9aa5b5: #9aa5b5;\n@font-size-base: 14px;\n\n.label-tree-select {\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .@{ant-prefix}-select:not(.@{ant-prefix}-select-customize-input) .@{ant-prefix}-select-selector {\n    height: 45px;\n    border: 1px solid #e5e5e5;\n    border-radius: 8px;\n    outline: none;\n  }\n\n  .@{ant-prefix}-select-selection-overflow {\n    display: none;\n  }\n\n  .@{ant-prefix}-select-open:not(.@{ant-prefix}-select-disabled).@{ant-prefix}-select:not(.@{ant-prefix}-select-customize-input)\n    .@{ant-prefix}-select-selector {\n    border-color: @labelFocusBorderColor;\n    box-shadow: none;\n  }\n\n  &-text {\n    position: absolute;\n    top: 12px;\n    left: 16px;\n    z-index: 2;\n    height: 20px;\n    color: @color_9aa5b5;\n    font-size: @font-size-base;\n    line-height: 20px;\n    transform-origin: top left;\n    cursor: pointer;\n    transition: all 0.2s ease-out;\n  }\n\n  &-label-scale {\n    .label-tree-select-text {\n      transform: translateY(@labelTextLabeltranslateY) scale(@labelTextLabelScale);\n      cursor: text;\n      pointer-events: none;\n    }\n\n    .label-tree-select-value-length {\n      position: absolute;\n      top: 20px;\n      left: 16px;\n    }\n  }\n}",be="import { NumberFormatInput } from 'assui';\n\nconst Demo = () => (\n  <NumberFormatInput value={2456981} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n);\nexport default Demo;",ge="import { NumberFormatInput } from 'assui';\n\nconst Demo = () => {\n  const onValueChange = (value) => {\n    console.log('---', value);\n  };\n  return <NumberFormatInput onValueChange={onValueChange} format=\"#### #### #### ####\" />;\n};\n\nexport default Demo;",Ee='import { NumberFormatInput } from \'assui\';\n\nconst Demo = () => <NumberFormatInput format="#### #### #### ####" mask="_" />;\n\nexport default Demo;',He="import { NumberFormatInput } from 'assui';\n\nconst Demo = () => {\n  const onValueChange = (value) => {\n    console.log('---', value);\n  };\n\n  return (\n    <NumberFormatInput\n      onValueChange={onValueChange}\n      format=\"##/##\"\n      placeholder=\"MM/YY\"\n      mask={['M', 'M', 'Y', 'Y']}\n    />\n  );\n};\n\nexport default Demo;",we="import { NumberFormatInput } from 'assui';\n\nconst Demo = () => <NumberFormatInput thousandSeparator={true} prefix={'$'} />;\n\nexport default Demo;",xe="import { NumberFormatInput } from 'assui';\n\nconst Demo = () => (\n  <NumberFormatInput\n    thousandSeparator={true}\n    thousandsGroupStyle=\"wan\"\n    prefix={'\xa5'}\n    value={123456789}\n  />\n);\n\nexport default Demo;",Ie="import { NumberFormatInput } from 'assui';\n\nconst MAX_VAL = 1400;\nconst withValueLimit = ({ floatValue }) => floatValue <= MAX_VAL;\nconst Demo = () => <NumberFormatInput value={12} isAllowed={withValueLimit} />;\n\nexport default Demo;",Te="import { NumberFormatInput } from 'assui';\n\nconst getInputRef = (el) => {\n  console.log(el);\n};\n\nconst Demo = () => <NumberFormatInput getInputRef={getInputRef} format=\"#### #### #### ####\" />;\nexport default Demo;",Ce="import React from 'react';\nimport { NumberInput } from 'assui';\n\nconst Demo = () => {\n  const TRef = React.useRef();\n  const onChange = (value) => {\n    console.log('22', TRef);\n    console.log(typeof value);\n  };\n\n  return (\n    <NumberInput\n      ref={TRef}\n      maxLength={4}\n      numberType=\"float\"\n      dataType=\"string\"\n      placeholder=\"Basic usage\"\n      enableMinus\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Demo;",Me='import React from \'react\';\nimport { NumberInput } from \'assui\';\nimport { Descriptions } from \'antd\';\n\nconst Demo = () => {\n  const onChange = (values) => {\n    console.log(\'Received values: \', values);\n  };\n\n  return (\n    <>\n      <Descriptions layout="vertical" column={8}>\n        <Descriptions.Item label="base" span={8}>\n          <NumberInput placeholder="float base usage" onChange={onChange} numberType="float" />\n        </Descriptions.Item>\n        <Descriptions.Item label="precision(\u8bbe\u7f6e\u7cbe\u5ea6)" span={8}>\n          <NumberInput\n            placeholder="float precision usage"\n            precision={2}\n            onChange={onChange}\n            numberType="float"\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default Demo;',Le="import React, { useState } from 'react';\nimport { NumberInput } from 'assui';\nimport { Descriptions } from 'antd';\n\nconst Demo = () => {\n  const [money, setMoney] = useState(1000);\n  const onChange = (values) => {\n    setMoney(values);\n  };\n\n  return (\n    <>\n      <Descriptions layout=\"vertical\" column={8}>\n        <Descriptions.Item label=\"\u94b1\" span={8}>\n          <NumberInput\n            value={money}\n            formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n            onChange={onChange}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"\u767e\u5206\u6bd4\" span={8}>\n          <NumberInput\n            value={100}\n            formatter={(value) => `${value}%`}\n            parser={(value) => value.replace('%', '')}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default Demo;",De='import React from \'react\';\nimport { Form, Button } from \'antd\';\nimport { NumberInput } from \'assui\';\n\nconst Demo = () => {\n  const onFinish = (values) => {\n    console.log(\'Received values: \', values);\n  };\n\n  return (\n    <Form\n      onFinish={onFinish}\n      initialValues={{\n        int: 0,\n        float: 0.1,\n        intEnableMinus: \'\',\n      }}\n    >\n      <Form.Item name="int" label="int">\n        <NumberInput />\n      </Form.Item>\n      <Form.Item name="float" label="float">\n        <NumberInput numberType="float" precision={5} />\n      </Form.Item>\n      <Form.Item name="intEnableMinus" label="int(enableMinus)">\n        <NumberInput enableMinus />\n      </Form.Item>\n      <Form.Item name="floatEnableMinus" label="float(enableMinus)">\n        <NumberInput numberType="float" enableMinus />\n      </Form.Item>\n      <Form.Item>\n        <Button type="primary" htmlType="submit">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Demo;',Re="import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { RcEchart } from 'assui';\n\nconst option = {\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b}: {c} ({d}%)',\n  },\n  legend: {\n    orient: 'vertical',\n    left: 10,\n    data: [\n      '\u76f4\u8fbe',\n      '\u8425\u9500\u5e7f\u544a',\n      '\u641c\u7d22\u5f15\u64ce',\n      '\u90ae\u4ef6\u8425\u9500',\n      '\u8054\u76df\u5e7f\u544a',\n      '\u89c6\u9891\u5e7f\u544a',\n      '\u767e\u5ea6',\n      '\u8c37\u6b4c',\n      '\u5fc5\u5e94',\n      '\u5176\u4ed6',\n    ],\n  },\n  series: [\n    {\n      name: '\u8bbf\u95ee\u6765\u6e90',\n      type: 'pie',\n      selectedMode: 'single',\n      radius: [0, '30%'],\n\n      label: {\n        position: 'inner',\n      },\n      labelLine: {\n        show: false,\n      },\n      data: [\n        { value: 335, name: '\u76f4\u8fbe', selected: true },\n        { value: 679, name: '\u8425\u9500\u5e7f\u544a' },\n        { value: 1548, name: '\u641c\u7d22\u5f15\u64ce' },\n      ],\n    },\n    {\n      name: '\u8bbf\u95ee\u6765\u6e90',\n      type: 'pie',\n      radius: ['40%', '55%'],\n      label: {\n        formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}\uff1a}{c}  {per|{d}%}  ',\n        backgroundColor: '#eee',\n        borderColor: '#aaa',\n        borderWidth: 1,\n        borderRadius: 4,\n        rich: {\n          a: {\n            color: '#999',\n            lineHeight: 22,\n            align: 'center',\n          },\n          hr: {\n            borderColor: '#aaa',\n            width: '100%',\n            borderWidth: 0.5,\n            height: 0,\n          },\n          b: {\n            fontSize: 16,\n            lineHeight: 33,\n          },\n          per: {\n            color: '#eee',\n            backgroundColor: '#334455',\n            padding: [2, 4],\n            borderRadius: 2,\n          },\n        },\n      },\n      data: [\n        { value: 335, name: '\u76f4\u8fbe' },\n        { value: 310, name: '\u90ae\u4ef6\u8425\u9500' },\n        { value: 234, name: '\u8054\u76df\u5e7f\u544a' },\n        { value: 135, name: '\u89c6\u9891\u5e7f\u544a' },\n        { value: 1048, name: '\u767e\u5ea6' },\n        { value: 251, name: '\u8c37\u6b4c' },\n        { value: 147, name: '\u5fc5\u5e94' },\n        { value: 102, name: '\u5176\u4ed6' },\n      ],\n    },\n  ],\n};\n\nexport default () => {\n  const [height, setHeight] = useState(400);\n\n  return (\n    <div>\n      <div />\n      <Button onClick={() => setHeight(height + 10)}>\u589e\u9ad8</Button>\n      <div style={{ width: '100%', height }}>\n        <RcEchart option={option} />\n      </div>\n    </div>\n  );\n};",ke="import React from 'react';\nimport ReactEchartsCore from 'assui/lib/rc-echart/core';\n// \u5f15\u5165 echarts \u6838\u5fc3\u6a21\u5757\uff0c\u6838\u5fc3\u6a21\u5757\u63d0\u4f9b\u4e86 echarts \u4f7f\u7528\u5fc5\u987b\u8981\u7684\u63a5\u53e3\u3002\nimport * as echarts from 'echarts/core';\n// \u5f15\u5165\u67f1\u72b6\u56fe\u56fe\u8868\uff0c\u56fe\u8868\u540e\u7f00\u90fd\u4e3a Chart\nimport { BarChart } from 'echarts/charts';\n// \u5f15\u5165\u63d0\u793a\u6846\uff0c\u6807\u9898\uff0c\u76f4\u89d2\u5750\u6807\u7cfb\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u540e\u7f00\u90fd\u4e3a Component\nimport { TitleComponent, TooltipComponent, GridComponent } from 'echarts/components';\n// \u5f15\u5165 Canvas \u6e32\u67d3\u5668\uff0c\u6ce8\u610f\u5f15\u5165 CanvasRenderer \u6216\u8005 SVGRenderer \u662f\u5fc5\u987b\u7684\u4e00\u6b65\nimport { CanvasRenderer } from 'echarts/renderers';\n\n// \u6ce8\u518c\u5fc5\u987b\u7684\u7ec4\u4ef6\necharts.use([TitleComponent, TooltipComponent, GridComponent, BarChart, CanvasRenderer]);\n\nconst option = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar',\n      showBackground: true,\n      backgroundStyle: {\n        color: 'rgba(180, 180, 180, 0.2)',\n      },\n    },\n  ],\n};\n\nconst ReactEchart = () => (\n  <div style={{ height: 300 }}>\n    <ReactEchartsCore echarts={echarts} option={option} />\n  </div>\n);\n\nexport default ReactEchart;",Se="import React from 'react';\nimport ReactEchartsCore from 'assui/lib/rc-echart/core';\nimport * as echarts from 'echarts/core';\nimport {\n  BarChart,\n  // \u7cfb\u5217\u7c7b\u578b\u7684\u5b9a\u4e49\u540e\u7f00\u90fd\u4e3a SeriesOption\n  BarSeriesOption,\n} from 'echarts/charts';\nimport {\n  TitleComponent,\n  // \u7ec4\u4ef6\u7c7b\u578b\u7684\u5b9a\u4e49\u540e\u7f00\u90fd\u4e3a ComponentOption\n  TitleComponentOption,\n  GridComponent,\n  GridComponentOption,\n} from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n// \u901a\u8fc7 ComposeOption \u6765\u7ec4\u5408\u51fa\u4e00\u4e2a\u53ea\u6709\u5fc5\u987b\u7ec4\u4ef6\u548c\u56fe\u8868\u7684 Option \u7c7b\u578b\ntype ECOption = echarts.ComposeOption<BarSeriesOption | TitleComponentOption | GridComponentOption>;\n\n// \u6ce8\u518c\u5fc5\u987b\u7684\u7ec4\u4ef6\necharts.use([TitleComponent, GridComponent, BarChart, CanvasRenderer]);\nconst option: ECOption = {\n  title: {\n    text: '\u4e16\u754c\u4eba\u53e3\u603b\u91cf',\n    subtext: '\u6570\u636e\u6765\u81ea\u7f51\u7edc',\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow',\n    },\n  },\n  legend: {\n    data: ['2011\u5e74', '2012\u5e74'],\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true,\n  },\n  xAxis: {\n    type: 'value',\n    boundaryGap: [0, 0.01],\n  },\n  yAxis: {\n    type: 'category',\n    data: ['\u5df4\u897f', '\u5370\u5c3c', '\u7f8e\u56fd', '\u5370\u5ea6', '\u4e2d\u56fd', '\u4e16\u754c\u4eba\u53e3(\u4e07)'],\n  },\n  series: [\n    {\n      name: '2011\u5e74',\n      type: 'bar',\n      data: [18203, 23489, 29034, 104970, 131744, 630230],\n    },\n    {\n      name: '2012\u5e74',\n      type: 'bar',\n      data: [19325, 23438, 31000, 121594, 134141, 681807],\n    },\n  ],\n};\n\nconst ReactEchart = () => (\n  <div style={{ height: 300 }}>\n    <ReactEchartsCore echarts={echarts} option={option} />\n  </div>\n);\n\nexport default ReactEchart;",Pe="import React from 'react';\nimport classNames from 'classnames';\nimport { Button } from 'antd';\nimport { RcMotion } from 'assui';\nimport './CSSMotion.less';\n\ninterface DemoState {\n  show: boolean;\n  forceRender: boolean;\n  motionLeaveImmediately: boolean;\n  removeOnLeave: boolean;\n  hasMotionClassName: boolean;\n  prepare: boolean;\n}\n\nconst Div = React.forwardRef<HTMLDivElement, any>((props, ref) => {\n  React.useEffect(() => {\n    console.log('DIV >>> Mounted!');\n\n    return () => {\n      console.log('DIV >>> UnMounted!');\n    };\n  }, []);\n\n  return <div {...props} ref={ref} />;\n});\n\nclass Demo extends React.Component<{}, DemoState> {\n  state: DemoState = {\n    show: true,\n    forceRender: false,\n    motionLeaveImmediately: false,\n    removeOnLeave: true,\n    hasMotionClassName: true,\n    prepare: false,\n  };\n\n  onTrigger = () => {\n    setTimeout(() => {\n      this.setState(({ show }) => ({ show: !show }));\n    }, 100);\n  };\n\n  onTriggerDelay = () => {\n    this.setState(({ prepare }) => ({ prepare: !prepare }));\n  };\n\n  onForceRender = () => {\n    this.setState(({ forceRender }) => ({ forceRender: !forceRender }));\n  };\n\n  onRemoveOnLeave = () => {\n    this.setState(({ removeOnLeave }) => ({ removeOnLeave: !removeOnLeave }));\n  };\n\n  onTriggerClassName = () => {\n    this.setState(({ hasMotionClassName }) => ({\n      hasMotionClassName: !hasMotionClassName,\n    }));\n  };\n\n  onCollapse = () => ({ height: 0 });\n\n  onMotionLeaveImmediately = () => {\n    this.setState(({ motionLeaveImmediately }) => ({\n      motionLeaveImmediately: !motionLeaveImmediately,\n    }));\n  };\n\n  render() {\n    const { show, hasMotionClassName } = this.state;\n\n    return (\n      <div>\n        <Button onClick={this.onTrigger}>Show Component {show}</Button>\n\n        <div className=\"grid\">\n          <div>\n            <h2>With Transition Class</h2>\n            <RcMotion\n              visible={show}\n              motionName={hasMotionClassName ? 'transition' : null}\n              leavedClassName=\"hidden\"\n              onAppearStart={this.onCollapse}\n              onEnterStart={this.onCollapse}\n              onLeaveActive={this.onCollapse}\n            >\n              {({ style, className }, ref) => (\n                <Div ref={ref} className={classNames('demo-block', className)} style={style} />\n              )}\n            </RcMotion>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Demo;",Ne=".grid {\n  display: table;\n\n  > div {\n    display: table-cell;\n    min-width: 350px;\n  }\n}\n\n.demo-block {\n  display: block;\n  width: 300px;\n  height: 300px;\n  overflow: hidden;\n  background: red;\n}\n\n.transition {\n  transition: height 1.3s, opacity 1.3s;\n  // transition: all 5s!important;\n\n  &.transition-appear,\n  &.transition-enter {\n    opacity: 0;\n  }\n\n  &.transition-appear.transition-appear-active,\n  &.transition-enter.transition-enter-active {\n    opacity: 1;\n  }\n\n  &.transition-leave-active {\n    background: green;\n    opacity: 0;\n  }\n}\n\n.animation {\n  animation-duration: 1.3s;\n  animation-fill-mode: both;\n\n  &.animation-appear,\n  &.animation-enter {\n    animation-name: enter;\n    animation-play-state: paused;\n    animation-fill-mode: both;\n  }\n\n  &.animation-appear.animation-appear-active,\n  &.animation-enter.animation-enter-active {\n    animation-name: enter;\n    animation-play-state: running;\n  }\n\n  &.animation-leave {\n    animation-name: leave;\n    animation-play-state: paused;\n    animation-fill-mode: both;\n\n    &.animation-leave-active {\n      animation-name: leave;\n      animation-play-state: running;\n    }\n  }\n}\n\n.hidden {\n  display: none !important;\n}\n\n@keyframes enter {\n  from {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes leave {\n  from {\n    transform: scale(1);\n    opacity: 1;\n  }\n\n  to {\n    transform: scale(0);\n    opacity: 0;\n  }\n}",Be="import React from 'react';\nimport classNames from 'classnames';\nimport { Button } from 'antd';\nimport { RcMotion } from 'assui';\nimport './CSSMotion.less';\n\ninterface DemoState {\n  show: boolean;\n  forceRender: boolean;\n  motionLeaveImmediately: boolean;\n  removeOnLeave: boolean;\n  hasMotionClassName: boolean;\n  prepare: boolean;\n}\n\nconst Div = React.forwardRef<HTMLDivElement, any>((props, ref) => {\n  React.useEffect(() => {\n    console.log('DIV >>> Mounted!');\n\n    return () => {\n      console.log('DIV >>> UnMounted!');\n    };\n  }, []);\n\n  return <div {...props} ref={ref} />;\n});\n\nclass Demo extends React.Component<{}, DemoState> {\n  state: DemoState = {\n    show: true,\n    forceRender: false,\n    motionLeaveImmediately: false,\n    removeOnLeave: true,\n    hasMotionClassName: true,\n    prepare: false,\n  };\n\n  onTrigger = () => {\n    setTimeout(() => {\n      this.setState(({ show }) => ({ show: !show }));\n    }, 100);\n  };\n\n  onTriggerDelay = () => {\n    this.setState(({ prepare }) => ({ prepare: !prepare }));\n  };\n\n  onForceRender = () => {\n    this.setState(({ forceRender }) => ({ forceRender: !forceRender }));\n  };\n\n  onRemoveOnLeave = () => {\n    this.setState(({ removeOnLeave }) => ({ removeOnLeave: !removeOnLeave }));\n  };\n\n  onTriggerClassName = () => {\n    this.setState(({ hasMotionClassName }) => ({\n      hasMotionClassName: !hasMotionClassName,\n    }));\n  };\n\n  styleGreen = () => ({\n    background: 'green',\n  });\n\n  onMotionLeaveImmediately = () => {\n    this.setState(({ motionLeaveImmediately }) => ({\n      motionLeaveImmediately: !motionLeaveImmediately,\n    }));\n  };\n\n  render() {\n    const { show, hasMotionClassName } = this.state;\n\n    return (\n      <div>\n        <Button onClick={this.onTrigger}>Show Component {show}</Button>\n\n        <div className=\"grid\">\n          <div>\n            <h2>With Animation Class</h2>\n            <RcMotion\n              visible={show}\n              motionName={hasMotionClassName ? 'animation' : null}\n              leavedClassName=\"hidden\"\n              onLeaveActive={this.styleGreen}\n            >\n              {({ style, className }, ref) => (\n                <Div ref={ref} className={classNames('demo-block', className)} style={style} />\n              )}\n            </RcMotion>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Demo;",Oe="import React, { useRef } from 'react';\nimport { Button } from 'antd';\nimport RcQRcode from 'assui/lib/rc-qrcode';\nimport { canvasToImg } from 'aa-utils';\n\nexport default () => {\n  const QRRef = useRef<HTMLCanvasElement>();\n  const onDownloadFilled = () => {\n    canvasToImg.saveAsImage(QRRef.current, { fileName: '\u6587\u4ef6\u540d' });\n  };\n\n  return (\n    <div>\n      <RcQRcode\n        value=\"http://www.baidu.com\"\n        getCanvasInstance={(canvasInstance) => {\n          QRRef.current = canvasInstance;\n        }}\n      />\n      <Button onClick={onDownloadFilled}>\u4e0b\u8f7d\u4e8c\u7ef4\u7801</Button>\n    </div>\n  );\n};",Ae="import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport RcQRcode from 'assui/lib/rc-qrcode';\n\nexport default () => {\n  const [count, setCount] = useState(1);\n  const url = RcQRcode.useQrcode(`${count}`);\n\n  return (\n    <div>\n      <img src={url} alt=\"\" />\n      <Button onClick={() => setCount(count + 1)}>\u5237\u65b0</Button>\n    </div>\n  );\n};",je="import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { RcTransitionGroup } from 'assui';\n\nimport './index.css';\n\nconst { CSSTransition } = RcTransitionGroup;\n\nfunction Example() {\n  const [showButton, setShowButton] = useState(true);\n  const [showMessage, setShowMessage] = useState(false);\n  return (\n    <div style={{ paddingTop: '2rem' }}>\n      {showButton && (\n        <Button onClick={() => setShowMessage(true)} size=\"lg\">\n          Show Message\n        </Button>\n      )}\n      <CSSTransition\n        in={showMessage}\n        timeout={300}\n        classNames=\"alert\"\n        unmountOnExit\n        onEnter={() => setShowButton(false)}\n        onExited={() => setShowButton(true)}\n      >\n        <div onClose={() => setShowMessage(false)}>\n          <p>This alert message is being transitioned in and out of the DOM.</p>\n          <Button onClick={() => setShowMessage(false)}>Close</Button>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default Example;",Fe=".alert-enter {\n  transform: scale(0.9);\n  opacity: 0;\n}\n.alert-enter-active {\n  transform: translateX(0);\n  opacity: 1;\n  transition: opacity 300ms, transform 300ms;\n}\n.alert-exit {\n  opacity: 1;\n}\n.alert-exit-active {\n  transform: scale(0.9);\n  opacity: 0;\n  transition: opacity 300ms, transform 300ms;\n}",ze="import React from 'react';\nimport { Button, Radio } from 'antd';\nimport { RcTransitionGroup } from 'assui';\nimport './index.css';\n\nconst { SwitchTransition, CSSTransition } = RcTransitionGroup;\n\nexport default function App() {\n  const [mode, setMode] = React.useState('out-in');\n  const [state, setState] = React.useState(true);\n  return (\n    <>\n      <div className=\"label\">Mode:</div>\n      <div className=\"modes\">\n        <Radio.Group\n          onChange={(e) => {\n            setMode(e.target.value);\n          }}\n          value={mode}\n        >\n          <Radio value=\"out-in\">out-in</Radio>\n          <Radio value=\"in-out\">in-out</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"main\">\n        <SwitchTransition mode={mode}>\n          <CSSTransition\n            key={state}\n            addEndListener={(node, done) => {\n              node.addEventListener('transitionend', done, false);\n            }}\n            classNames=\"fade\"\n          >\n            <div className=\"button-container\">\n              <Button type=\"primary\" onClick={() => setState((state) => !state)}>\n                {state ? 'Hello, world!' : 'Goodbye, world!'}\n              </Button>\n            </div>\n          </CSSTransition>\n        </SwitchTransition>\n      </div>\n    </>\n  );\n}",Ue=".modes {\n  margin-bottom: 20px;\n}\n.fade-enter .ant-btn {\n  transform: translateX(-100%);\n  opacity: 0;\n}\n.fade-enter-active .ant-btn {\n  transform: translateX(0%);\n  opacity: 1;\n}\n.fade-exit .ant-btn {\n  transform: translateX(0%);\n  opacity: 1;\n}\n.fade-exit-active .ant-btn {\n  transform: translateX(100%);\n  opacity: 0;\n}\n.fade-enter-active .ant-btn,\n.fade-exit-active .ant-btn {\n  transition: opacity 500ms, transform 500ms;\n}",Ke="import React from 'react';\nimport { Resizable } from 'assui';\nimport { ResizableBox } from 'assui/lib/resizable';\nimport './index.css';\n\nconst CustomResizeHandle = React.forwardRef((props, ref) => {\n  const { handleAxis, ...restProps } = props;\n  return (\n    <div\n      className={`custom-handle custom-handle-${handleAxis} custom-resize-handle-component`}\n      ref={ref}\n      {...restProps}\n    ></div>\n  );\n});\n\nexport default class ExampleLayout extends React.Component {\n  state = {\n    width: 200,\n    height: 200,\n    absoluteWidth: 200,\n    absoluteHeight: 200,\n    absoluteLeft: 0,\n    absoluteTop: 0,\n  };\n\n  onResetClick = () => {\n    this.setState({ width: 200, height: 200, absoluteWidth: 200, absoluteHeight: 200 });\n  };\n\n  // On top layout\n  onFirstBoxResize = (event, { element, size, handle }) => {\n    this.setState({ width: size.width, height: size.height });\n  };\n\n  // On bottom layout. Used to resize the center element around its flex parent.\n  onResizeAbsolute = (event, { element, size, handle }) => {\n    this.setState((state) => {\n      let newLeft = state.absoluteLeft;\n      let newTop = state.absoluteTop;\n      const deltaHeight = size.height - state.absoluteHeight;\n      const deltaWidth = size.width - state.absoluteWidth;\n      if (handle[0] === 'n') {\n        newTop -= deltaHeight;\n      } else if (handle[0] === 's') {\n        newTop += deltaHeight;\n      }\n      if (handle[handle.length - 1] === 'w') {\n        newLeft -= deltaWidth;\n      } else if (handle[handle.length - 1] === 'e') {\n        newLeft += deltaWidth;\n      }\n\n      return {\n        absoluteWidth: size.width,\n        absoluteHeight: size.height,\n        absoluteLeft: newLeft,\n        absoluteTop: newTop,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Statically Positioned Layout</h3>\n        <div className=\"layoutRoot\">\n          <Resizable\n            className=\"box\"\n            height={this.state.height}\n            width={this.state.width}\n            onResize={this.onFirstBoxResize}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <div style={{ width: this.state.width + 'px', height: this.state.height + 'px' }}>\n              <span className=\"text\">\n                {'Raw use of <Resizable> element. 200x200, all Resize Handles.'}\n              </span>\n              <button onClick={this.onResetClick} style={{ marginTop: '10px' }}>\n                Reset this element's width/height\n              </button>\n            </div>\n          </Resizable>\n          <ResizableBox className=\"box\" width={200} height={200}>\n            <span className=\"text\">{'<ResizableBox>'}</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"custom-box box\"\n            width={200}\n            height={200}\n            handle={<span className=\"custom-handle custom-handle-se\" />}\n            handleSize={[8, 8]}\n          >\n            <span className=\"text\">\n              {'<ResizableBox> with custom overflow style & handle in SE corner.'}\n            </span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"custom-box box\"\n            width={200}\n            height={200}\n            handle={<CustomResizeHandle />}\n            handleSize={[8, 8]}\n          >\n            <span className=\"text\">{'<ResizableBox> with a custom resize handle component.'}</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"custom-box box\"\n            width={200}\n            height={200}\n            handle={(h, ref) => <span className={`custom-handle custom-handle-${h}`} ref={ref} />}\n            handleSize={[8, 8]}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">{'<ResizableBox> with custom handles in all locations.'}</span>\n          </ResizableBox>\n          <ResizableBox className=\"box\" width={200} height={200} draggableOpts={{ grid: [25, 25] }}>\n            <span className=\"text\">Resizable box that snaps to even intervals of 25px.</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"box\"\n            width={200}\n            height={200}\n            minConstraints={[150, 150]}\n            maxConstraints={[500, 300]}\n          >\n            <span className=\"text\">\n              Resizable box, starting at 200x200. Min size is 150x150, max is 500x300.\n            </span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"box hover-handles\"\n            width={200}\n            height={200}\n            minConstraints={[150, 150]}\n            maxConstraints={[500, 300]}\n          >\n            <span className=\"text\">Resizable box with a handle that only appears on hover.</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"box\"\n            width={200}\n            height={200}\n            lockAspectRatio={true}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">Resizable square with a locked aspect ratio.</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"box\"\n            width={200}\n            height={120}\n            lockAspectRatio={true}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">Resizable rectangle with a locked aspect ratio.</span>\n          </ResizableBox>\n          <ResizableBox className=\"box\" width={200} height={200} axis=\"x\">\n            <span className=\"text\">Only resizable by \"x\" axis.</span>\n          </ResizableBox>\n          <ResizableBox className=\"box\" width={200} height={200} axis=\"y\">\n            <span className=\"text\">Only resizable by \"y\" axis.</span>\n          </ResizableBox>\n          <ResizableBox className=\"box\" width={200} height={200} axis=\"both\">\n            <span className=\"text\">Resizable (\"both\" axis).</span>\n          </ResizableBox>\n          <ResizableBox className=\"box\" width={200} height={200} axis=\"none\">\n            <span className=\"text\">Not resizable (\"none\" axis).</span>\n          </ResizableBox>\n        </div>\n\n        <h3>Absolutely Positioned Layout</h3>\n        <div className=\"layoutRoot absoluteLayout\">\n          <ResizableBox\n            className=\"box absolutely-positioned top-aligned left-aligned\"\n            height={200}\n            width={200}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">Top-left Aligned</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"box absolutely-positioned bottom-aligned left-aligned\"\n            height={200}\n            width={200}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">Bottom-left Aligned</span>\n          </ResizableBox>\n          {/* See implementation of `onResizeAbsolute` for how this can be moved around its container */}\n          <Resizable\n            className=\"box absolutely-positioned\"\n            height={this.state.absoluteHeight}\n            width={this.state.absoluteWidth}\n            onResize={this.onResizeAbsolute}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <div\n              style={{\n                width: this.state.absoluteWidth,\n                height: this.state.absoluteHeight,\n                margin: `${this.state.absoluteTop} 0 0 ${this.state.absoluteLeft}`,\n              }}\n            >\n              <span className=\"text\">\n                {\n                  'Raw use of <Resizable> element with controlled position. Resize and reposition in all directions.'\n                }\n              </span>\n            </div>\n          </Resizable>\n          <ResizableBox\n            className=\"box absolutely-positioned top-aligned right-aligned\"\n            height={200}\n            width={200}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">Top-right Aligned</span>\n          </ResizableBox>\n          <ResizableBox\n            className=\"box absolutely-positioned bottom-aligned right-aligned\"\n            height={200}\n            width={200}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">Bottom-right Aligned</span>\n          </ResizableBox>\n        </div>\n\n        <h3>Scaled Absolute Layout</h3>\n        <div>\n          <small>\n            If you are nesting Resizables in an element with <code>transform: scale(n)</code>, be\n            sure to pass the same <code>n</code>&nbsp; as the <code>transformScale</code> property.\n            <br />\n            This box has scale 0.75.\n          </small>\n        </div>\n        <div className=\"layoutRoot absoluteLayout scaledLayout\">\n          <ResizableBox\n            className=\"box absolutely-positioned top-aligned left-aligned\"\n            width={200}\n            height={200}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">{'<ResizableBox> with incorrect scale 1'}</span>\n          </ResizableBox>\n\n          <ResizableBox\n            className=\"box absolutely-positioned bottom-aligned left-aligned\"\n            width={200}\n            height={200}\n            transformScale={0.75}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">{'<ResizableBox> with correct scale 0.75'}</span>\n          </ResizableBox>\n\n          {/* See implementation of `onResizeAbsolute` for how this can be moved around its container */}\n          <Resizable\n            className=\"box absolutely-positioned\"\n            height={this.state.absoluteHeight}\n            width={this.state.absoluteWidth}\n            onResize={this.onResizeAbsolute}\n            transformScale={0.75}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <div\n              style={{\n                width: this.state.absoluteWidth,\n                height: this.state.absoluteHeight,\n                margin: `${this.state.absoluteTop} 0 0 ${this.state.absoluteLeft}`,\n              }}\n            >\n              <span className=\"text\">\n                {\n                  'Raw use of <Resizable> element with controlled position. Resize and reposition in all directions.'\n                }\n              </span>\n            </div>\n          </Resizable>\n\n          <ResizableBox\n            className=\"box absolutely-positioned top-aligned right-aligned\"\n            width={200}\n            height={200}\n            transformScale={0.75}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">{'<ResizableBox> with correct scale 0.75'}</span>\n          </ResizableBox>\n\n          <ResizableBox\n            className=\"box absolutely-positioned bottom-aligned right-aligned\"\n            width={200}\n            height={200}\n            transformScale={0.75}\n            resizeHandles={['sw', 'se', 'nw', 'ne', 'w', 'e', 'n', 's']}\n          >\n            <span className=\"text\">{'<ResizableBox> with correct scale 0.75'}</span>\n          </ResizableBox>\n        </div>\n      </div>\n    );\n  }\n}",qe=".layoutRoot {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n  background: #eee;\n}\n\n.absoluteLayout {\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  height: 600px;\n}\n\n.scaledLayout {\n  left: -12.5%;\n  width: 125%;\n  margin-top: -7.5%;\n  transform: scale(0.75);\n}\n\n.box {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  margin: 20px;\n  margin-bottom: 10px;\n  padding: 10px;\n  overflow: hidden;\n  text-align: center;\n  background: #ccc;\n  border: 1px solid black;\n}\n\n.box .text {\n  text-align: center;\n}\n\n.hover-handles .react-resizable-handle {\n  display: none;\n}\n\n.hover-handles:hover .react-resizable-handle {\n  display: block;\n}\n\n.absolutely-positioned {\n  position: absolute !important;\n}\n\n.left-aligned {\n  left: 0;\n}\n\n.right-aligned {\n  right: 0;\n}\n\n.top-aligned {\n  top: 0;\n}\n\n.bottom-aligned {\n  bottom: 0;\n}\n\n.custom-box {\n  overflow: visible;\n}\n\n.custom-handle {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background-color: #1153aa;\n  border-radius: 4px;\n  opacity: 0.75;\n}\n\n.custom-handle-sw {\n  bottom: -4px;\n  left: -4px;\n  cursor: sw-resize;\n}\n\n.custom-handle-se {\n  right: -4px;\n  bottom: -4px;\n  cursor: se-resize;\n}\n\n.custom-handle-nw {\n  top: -4px;\n  left: -4px;\n  cursor: nw-resize;\n}\n\n.custom-handle-ne {\n  top: -4px;\n  right: -4px;\n  cursor: ne-resize;\n}\n\n.custom-handle-w,\n.custom-handle-e {\n  top: 50%;\n  margin-top: -4px;\n  cursor: ew-resize;\n}\n\n.custom-handle-w {\n  left: -4px;\n}\n\n.custom-handle-e {\n  right: -4px;\n}\n\n.custom-handle-n,\n.custom-handle-s {\n  left: 50%;\n  margin-left: -4px;\n  cursor: ns-resize;\n}\n\n.custom-handle-n {\n  top: -4px;\n}\n\n.custom-handle-s {\n  bottom: -4px;\n}\n\n.custom-resize-handle-component {\n  background-color: red;\n}",Ve="import { Table } from 'antd';\nimport { Resizable } from 'assui';\nimport './table.css';\n\nconst ResizeableTitle = (props) => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\nexport default class Demo extends React.Component {\n  state = {\n    columns: [\n      {\n        title: 'Date',\n        dataIndex: 'date',\n        width: 200,\n      },\n      {\n        title: 'Amount',\n        dataIndex: 'amount',\n        width: 100,\n      },\n      {\n        title: 'Type',\n        dataIndex: 'type',\n        width: 100,\n      },\n      {\n        title: 'Note',\n        dataIndex: 'note',\n        width: 100,\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        render: () => <a>Delete</a>,\n      },\n    ],\n  };\n\n  components = {\n    header: {\n      cell: ResizeableTitle,\n    },\n  };\n\n  data = [\n    {\n      key: 0,\n      date: '2018-02-11',\n      amount: 120,\n      type: 'income',\n      note: 'transfer',\n    },\n    {\n      key: 1,\n      date: '2018-03-11',\n      amount: 243,\n      type: 'income',\n      note: 'transfer',\n    },\n    {\n      key: 2,\n      date: '2018-04-11',\n      amount: 98,\n      type: 'income',\n      note: 'transfer',\n    },\n  ];\n\n  handleResize =\n    (index) =>\n    (e, { size }) => {\n      this.setState(({ columns }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = {\n          ...nextColumns[index],\n          width: size.width,\n        };\n        return { columns: nextColumns };\n      });\n    };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => ({\n      ...col,\n      onHeaderCell: (column) => ({\n        width: column.width,\n        onResize: this.handleResize(index),\n      }),\n    }));\n\n    return <Table bordered components={this.components} columns={columns} dataSource={this.data} />;\n  }\n}",_e="#components-table-demo-resizable-column .react-resizable {\n  position: relative;\n  background-clip: padding-box;\n}\n\n#components-table-demo-resizable-column .react-resizable-handle {\n  position: absolute;\n  right: -5px;\n  bottom: 0;\n  z-index: 1;\n  width: 10px;\n  height: 100%;\n  cursor: col-resize;\n}",Xe="import React from 'react';\nimport { RichTextEditor } from 'assui';\nimport type { EditorOptions } from 'tinymce/tinymce';\nconst firstToolbar =\n  'undo redo | blocks fontsize | ' +\n  'bold italic underline strikethrough forecolor backcolor charmap emoticons | ' +\n  'alignleft aligncenter alignright alignjustify | bullist numlist outdent indent';\n\nconst defaultToolbar = [firstToolbar, 'link code table image removeformat | preview help'];\n\nexport default function App() {\n  const onChange = (value) => {\n    console.log('value', value);\n  };\n\n  const imagesUploadHandler: EditorOptions['images_upload_handler'] = (blobInfo, progress) => {\n    return new Promise((resolve, reject) => {\n      let xhr, formData;\n\n      // \u8fd9\u662f\u5b98\u65b9\u4f8b\u5b50\uff0c\u672c\u8d28\u662f\u901a\u8fc7blobInfo \u62ff\u5230file\u5bf9\u8c61\uff0c\u901a\u8fc7FormData \u4f20\u7ed9\u540e\u7aef\uff0c\u7136\u540e\u7528success\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7f16\u8f91\u5668\n      xhr = new XMLHttpRequest();\n      xhr.withCredentials = false;\n      xhr.open('POST', '/api/url');\n\n      xhr.upload.onprogress = function (e) {\n        progress((e.loaded / e.total) * 100);\n      };\n\n      xhr.onload = function () {\n        let json;\n\n        if (xhr.status === 403) {\n          reject('HTTP Error: ' + xhr.status);\n          return;\n        }\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n          reject('HTTP Error: ' + xhr.status);\n          return;\n        }\n\n        json = JSON.parse(xhr.responseText);\n\n        if (!json || typeof json.location != 'string') {\n          reject('Invalid JSON: ' + xhr.responseText);\n          return;\n        }\n\n        resolve(json.location);\n      };\n\n      xhr.onerror = function () {\n        reject('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);\n      };\n\n      formData = new FormData();\n      formData.append('file', blobInfo.blob(), blobInfo.filename());\n\n      xhr.send(formData);\n    });\n  };\n\n  return (\n    <RichTextEditor\n      onEditorChange={onChange}\n      init={{\n        toolbar: defaultToolbar,\n        images_upload_handler: imagesUploadHandler,\n      }}\n    />\n  );\n}",We="import React from 'react';\nimport { RichTextEditor } from 'assui';\nimport { Form, Button } from 'antd';\n\nconst firstToolbar =\n  'undo redo | blocks fontsize | ' +\n  'bold italic underline forecolor backcolor charmap | ' +\n  'alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | ' +\n  'removeformat | help';\n\nconst defaultToolbar = [firstToolbar, 'code table | image | removeformat | help'];\n\nconst Demo = () => {\n  const onFinish = (values) => {\n    console.log('Received values: ', values);\n  };\n\n  return (\n    <Form\n      onFinish={onFinish}\n      initialValues={{\n        desc: '0.1',\n      }}\n    >\n      <Form.Item\n        name=\"desc\"\n        label=\"\u8be6\u60c5\"\n        trigger=\"onEditorChange\"\n        rules={[{ required: true, message: '\u8be6\u60c5\u662f\u5fc5\u987b\u7684' }]}\n      >\n        <RichTextEditor init={{ toolbar: defaultToolbar }} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Demo;",Ge="import React from 'react';\nimport { RichTextEditor } from 'assui';\nimport type * as Type from 'tinymce/tinymce';\nimport { Button } from 'antd';\n\nexport default function App() {\n  const editRef = React.useRef<Type.Editor>();\n\n  const onChange = (value) => {\n    console.log('value', value);\n  };\n\n  return (\n    <div>\n      <RichTextEditor\n        onEditorChange={onChange}\n        init={{\n          setup(editor: Type.Editor) {\n            editRef.current = editor;\n          },\n        }}\n      />\n      <Button\n        style={{ marginTop: 30 }}\n        onClick={() => {\n          editRef.current?.insertContent('<span>{{\u8fd9\u662f\u63d2\u5165\u7684tag}}</span>');\n        }}\n      >\n        \u63d2\u5165tag\n      </Button>\n    </div>\n  );\n}",Ye="import React from 'react';\nimport { RichTextEditor } from 'assui';\nimport { defaultToolbar } from 'assui/lib/rich-text-editor';\nimport type * as Type from 'tinymce/tinymce';\n\nexport default function App() {\n  const editRef = React.useRef<Type.Editor>();\n\n  const onChange = (value) => {\n    console.log('value', value);\n  };\n\n  const setup = (editor: Type.Editor) => {\n    editRef.current = editor;\n\n    editor.ui.registry.addButton('customInsertButton', {\n      text: 'My Button',\n      onAction(_) {\n        editor.insertContent(\"&nbsp;<strong>It's my button!</strong>&nbsp;\");\n      },\n    });\n\n    const toTimeHtml = function (date) {\n      return `<time datetime=\"${date.toString()}\">${date.toDateString()}</time>`;\n    };\n\n    editor.ui.registry.addButton('customDateButton', {\n      icon: 'insert-time',\n      tooltip: 'Insert Current Date',\n      enabled: true,\n      onAction(_) {\n        editor.insertContent(toTimeHtml(new Date()));\n      },\n      onSetup(buttonApi) {\n        const editorEventCallback = function (eventApi) {\n          buttonApi.setEnabled(eventApi.element.nodeName.toLowerCase() === 'time');\n        };\n        editor.on('NodeChange', editorEventCallback);\n\n        /* onSetup should always return the unbind handlers */\n        return function (buttonApi) {\n          editor.off('NodeChange', editorEventCallback);\n        };\n      },\n    });\n  };\n\n  return (\n    <div>\n      <RichTextEditor\n        onEditorChange={onChange}\n        init={{ setup, toolbar: `${defaultToolbar} | customInsertButton customDateButton ` }}\n      />\n    </div>\n  );\n}",Qe="import React from 'react';\nimport { SingleImgUpload } from 'assui';\nimport { PlusOutlined } from 'a-icons';\n\nconst Demo = () => {\n  const onSuccess = (resValues) => {\n    console.log('Received values: ', resValues);\n  };\n\n  return (\n    <SingleImgUpload action=\"http://192.168.0.126:10000/oss/file/upload\" onSuccess={onSuccess}>\n      <PlusOutlined />\n    </SingleImgUpload>\n  );\n};\n\nexport default Demo;",$e="import React from 'react';\nimport { SingleImgUpload } from 'assui';\nimport { PlusOutlined } from 'a-icons';\n\nconst Demo = () => {\n  const onSuccess = (resValues) => {\n    console.log('Received values: ', resValues);\n  };\n\n  return (\n    <SingleImgUpload\n      action=\"http://192.168.0.126:10000/oss/file/upload\"\n      value=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn.sinaimg.cn%2Fauto%2Ftransform%2F299%2Fw660h439%2F20210907%2F0290-3a002940b16b9faa08bd02950f322671.jpg&refer=http%3A%2F%2Fn.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1633673923&t=a4564f6d800a02b67303f60e716153c9\"\n      onSuccess={onSuccess}\n    >\n      <PlusOutlined />\n    </SingleImgUpload>\n  );\n};\n\nexport default Demo;",Je="import React from 'react';\nimport { SingleImgUpload } from 'assui';\nimport { PlusOutlined } from 'a-icons';\n\nconst Demo = () => {\n  return (\n    <>\n      <SingleImgUpload disabled={true}>\n        <PlusOutlined />\n      </SingleImgUpload>\n      <SingleImgUpload\n        value=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn.sinaimg.cn%2Fauto%2Ftransform%2F299%2Fw660h439%2F20210907%2F0290-3a002940b16b9faa08bd02950f322671.jpg&refer=http%3A%2F%2Fn.sinaimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1633673923&t=a4564f6d800a02b67303f60e716153c9\"\n        disabled={true}\n      >\n        <PlusOutlined />\n      </SingleImgUpload>\n    </>\n  );\n};\n\nexport default Demo;",Ze="import React from 'react';\nimport { sortableHoc } from 'assui';\nimport classNames from 'classnames';\nimport style from './index.modules.less';\n\nconst { sortableElement, sortableContainer, arrayMove } = sortableHoc;\n\nconst SortableElement = sortableElement((props) => {\n  const { value, itemIndex, isSorting } = props;\n  return (\n    <div\n      className={classNames(style.item, style['stylized-item'], isSorting && style.sorting)}\n      style={{ height: itemIndex === 4 ? 120 : 60 }}\n      data-index={itemIndex}\n    >\n      <div className={style.wrapper}>\n        <span>Item</span> {value}\n      </div>\n    </div>\n  );\n});\n\nconst SortableContainer = sortableContainer(({ items, isSorting }) => (\n  <div className={classNames(style.list, style['stylized-list'])}>\n    {items.map((value, index) => (\n      <SortableElement\n        key={`item-${value}`}\n        index={index}\n        itemIndex={index}\n        value={value}\n        isSorting={isSorting}\n      />\n    ))}\n  </div>\n));\n\nclass ListWrapper extends React.Component {\n  state = {\n    items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n    isSorting: false,\n  };\n\n  onSortStart = () => {\n    this.setState({ isSorting: true });\n    document.body.style.cursor = 'grabbing';\n  };\n\n  onSortEnd = (sortEvent) => {\n    const { oldIndex, newIndex } = sortEvent;\n    const { items } = this.state;\n\n    this.setState({\n      items: arrayMove(items, oldIndex, newIndex),\n      isSorting: false,\n    });\n\n    document.body.style.cursor = '';\n  };\n\n  render() {\n    const { items, isSorting } = this.state;\n\n    return (\n      <div className={style.root}>\n        <SortableContainer\n          isSorting={isSorting}\n          items={items}\n          onSortEnd={this.onSortEnd}\n          onSortStart={this.onSortStart}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ListWrapper;",en="@focusedOutlineColor: #4c9ffe;\n\n.root {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  height: 100%;\n  padding: 10px 0;\n  background-color: #f5f6fa;\n}\n\n// Base styles\n\n.list {\n  width: 400px;\n  height: 400px;\n  overflow: auto;\n  border: 1px solid #999;\n  -webkit-overflow-scrolling: touch;\n}\n\n.item {\n  position: relative;\n  width: 400px;\n  border-bottom: 1px solid #999;\n  cursor: grab;\n  touch-action: manipulation;\n\n  &.sorting {\n    pointer-events: none;\n  }\n}\n\n// Stylized\n\n.stylized-list {\n  position: relative;\n  z-index: 0;\n  background-color: #f3f3f3;\n  border: 1px solid #efefef;\n  border-radius: 3px;\n  outline: none;\n}\n\n.stylized-item {\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  padding: 0 20px;\n  color: #333;\n  font-weight: 400;\n  background-color: #fff;\n  border-bottom: 1px solid #efefef;\n  outline: none;\n  user-select: none;\n\n  &:focus:not(.containsDragHandle) {\n    text-indent: -2px;\n    border: 2px solid @focusedOutlineColor;\n  }\n}",nn="import React from 'react';\nimport classNames from 'classnames';\nimport getItems from '../utils';\nimport SortableContainer from '../SortableContainer';\nimport ListWrapper from '../ListWrapper';\nimport style from '../index.modules.less';\n\nconst Base = () => (\n  <div className={style.root}>\n    <ListWrapper\n      component={SortableContainer}\n      axis=\"xy\"\n      items={getItems(10, false)}\n      helperClass={style.stylizedHelper}\n      className={classNames(style.list, style.stylizedList, style.grid)}\n      itemClass={classNames(style.stylizedItem, style.gridItem)}\n    />\n  </div>\n);\n\nexport default Base;",tn="import range from 'lodash/range';\nimport random from 'lodash/random';\n\nexport default function getItems(count, height) {\n  const heights = [65, 110, 140, 65, 90, 65];\n  return range(count).map((value) => ({\n    value,\n    height: height == null ? heights[random(0, heights.length - 1)] : height,\n  }));\n}",rn="import React from 'react';\nimport { sortableHoc } from 'assui';\nimport SortItem from './SortItem';\n\nconst { sortableContainer } = sortableHoc;\n\nconst SortableList = sortableContainer(\n  ({ className, items, disabledItems = [], itemClass, isSorting, shouldUseDragHandle, type }) => (\n    <div className={className}>\n      {items.map(({ value, height }, index) => {\n        const disabled = disabledItems.includes(value);\n\n        return (\n          <SortItem\n            tabbable\n            key={`item-${value}`}\n            disabled={disabled}\n            isDisabled={disabled}\n            className={itemClass}\n            index={index}\n            itemIndex={index}\n            value={value}\n            height={height}\n            shouldUseDragHandle={shouldUseDragHandle}\n            type={type}\n            isSorting={isSorting}\n          />\n        );\n      })}\n    </div>\n  ),\n);\n\nexport default SortableList;",an="import React from 'react';\nimport { sortableHoc } from 'assui';\nimport classNames from 'classnames';\nimport Handle from './Handle';\nimport style from './index.modules.less';\n\nconst { sortableElement } = sortableHoc;\n\nconst SortItem = sortableElement(\n  ({\n    tabbable,\n    className,\n    isDisabled,\n    height,\n    style: propStyle,\n    shouldUseDragHandle,\n    value,\n    itemIndex,\n    isSorting,\n  }) => {\n    const bodyTabIndex = tabbable && !shouldUseDragHandle ? 0 : -1;\n    const handleTabIndex = tabbable && shouldUseDragHandle ? 0 : -1;\n\n    return (\n      <div\n        className={classNames(\n          className,\n          isDisabled && style.disabled,\n          isSorting && style.sorting,\n          shouldUseDragHandle && style.containsDragHandle,\n        )}\n        style={{\n          height,\n          ...propStyle,\n        }}\n        tabIndex={bodyTabIndex}\n        data-index={itemIndex}\n      >\n        {shouldUseDragHandle && <Handle tabIndex={handleTabIndex} />}\n        <div className={style.wrapper}>\n          <span>Item</span> {value}\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default SortItem;",on="import React from 'react';\nimport { sortableHoc } from 'assui';\nimport style from './index.modules.less';\n\nconst { sortableHandle } = sortableHoc;\n\nconst Handle = sortableHandle(({ tabIndex }) => (\n  <div className={style.handle} tabIndex={tabIndex}>\n    <svg viewBox=\"0 0 50 50\">\n      <path\n        d=\"M 0 7.5 L 0 12.5 L 50 12.5 L 50 7.5 L 0 7.5 z M 0 22.5 L 0 27.5 L 50 27.5 L 50 22.5 L 0 22.5 z M 0 37.5 L 0 42.5 L 50 42.5 L 50 37.5 L 0 37.5 z\"\n        color=\"#000\"\n      />\n    </svg>\n  </div>\n));\n\nexport default Handle;",sn="@focusedOutlineColor: #4c9ffe;\n\n.root {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  height: 100%;\n  padding: 10px 0;\n  background-color: #f5f6fa;\n}\n\n.list {\n  width: 400px;\n  height: 600px;\n  overflow: auto;\n  border: 1px solid #999;\n  -webkit-overflow-scrolling: touch;\n}\n\n.item {\n  position: relative;\n  border-bottom: 1px solid #999;\n  cursor: grab;\n  touch-action: manipulation;\n\n  &.sorting {\n    pointer-events: none;\n  }\n}\n\n.containsDragHandle {\n  cursor: default;\n}\n\n.stylizedList {\n  position: relative;\n  z-index: 0;\n  background-color: #f3f3f3;\n  border: 1px solid #efefef;\n  border-radius: 3px;\n  outline: none;\n}\n\n.stylizedItem {\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  padding: 0 20px;\n  color: #333;\n  font-weight: 400;\n  background-color: #fff;\n  border-bottom: 1px solid #efefef;\n  outline: none;\n  user-select: none;\n\n  &:focus:not(.containsDragHandle) {\n    text-indent: -2px;\n    border: 2px solid @focusedOutlineColor;\n  }\n}\n\n.disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n// Drag handle\n\n.handleWrapper {\n  width: 18px;\n  height: 18px;\n  outline: none;\n}\n\n.handle {\n  display: block;\n  width: 18px;\n  height: 18px;\n  margin-right: 20px;\n  overflow: hidden;\n  cursor: grab;\n\n  > svg {\n    opacity: 0.3;\n  }\n}\n\n// Horizontal list\n\n.horizontalList {\n  display: flex;\n  width: 600px;\n  height: 300px;\n  white-space: nowrap;\n}\n\n.horizontalItem {\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  border-right: 1px solid #efefef;\n  border-bottom: 0;\n}\n\n// Grid\n\n.grid {\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: auto auto auto auto;\n  width: auto;\n  height: 130 * 3px + 20px;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n}\n\n.gridItem {\n  width: 130px;\n  height: 130px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n\n  .wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    font-size: 28px;\n    background-color: #fff;\n    transform: scale(1);\n\n    span {\n      display: none;\n    }\n  }\n}\n\n.gridVariableSized {\n  .gridItem {\n    &[data-index='0'] {\n      grid-row-end: span 2;\n      grid-column-end: span 2;\n      width: auto !important;\n      height: auto !important;\n    }\n\n    &.sorting {\n      .wrapper {\n        transition: transform 150ms ease-in-out;\n      }\n    }\n  }\n}\n\n.gridItemVariableSized {\n  &[data-index='0'] {\n    .wrapper {\n      font-size: 56px;\n    }\n  }\n}\n\n// Nested\n\n.category {\n  height: auto;\n\n  .categoryHeader {\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    padding: 10px 14px;\n    background: #f9f9f9;\n    border-bottom: 1px solid #efefef;\n    user-select: none;\n  }\n\n  .categoryList {\n    height: auto;\n  }\n}\n\n// Divider\n\n.divider {\n  padding: 10px 20px;\n  color: #333;\n  font-size: 14px;\n  text-transform: uppercase;\n  background: #f9f9f9;\n  border-bottom: 1px solid #efefef;\n}\n\n// Helper styles\n\n.helper {\n  box-shadow: 0 5px 5px -5px rgba(0, 0, 0, 0.2), 0 -5px 5px -5px rgba(0, 0, 0, 0.2);\n  cursor: grabbing;\n}\n\n.stylizedHelper {\n  &:not(.gridItem),\n  &.gridItem .wrapper {\n    background-color: rgba(255, 255, 255, 0.9);\n    border: 1px solid #efefef;\n    border-radius: 3px;\n    box-shadow: 0 5px 5px -5px rgba(0, 0, 0, 0.2);\n\n    &.horizontalItem {\n      cursor: col-resize;\n    }\n\n    &:focus {\n      box-shadow: 0 0 5px 1px @focusedOutlineColor;\n    }\n  }\n\n  &.gridItem .wrapper {\n    transition: transform 150ms ease-in-out;\n  }\n}\n\n.shrinkedHelper {\n  height: 20px !important;\n}\n\n:global {\n  body {\n    font-family: 'Montserrat', 'Helvetica Neue', 'Helvetica', sans-serif;\n    background-color: rgba(#f4f5f9, 0.7);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n    margin: 0;\n  }\n}",dn="import React from 'react';\nimport classNames from 'classnames';\nimport { sortableHoc } from 'assui';\nimport style from './index.modules.less';\n\nconst { arrayMove } = sortableHoc;\n\nexport default class ListWrapper extends React.Component {\n  state = {\n    items: this.props.items,\n    isSorting: false,\n  };\n\n  static defaultProps = {\n    className: classNames(style.list, style.stylizedList),\n    itemClass: classNames(style.item, style.stylizedItem),\n    width: 400,\n    height: 600,\n  };\n\n  onSortStart = (sortEvent, nativeEvent) => {\n    const { onSortStart } = this.props;\n    this.setState({ isSorting: true });\n\n    document.body.style.cursor = 'grabbing';\n\n    if (onSortStart) {\n      onSortStart(sortEvent, nativeEvent, this.refs.component);\n    }\n  };\n\n  onSortEnd = (sortEvent, nativeEvent) => {\n    const { onSortEnd } = this.props;\n    const { oldIndex, newIndex } = sortEvent;\n    const { items } = this.state;\n\n    this.setState({\n      items: arrayMove(items, oldIndex, newIndex),\n      isSorting: false,\n    });\n\n    document.body.style.cursor = '';\n\n    if (onSortEnd) {\n      onSortEnd(sortEvent, nativeEvent, this.refs.component);\n    }\n  };\n\n  render() {\n    const Component = this.props.component;\n    const { items, isSorting } = this.state;\n    const props = {\n      isSorting,\n      items,\n      onSortEnd: this.onSortEnd,\n      onSortStart: this.onSortStart,\n      ref: 'component',\n      useDragHandle: this.props.shouldUseDragHandle,\n    };\n\n    return <Component {...this.props} {...props} />;\n  }\n}",ln="import React from 'react';\nimport classNames from 'classnames';\nimport { sortableHoc } from 'assui';\nimport getItems from '../utils';\nimport SortableContainer from '../SortableContainer';\nimport ListWrapper from '../ListWrapper';\nimport style from '../index.modules.less';\n\nconst { arrayMove } = sortableHoc;\n\nconst LargeFirstItem = () => (\n  <div className={style.root}>\n    <ListWrapper\n      component={SortableContainer}\n      axis=\"xy\"\n      items={getItems(9, false)}\n      helperClass={style.stylizedHelper}\n      className={classNames(style.list, style.stylizedList, style.grid, style.gridVariableSized)}\n      itemClass={classNames(style.stylizedItem, style.gridItem, style.gridItemVariableSized)}\n      onSortStart={({ node, helper }, event) => {\n        const nodeBoundingClientRect = node.getBoundingClientRect();\n        const helperWrapperNode = helper.childNodes[0];\n        const transformOrigin = {\n          x: ((event.clientX - nodeBoundingClientRect.left) / nodeBoundingClientRect.width) * 100,\n          y: ((event.clientY - nodeBoundingClientRect.top) / nodeBoundingClientRect.height) * 100,\n        };\n\n        helperWrapperNode.style.transformOrigin = `${transformOrigin.x}% ${transformOrigin.y}%`;\n      }}\n      onSortOver={({ nodes, newIndex, index, helper }) => {\n        const finalNodes = arrayMove(nodes, index, newIndex);\n        const oldNode = nodes[index].node;\n        const newNode = nodes[newIndex].node;\n        const helperScale = newNode.offsetWidth / oldNode.offsetWidth;\n        const helperWrapperNode = helper.childNodes[0];\n\n        helperWrapperNode.style.transform = `scale(${helperScale})`;\n\n        finalNodes.forEach(({ node }, i) => {\n          const oldNodeItem = nodes[i].node;\n          const scale = oldNodeItem.offsetWidth / node.offsetWidth;\n          const wrapperNode = node.querySelector(`.${style.wrapper}`);\n\n          wrapperNode.style.transform = `scale(${scale})`;\n          wrapperNode.style.transformOrigin = newIndex > i ? '0 0' : '100% 0';\n        });\n      }}\n      onSortEnd={({ nodes }) => {\n        nodes.forEach(({ node }) => {\n          const wrapperNode = node.querySelector(`.${style.wrapper}`);\n\n          wrapperNode.style.transform = '';\n        });\n      }}\n    />\n  </div>\n);\n\nexport default LargeFirstItem;",pn="import React from 'react';\nimport getItems from '../utils';\nimport SortableContainer from '../SortableContainer';\nimport ListWrapper from '../ListWrapper';\nimport style from '../index.modules.less';\n\nconst DragHandle = () => (\n  <div className={style.root}>\n    <ListWrapper component={SortableContainer} shouldUseDragHandle items={getItems(20, 59)} />\n  </div>\n);\n\nexport default DragHandle;",cn="import React from 'react';\nimport { SplitPane } from 'assui';\n\nexport default () => (\n  <div style={{ position: 'relative', height: 300 }}>\n    <SplitPane\n      split=\"vertical\"\n      onResizerClick={() => console.log('onResizerClick')}\n      minSize={50}\n      maxSize={200}\n      defaultSize={100}\n      className=\"primary\"\n    >\n      <div>min: 50px, max: 200px</div>\n      <div>min: 50px</div>\n    </SplitPane>\n  </div>\n);",un='import React from \'react\';\nimport { SplitPane } from \'assui\';\n\nexport default () => (\n  <div style={{ position: \'relative\', height: 300 }}>\n    <SplitPane split="horizontal" defaultSize="33%">\n      <div>pane 1 size: 33%</div>\n      <SplitPane split="horizontal" defaultSize="50%">\n        <div>pane 2 size: 50% (of remaining space)</div>\n        <div>pane 3</div>\n      </SplitPane>\n    </SplitPane>\n  </div>\n);',mn="import React from 'react';\nimport { StepNumberInput } from 'assui';\n\nconst Demo = () => {\n  const onChange = (values) => {\n    console.log('Received values: ', values);\n  };\n\n  return (\n    <StepNumberInput\n      min={0}\n      max={10}\n      maxLength={4}\n      placeholder=\"Basic usage\"\n      enableMinus\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Demo;",fn='import React from \'react\';\nimport { StepNumberInput } from \'assui\';\nimport { Descriptions } from \'antd\';\n\nconst Demo = () => {\n  const onChange = (values) => {\n    console.log(\'Received values: \', values);\n  };\n\n  return (\n    <>\n      <Descriptions layout="vertical" column={8}>\n        <Descriptions.Item label="base" span={8}>\n          <StepNumberInput\n            placeholder="float base usage"\n            onChange={onChange}\n            numberType="float"\n            step="0.1"\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label="precision(\u8bbe\u7f6e4\u4f4d\u7cbe\u5ea6)" span={8}>\n          <StepNumberInput\n            placeholder="float precision usage"\n            precision={4}\n            onChange={onChange}\n            numberType="float"\n            step="0.1"\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default Demo;',hn='import React from \'react\';\nimport { StepNumberInput } from \'assui\';\nimport { Descriptions } from \'antd\';\n\nconst Demo = () => {\n  const onChange = (values) => {\n    console.log(\'Received values: \', values);\n  };\n\n  return (\n    <Descriptions layout="vertical" column={8}>\n      <Descriptions.Item label="int usage" span={8}>\n        <StepNumberInput placeholder="step 2" onChange={onChange} step={2} />\n      </Descriptions.Item>\n      <Descriptions.Item label="float usage" span={8}>\n        <StepNumberInput placeholder="step 0.1" onChange={onChange} numberType="float" step="0.1" />\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default Demo;',yn="import React, { useState } from 'react';\nimport { StepNumberInput } from 'assui';\nimport { Descriptions } from 'antd';\n\nconst Demo = () => {\n  const [money, setMoney] = useState(1000);\n  const [percentageNumber, setPercentageNumber] = useState(100);\n  const onChange = (values) => {\n    setMoney(values);\n  };\n\n  const onPercentageChange = (values) => {\n    setPercentageNumber(values);\n  };\n\n  return (\n    <>\n      <Descriptions layout=\"vertical\" column={8}>\n        <Descriptions.Item label=\"\u94b1\" span={8}>\n          <StepNumberInput\n            value={money}\n            formatter={(value) => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, '')}\n            onChange={onChange}\n          />\n        </Descriptions.Item>\n        <Descriptions.Item label=\"\u767e\u5206\u6bd4\" span={8}>\n          <StepNumberInput\n            value={percentageNumber}\n            formatter={(value) => `${value}%`}\n            parser={(value) => value.replace('%', '')}\n            onChange={onPercentageChange}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default Demo;",vn='import React from \'react\';\nimport { Form, Button } from \'antd\';\nimport { StepNumberInput } from \'assui\';\n\nconst Demo = () => {\n  const onFinish = (values) => {\n    console.log(\'Received values: \', values);\n  };\n\n  return (\n    <Form\n      onFinish={onFinish}\n      initialValues={{\n        int: 0,\n        float: 0.1,\n        intEnableMinus: \'\',\n        floatEnableMinus: \'\',\n      }}\n    >\n      <Form.Item name="int" label="int">\n        <StepNumberInput />\n      </Form.Item>\n      <Form.Item name="float" label="float">\n        <StepNumberInput numberType="float" step="0.1" />\n      </Form.Item>\n      <Form.Item name="intEnableMinus" label="int(enableMinus)">\n        <StepNumberInput enableMinus />\n      </Form.Item>\n      <Form.Item name="floatEnableMinus" label="float(enableMinus)">\n        <StepNumberInput numberType="float" enableMinus step="0.1" />\n      </Form.Item>\n      <Form.Item name="step" label="step(withMinMax)">\n        <StepNumberInput step={2} min={0} max={10} placeholder="2 step each time" />\n      </Form.Item>\n      <Form.Item>\n        <Button type="primary" htmlType="submit">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Demo;',bn="import React from 'react';\nimport { TextArea } from 'assui';\n\nconst onChange = (value) => {\n  console.log(value);\n};\n\nexport default () => (\n  <TextArea placeholder=\"textarea with clear icon\" allowClear onChange={onChange} />\n);",gn="import React from 'react';\nimport { TextArea } from 'assui';\n\nconst onChange = (value) => {\n  console.log(value);\n};\n\nexport default () => (\n  <TextArea\n    placeholder=\"textarea with clear icon\"\n    allowClear\n    onChange={onChange}\n    formatter={(value) => value.toUpperCase()}\n  />\n);",En="import React from 'react';\nimport { TextInput } from 'assui';\n\nconst onChange = (value) => {\n  console.log(value);\n};\n\nexport default () => {\n  const textInputRef = React.useRef();\n\n  React.useEffect(() => {\n    console.log(textInputRef, 'textInputRef');\n  });\n\n  return <TextInput ref={textInputRef} placeholder=\"input text\" onChange={onChange} />;\n};",Hn="import React, { useRef, useEffect } from 'react';\nimport { Button } from 'antd';\nimport { canvasToImg } from 'aa-utils';\n\nexport default () => {\n  const QRRef = useRef();\n\n  useEffect(() => {\n    const c = document.getElementById('myCanvas');\n    const ctx = c.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 200, 0);\n    grd.addColorStop(0, 'red');\n    grd.addColorStop(1, 'white');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, 200, 100);\n\n    QRRef.current = c;\n  }, []);\n\n  const onDownloadFilled = () => {\n    canvasToImg.saveAsImage(QRRef.current, { name: '2323' });\n  };\n\n  return (\n    <div>\n      <canvas id=\"myCanvas\" width=\"200\" height=\"100\" />\n      <Button onClick={onDownloadFilled}>\u4e0b\u8f7d</Button>\n    </div>\n  );\n};",wn="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { dateUtils } from 'aa-utils';\nimport moment from 'moment';\n\nconst dateMoment = moment(1598343036538).utc();\n\nconst Demo = () => (\n  <div>\n    <Descriptions column={1}>\n      <Descriptions.Item label=\"\u683c\u5f0f\u5316\u65e5\u671f\">{dateUtils.formatDate(dateMoment)}</Descriptions.Item>\n      <Descriptions.Item label=\"\u683c\u5f0f\u5316\u65e5\u671f(\u81ea\u5b9a\u4e49\u683c\u5f0f)\">\n        {dateUtils.formatDate(dateMoment, 'YYYY/MM/DD')}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u683c\u5f0f\u5316\u65f6\u95f4\">{dateUtils.formatTime(dateMoment)}</Descriptions.Item>\n      <Descriptions.Item label=\"\u683c\u5f0f\u5316\u65f6\u95f4(\u81ea\u5b9a\u4e49\u683c\u5f0f)\">\n        {dateUtils.formatTime(dateMoment, 'HH:mm')}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u683c\u5f0f\u5316\u65e5\u671f\u65f6\u95f4\">\n        {dateUtils.formatDateTime(dateMoment)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u683c\u5f0f\u5316\u65e5\u671f\u65f6\u95f4(\u81ea\u5b9a\u4e49\u683c\u5f0f)\">\n        {dateUtils.formatDateTime(dateMoment, 'YYYY/MM/DD HH:mm')}\n      </Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;",xn="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { dateUtils } from 'aa-utils';\nimport moment from 'moment';\n\nconst Demo = () => (\n  <div>\n    <Descriptions column={1}>\n      <Descriptions.Item label=\"\u89e3\u6790\u65e5\u671f\">\n        {dateUtils.parseDate('1995-09-23').format(dateUtils.dateFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u89e3\u6790\u65e5\u671f(\u81ea\u5b9a\u4e49\u683c\u5f0f)\">\n        {dateUtils.parseDate('1985/10/23', 'YYYY/MM/DD').format(dateUtils.dateFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u89e3\u6790\u65f6\u95f4\">\n        {dateUtils.parseTime('12:23:23').format(dateUtils.timeFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u89e3\u6790\u65f6\u95f4(\u81ea\u5b9a\u4e49\u683c\u5f0f)\">\n        {dateUtils.parseTime('12-23-23', 'HH-mm-ss').format(dateUtils.timeFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u89e3\u6790\u65e5\u671f\u65f6\u95f4(\u65f6\u95f4\u6233)\">\n        {dateUtils.parseDateTime(1598343036538).format(dateUtils.dateTimeFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u89e3\u6790\u65e5\u671f\u65f6\u95f4(\u539f\u751f\u65f6\u95f4\u5bf9\u8c61)\">\n        {dateUtils.parseDateTime(new Date(2018, 8, 18)).format(dateUtils.dateTimeFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"\u89e3\u6790\u65e5\u671f\u65f6\u95f4(moment\u5bf9\u8c61)\">\n        {dateUtils.parseDateTime(moment()).format(dateUtils.dateTimeFormat)}\n      </Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;",In='import React from \'react\';\nimport { Descriptions } from \'antd\';\nimport { dateUtils } from \'aa-utils\';\nimport moment from \'moment\';\n\nconst Demo = () => (\n  <div>\n    <Descriptions column={1}>\n      <Descriptions.Item label="\u83b7\u53d6\u65f6\u95f4\u6233(\u9ed8\u8ba4\u5f53\u524d\u65f6\u95f4)">\n        {dateUtils.formatToTimestamp()}\n      </Descriptions.Item>\n      <Descriptions.Item label="\u83b7\u53d6\u65f6\u95f4\u6233(moment\u5bf9\u8c61)">\n        {dateUtils.formatToTimestamp(moment())}\n      </Descriptions.Item>\n      <Descriptions.Item label="\u83b7\u53d6\u65f6\u95f4\u6233(Date\u5bf9\u8c61)">\n        {dateUtils.formatToTimestamp(new Date())}\n      </Descriptions.Item>\n      <Descriptions.Item label="\u83b7\u53d6\u5f53\u524d\u65f6\u95f4">\n        {dateUtils.getToday().format(dateUtils.dateTimeFormat)}\n      </Descriptions.Item>\n      <Descriptions.Item label="\u83b7\u53d6\u65f6\u533a">{dateUtils.getTimeZone()}</Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;',Tn="import React, { useEffect } from 'react';\nimport { message, Button } from 'antd';\nimport emitter from './emitter';\nimport EmitButtonTwo from './EmitButtonTwo';\nimport EmitButtonOne from './EmitButtonOne';\n\nconst consoleFunc = (arg1) => {\n  message.info(arg1);\n};\n\nexport default () => {\n  useEffect(() => {\n    emitter.on('message', (text) => {\n      message.info(text);\n    });\n\n    emitter.on('console', consoleFunc);\n    console.log('emitter', emitter);\n  }, []);\n\n  const offConsoleFunc = () => {\n    emitter.off('console', consoleFunc);\n  };\n\n  return (\n    <>\n      <EmitButtonOne />\n      <EmitButtonTwo />\n      <Button onClick={offConsoleFunc}>\u79fb\u9664console\u4e8b\u4ef6</Button>\n    </>\n  );\n};",Cn="import { events } from 'aa-utils';\n\nconst { EventEmitter } = events;\nconst emitter = new EventEmitter();\n\nexport default emitter;",Mn="import React from 'react';\nimport { Button } from 'antd';\nimport emitter from './emitter';\n\nconst EmitButtonTwo = () => (\n  <Button style={{ marginRight: 20 }} onClick={() => emitter.emit('console', 'console \u4e8b\u4ef6')}>\n    \u89e6\u53d1console\n  </Button>\n);\n\nexport default EmitButtonTwo;",Ln="import React from 'react';\nimport { Button } from 'antd';\nimport emitter from './emitter';\n\nconst EmitButtonOne = () => (\n  <Button\n    style={{ marginRight: 20 }}\n    onClick={() => emitter.emit('message', 'message hello world')}\n  >\n    \u89e6\u53d1message\n  </Button>\n);\n\nexport default EmitButtonOne;",Dn="import React, { useEffect } from 'react';\nimport { Button, message } from 'antd';\nimport EventEmitter from 'aa-utils/lib/events';\n\nconst ee = new EventEmitter();\n\nconst TextButton = () => (\n  <Button onClick={() => ee.emit('message', 'hello world')}>\u53ea\u89e6\u53d1\u4e00\u6b21</Button>\n);\n\nexport default () => {\n  useEffect(() => {\n    ee.once('message', (text) => {\n      console.log('TextButton');\n      message.info(text);\n    });\n  }, []);\n  return (\n    <div>\n      <TextButton />\n    </div>\n  );\n};",Rn="import React from 'react';\nimport { formatCountdown } from 'aa-utils';\n\nconst Demo = () => {\n  const deadline = 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\n  return <div>{formatCountdown(deadline, 'D \u5929 HH \u65f6 m \u5206 ss \u79d2')}</div>;\n};\n\nexport default Demo;",kn="import { Card } from 'antd';\nimport React from 'react';\nimport { canvasToImg, html2canvas } from 'aa-utils';\nimport './index.less';\n\nconst InviteFriends = () => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const canvasRef = React.useRef<HTMLDivElement | null>(null);\n\n  const onClick = () => {\n    html2canvas(ref.current as HTMLDivElement).then((canvas) => {\n      canvasToImg.saveAsImage(canvas, { fileName: '2323ddd', width: 400, height: 284 });\n\n      canvasRef.current.appendChild(canvas);\n    });\n  };\n\n  return (\n    <>\n      <div onClick={onClick}>\u70b9\u51fb\u4e0b\u8f7d</div>\n      <div className=\"download-img-card\" ref={ref}>\n        <Card title=\"asf\">\n          <div>\u4e71\u4e03\u516b\u7cdf</div>\n        </Card>\n      </div>\n      <div>\u8fd9\u662f\u590d\u5236\u7684canvas</div>\n      <div ref={canvasRef} />\n    </>\n  );\n};\n\nexport default InviteFriends;",Sn=".download-img-card {\n  width: 200px;\n}",Pn="import React from 'react';\nimport { localStorage } from 'aa-utils';\n\nexport default () => {\n  localStorage.set('name', '\u674e\u5c0f\u9f99');\n\n  return <div>{localStorage.get('name')}</div>;\n};",Nn="import React from 'react';\nimport { localStorage } from 'aa-utils';\n\nexport default () => {\n  localStorage.setObject('class', [{ name: '\u674e\u5c0f\u9f99' }]);\n\n  return <div>{JSON.stringify(localStorage.getObject('class'))}</div>;\n};",Bn='import React from \'react\';\nimport { Descriptions, Typography } from \'antd\';\nimport numberUtils from \'aa-utils/lib/numberUtils\';\n\nconst { Title } = Typography;\nconst { formatNumber } = numberUtils;\n\nconst Demo = () => (\n  <div>\n    <Title level={5}>\u683c\u5f0f\u5316\u6570\u5b57</Title>\n    <Descriptions column={1}>\n      <Descriptions.Item label="2332.2">{formatNumber(2332.2)}</Descriptions.Item>\n      <Descriptions.Item label="-2332.225(\u6709\u5206\u9694\u7b26)">\n        {formatNumber(-2332.225, { useGrouping: true })}\n      </Descriptions.Item>\n      <Descriptions.Item label="2332.2(\u6700\u5c0f\u4fdd\u75592\u4f4d\u5c0f\u6570)">\n        {formatNumber(2332.2, { minFractionDigits: 2 })}\n      </Descriptions.Item>\n      <Descriptions.Item label="2332.228(\u6700\u5927\u4fdd\u75592\u4f4d\u5c0f\u6570)">\n        {formatNumber(2332.228, { maxFractionDigits: 2 })}\n      </Descriptions.Item>\n      <Descriptions.Item label="2332.2282323(\u56fa\u5b9a\u4fdd\u75594\u4f4d\u5c0f\u6570)">\n        {formatNumber(2332.2282323, { maxFractionDigits: 4, minFractionDigits: 4 })}\n      </Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;',On="import React from 'react';\nimport { Descriptions, Typography } from 'antd';\nimport numberUtils from 'aa-utils/lib/numberUtils';\n\nconst { Title } = Typography;\nconst { formatNumber } = numberUtils;\n\nconst Demo = () => (\n  <div>\n    <Title level={5}>\u683c\u5f0f\u5316\u6570\u5b57</Title>\n    <Descriptions column={1}>\n      <Descriptions.Item label=\"2332.2\">\n        {formatNumber(2332.2, { usePlus: true })}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"-2332.225\">\n        {formatNumber(-2332.225, { usePlus: true })}\n      </Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;",An="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { numberUtils } from 'aa-utils';\n\nexport default () => (\n  <Descriptions column={1}>\n    <Descriptions.Item label=\"1.1252(\u9ed8\u8ba4\u4fdd\u75592\u4f4d\u5c0f\u6570)\">\n      {numberUtils.formatNumber('1.1252', { roundingMode: 'down' })}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"0.8(\u5c0f\u6570\u90e8\u5206\u4e3a\u65e0\u503c)\">\n      {numberUtils.formatNumber('0.8', {\n        roundingMode: 'down',\n        minFractionDigits: 0,\n        maxFractionDigits: 0,\n      })}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"-0.252523(\u4fdd\u75593\u4f4d\u5c0f\u6570)\">\n      {numberUtils.formatNumber('-12.252523', {\n        roundingMode: 'down',\n        minFractionDigits: 3,\n        maxFractionDigits: 3,\n      })}\n    </Descriptions.Item>\n  </Descriptions>\n);",jn="/**\n * title: \u5927\u6570\u636e\n * desc: `formatNumber`\u7684`value`\u53ef\u4ee5\u4f20`string`\u4e5f\u53ef\u4ee5\u662f`number`,\u4f46\u662f\u5728`value` \u4f4d\u6570\u5f88\u591a\u7684\u65f6\u5019\uff0c\u51fd\u6570\u4f20\u53c2`number`\u4f1a\u5931\u53bb\u7cbe\u5ea6\uff0c\u6240\u4ee5\u5fc5\u987b\u4f20`string`\n */\n\nimport React from 'react';\nimport { Descriptions, Typography } from 'antd';\nimport { numberUtils } from 'aa-utils';\n\nconst { Title } = Typography;\nconst { formatNumber } = numberUtils;\n\nconst Demo = () => (\n  <div>\n    <Title level={5}>\u683c\u5f0f\u5316\u6570\u5b57</Title>\n    <Descriptions column={1}>\n      <Descriptions.Item label=\"77777777.77777777(number)\">\n        {formatNumber(77777777.77777777, { minFractionDigits: 8, maxFractionDigits: 8 })}\n      </Descriptions.Item>\n\n      <Descriptions.Item label=\"77777777.77777777(string)\">\n        {formatNumber('77777777.77777777', { minFractionDigits: 8, maxFractionDigits: 8 })}\n      </Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;",Fn="import React from 'react';\nimport { Descriptions, Typography } from 'antd';\nimport numberUtils from 'aa-utils/lib/numberUtils';\n\nconst { Title } = Typography;\nconst { formatFixedFraction } = numberUtils;\n\nconst Demo = () => (\n  <div>\n    <Title level={5}>\u683c\u5f0f\u5316\u6570\u5b57</Title>\n    <Descriptions column={1}>\n      <Descriptions.Item label=\"\u9ed8\u8ba4\u56fa\u5b9a8\u4f4d\u5c0f\u6570\">{formatFixedFraction(2332.2)}</Descriptions.Item>\n      <Descriptions.Item label=\"\u56fa\u5b9a4\u4f4d\u5c0f\u6570\">\n        {formatFixedFraction(-2332.225, { fractionDigits: 4 })}\n      </Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;",zn="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { numberUtils } from 'aa-utils';\n\nconst { formatPercent } = numberUtils;\n\nexport default () => (\n  <Descriptions column={1}>\n    <Descriptions.Item label=\"0.12343\">{formatPercent(0.12343)}</Descriptions.Item>\n\n    <Descriptions.Item label=\"-0.1(\u65e0\u767e\u5206\u53f7)\">\n      {formatPercent('-0.1', { useUnit: false })}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"-0.252523(\u4fdd\u75593\u4f4d\u5c0f\u6570)\">\n      {formatPercent('-0.252523', { minFractionDigits: 3, maxFractionDigits: 3 })}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"-0.1(usePlus)\">\n      {formatPercent('0.1', { usePlus: true })}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"0.252523(usePlus)\">\n      {formatPercent('-0.252523', { usePlus: true })}\n    </Descriptions.Item>\n  </Descriptions>\n);",Un='/**\n * title: \u5927\u6570\u636e\n * desc: `formatNumber`\u7684`value`\u53ef\u4ee5\u4f20`string`\u4e5f\u53ef\u4ee5\u662f`number`,\u4f46\u662f\u5728`value` \u4f4d\u6570\u5f88\u591a\u7684\u65f6\u5019\uff0c\u51fd\u6570\u4f20\u53c2`number`\u4f1a\u5931\u53bb\u7cbe\u5ea6\uff0c\u6240\u4ee5\u5fc5\u987b\u4f20`string`\n */\n\nimport React from \'react\';\nimport { Descriptions, Typography } from \'antd\';\nimport { numberUtils } from \'aa-utils\';\n\nconst { Title } = Typography;\nconst { times, plus, divide, minus } = numberUtils;\n\nconst Demo = () => (\n  <div>\n    <Title level={5}>\u6570\u5b57</Title>\n    <Descriptions column={1}>\n      <Descriptions.Item label="\u4e58\u6cd5 times(2,2,3)">{times(2, 2, 3)}</Descriptions.Item>\n      <Descriptions.Item label="\u52a0\u6cd5 plus(0.1,0.2)">{plus(0.1, 0.2)}</Descriptions.Item>\n      <Descriptions.Item label="\u9664\u6cd5 divide(12,2,2)">{divide(12, 2, 2)}</Descriptions.Item>\n      <Descriptions.Item label="\u51cf\u6cd5 minus(2,2,3)">{minus(2, 2, 3)}</Descriptions.Item>\n    </Descriptions>\n  </div>\n);\n\nexport default Demo;',Kn="import React from 'react';\nimport { Descriptions } from 'antd';\nimport { numberUtils } from 'aa-utils';\n\nconst { isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo } =\n  numberUtils;\n\nexport default () => (\n  <Descriptions column={1}>\n    <Descriptions.Item label=\"\u662f\u5426\u5c0f\u4e8e\">\n      isLessThan('12345123451234512345', '12345123451234512399'):\n      {` ${isLessThan('12345123451234512345', '12345123451234512399')}`}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\">\n      isLessThanOrEqualTo('77777777.77777778', '77777777.77777777'):\n      {` ${isLessThanOrEqualTo('77777777.77777778', '77777777.77777777')}`}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"\u662f\u5426\u5927\u4e8e\">\n      isGreaterThan('12345123451234512399', '12345123451234512345'):\n      {` ${isGreaterThan('12345123451234512399', '12345123451234512345')}`}\n    </Descriptions.Item>\n\n    <Descriptions.Item label=\"\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\">\n      isGreaterThanOrEqualTo('77777777.77777777', '77777777.77777778'):\n      {` ${isGreaterThanOrEqualTo('77777777.77777777', '77777777.77777778')}`}\n    </Descriptions.Item>\n  </Descriptions>\n);",qn="import React from 'react';\nimport Table from './Table';\nimport { resizableColumnsTable } from 'aa-utils';\nimport 'aa-utils/lib/resizableColumnsTable/styles/index.less';\n\nexport default class ResizableTable extends React.PureComponent {\n  componentDidMount() {\n    const domElemTableList = document.querySelectorAll('.table');\n    resizableColumnsTable(domElemTableList[0], {\n      liveDrag: true,\n    });\n    resizableColumnsTable(domElemTableList[1], {\n      liveDrag: false,\n      headerOnly: false,\n    });\n    resizableColumnsTable(domElemTableList[2], {\n      liveDrag: false,\n      headerOnly: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>liveDrag: true</h4>\n        <Table />\n        <h4>liveDrag: false</h4>\n        <Table />\n        <h4>other</h4>\n        <div style={{ width: 800, overflow: 'auto' }}>\n          <Table />\n        </div>\n      </div>\n    );\n  }\n}",Vn='import React from \'react\';\nimport \'./index.less\';\n\nexport default class Table extends React.PureComponent {\n  render() {\n    return (\n      <table className="table" style={{ width: 900 }}>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope="row">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope="row">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <th scope="row">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}',_n=".table {\n  display: table;\n  width: 100%;\n  text-align: center;\n  table-layout: fixed;\n  background-color: #f5f5f5;\n  border: solid #d7d7d7;\n  border-width: 1px 0 0 1px;\n  border-radius: 8px;\n\n  tr {\n    th,\n    td {\n      padding: 10px;\n      background-color: #f5f5f5;\n      border: solid #d7d7d7;\n      border-width: 0 1px 1px 0;\n\n      &:nth-of-type(1) {\n        width: 15%;\n        min-width: 165px;\n        background-color: #f5f5f5;\n      }\n    }\n  }\n}",Xn="import React, { useRef } from 'react';\nimport { Input, Select, Form, Button, Row, Col } from 'antd';\nimport { scrollIntoView } from 'aa-utils';\nimport './index.less';\n\nconst Demo = () => {\n  const itemsDomRef = useRef({});\n  const range = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n\n  const doScroll = (value) =>\n    scrollIntoView(itemsDomRef.current[value], {\n      behavior: 'smooth',\n      scrollMode: 'if-needed',\n    });\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={() => doScroll('C')}>\n        C\n      </Button>\n      <Button type=\"primary\" onClick={() => doScroll('D')}>\n        D\n      </Button>\n      <Button type=\"primary\" onClick={() => doScroll('F')}>\n        F\n      </Button>\n      <div className=\"scroll-container-1\">\n        {range.map((value) => (\n          <div\n            className=\"scroll-item-1\"\n            key={value}\n            ref={(el) => {\n              itemsDomRef.current[value] = el;\n            }}\n          >\n            {value}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Demo;",Wn=".scroll-container-1 {\n  box-sizing: content-box;\n  width: 200px;\n  height: 200px;\n  margin-top: 1px;\n  margin-right: auto;\n  margin-left: auto;\n  overflow: scroll;\n  background: hsla(0, 0%, 0%, 0.05);\n  box-shadow: 0 0 0 1px #e4e4e4;\n}\n\n.scroll-item-1 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n  margin: 20px;\n  color: hsla(0, 0%, 0%, 0.4);\n  background-color: #00d1b2;\n  border-radius: 4px;\n}\n\n.scroll-container-2 {\n  box-sizing: content-box;\n  width: 200px;\n  height: 200px;\n  margin-top: 1px;\n  margin-right: auto;\n  margin-left: auto;\n  overflow: scroll;\n  background: hsla(0, 0%, 0%, 0.05);\n  box-shadow: 0 0 0 1px #e4e4e4;\n}\n\n.alignment-container {\n  display: flex;\n  flex-wrap: wrap;\n  width: 300px;\n}\n\n.scroll-item-container {\n  display: flex;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n  padding: 17px 17px;\n}\n\n.scroll-item-2 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 66px;\n  height: 66px;\n  color: hsla(0, 0%, 0%, 0.3);\n  background-color: #00d1b2;\n  border-radius: 4px;\n}",Gn='/**\n * title: \u5bf9\u9f50\u6eda\u52a8\n * desc: `boundary` \u8bbe\u7f6e\u8fb9\u754c \u662f\u4e2a\u975e\u6807\u51c6\u5c5e\u6027\n */\nimport React, { useRef, useState } from \'react\';\nimport { Select, Button } from \'antd\';\nimport { scrollIntoView } from \'aa-utils\';\nimport \'./index.less\';\n\nconst Demo = () => {\n  const itemsDomRef = useRef({});\n  const [block, setBlock] = useState(\'center\');\n  const [inline, setInline] = useState(\'center\');\n  const range = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const doScroll = (value) =>\n    scrollIntoView(itemsDomRef.current[value], {\n      behavior: \'smooth\',\n      boundary: document.querySelector(\'.example-boundary\'),\n      block,\n      inline,\n    });\n\n  return (\n    <div>\n      <Button type="primary" onClick={() => doScroll(1)}>\n        1\n      </Button>\n      <Button type="primary" onClick={() => doScroll(5)}>\n        5\n      </Button>\n      <Button type="primary" onClick={() => doScroll(9)}>\n        9\n      </Button>\n\n      <Select label="Block" onChange={(value) => setBlock(value)} value={block}>\n        <Select.Option value="start">Start</Select.Option>\n        <Select.Option value="center">Center</Select.Option>\n        <Select.Option value="end">End</Select.Option>\n        <Select.Option value="nearest">Nearest</Select.Option>\n      </Select>\n\n      <Select label="Inline" onChange={(value) => setInline(value)} value={inline}>\n        <Select.Option value="start">Start</Select.Option>\n        <Select.Option value="center">Center</Select.Option>\n        <Select.Option value="end">End</Select.Option>\n        <Select.Option value="nearest">Nearest</Select.Option>\n      </Select>\n      <div className="scroll-container-2 example-boundary">\n        <div style={{ width: 300 }} className="alignment-container">\n          {range.map((value) => (\n            <div key={value} className="scroll-item-container">\n              <div\n                className="scroll-item-2"\n                key={value}\n                ref={(el) => {\n                  itemsDomRef.current[value] = el;\n                }}\n              >\n                {value}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Demo;',Yn="/**\n * title: \u5bf9\u9f50\u6eda\u52a8\n * desc: `boundary` \u8bbe\u7f6e\u8fb9\u754c \u662f\u4e2a\u975e\u6807\u51c6\u5c5e\u6027\n */\nimport { animate } from 'popmotion';\nimport React, { useRef } from 'react';\nimport { Button } from 'antd';\nimport Styler from 'stylefire';\nimport { scrollIntoView } from 'aa-utils';\nimport styles from './index.modules.less';\n\nconst range = ['A', 'B', 'C'];\n\nconst Demo = () => {\n  const itemsDomRef = useRef({});\n\n  const doScroll = (value) =>\n    scrollIntoView(itemsDomRef.current[value], {\n      behavior: (instructions) => {\n        const [{ el, left }] = instructions;\n        const styler = Styler(el);\n\n        animate({\n          from: el.scrollLeft,\n          to: left,\n          type: 'spring',\n          onUpdate: (aLeft) => styler.set('scrollLeft', aLeft),\n        });\n      },\n      boundary: document.querySelector('.example-boundary'),\n      inline: 'center',\n    });\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={() => doScroll('A')}>\n        A\n      </Button>\n      <Button type=\"primary\" onClick={() => doScroll('B')}>\n        B\n      </Button>\n      <Button type=\"primary\" onClick={() => doScroll('C')}>\n        C\n      </Button>\n      <div className={styles['scroll-container']}>\n        <div className={styles['custom-transition-container']}>\n          {range.map((value) => (\n            <div\n              className={styles['transition-item']}\n              key={value}\n              ref={(el) => {\n                itemsDomRef.current[value] = el;\n              }}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Demo;",Qn=".scroll-container {\n  display: flex;\n  box-sizing: content-box;\n  width: 200px;\n  height: 200px;\n  margin-top: 1px;\n  margin-right: auto;\n  margin-left: auto;\n  overflow: scroll;\n  background: hsla(0, 0%, 0%, 0.05);\n  box-shadow: 0 0 0 1px #e4e4e4;\n}\n\n.custom-transition-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 600px;\n  padding-right: 100px;\n  padding-left: 100px;\n}\n\n.transition-item {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  margin: 50px;\n  background-color: #00d1b2;\n  border-radius: 4px;\n}",$n="import React from 'react';\nimport { Button } from 'react-vant';\nimport { ButtonModal } from 'amssui';\n\nconst Content = ({ modalAction }) => (\n  <div>\n    \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n    <Button type=\"primary\" onClick={() => modalAction.close()}>\n      \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n    </Button>\n  </div>\n);\n\nexport default () => (\n  <div>\n    <ButtonModal\n      title=\"demo\"\n      onCancel={() => console.log('onCancel')}\n      trigger={<span>open modal</span>}\n    >\n      <Content />\n    </ButtonModal>\n  </div>\n);",Jn="import React, { useRef } from 'react';\nimport { Button } from 'react-vant';\nimport { ButtonModal } from 'amssui';\n\nconst Content = ({ modalAction }) => {\n  return (\n    <div>\n      \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n      <Button type=\"primary\" onClick={() => modalAction.close()}>\n        \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n      </Button>\n    </div>\n  );\n};\n\nconst Demo = () => {\n  const modalRef = useRef();\n  console.log('23', modalRef);\n  return (\n    <div>\n      <span onClick={() => modalRef.current.open()}>Ref\u6253\u5f00</span>\n\n      <ButtonModal\n        title=\"demo\"\n        ref={modalRef}\n        onCancel={() => console.log('onCancel')}\n        onOk={() => modalRef.current.close()}\n        trigger={<Button disabled> disabled </Button>}\n      >\n        <Content />\n      </ButtonModal>\n    </div>\n  );\n};\n\nexport default Demo;",Zn="import React from 'react';\nimport { Button } from 'react-vant';\nimport { ButtonModal } from 'amssui';\n\nconst Demo = () => (\n  <ButtonModal\n    title=\"demo\"\n    footer={null}\n    onCancel={() => console.log('onCancel')}\n    trigger={<span>open modal</span>}\n  >\n    {(modalAction) => (\n      <div>\n        \u8fd9\u662f\u5f39\u6846\u5185\u5bb9\n        <Button type=\"primary\" onClick={() => modalAction.close()}>\n          \u70b9\u51fb\u8fd9\u91cc\u5173\u95ed\u5f39\u6846\n        </Button>\n      </div>\n    )}\n  </ButtonModal>\n);\n\nexport default Demo;",et="import React from 'react';\nimport { MenuNavIconButton } from 'amssui';\n\nexport default () => (\n  <div style={{ height: 400, background: '#000' }}>\n    <MenuNavIconButton />\n  </div>\n);",nt={"a-select-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(5),t.e(9),t.e(36)]).then(t.bind(null,"eFRk"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:c},"index.less":{import:"./index.less",content:u}},dependencies:{"a-icons":{version:"1.0.82"},assui:{version:"^2.0.2"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"a-select",hideActions:["CSB","EXTERNAL"],identifier:"a-select-demo"}},"area-text-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,t.e(48).then(t.bind(null,"xdsx"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:m}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"area-text",hideActions:["CSB","EXTERNAL"],identifier:"area-text-demo"}},"beautiful-dnd-tables":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"F1mL"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:f},"data.ts":{import:"../data",content:h},"reorder.ts":{import:"../reorder",content:y},"index.modules.less":{import:"./index.modules.less",content:v}},dependencies:{react:{version:"^16.8.5 || ^17.0.0"},"react-beautiful-dnd":{version:"13.1.0"},"react-dom":{version:"^16.8.5 || ^17.0.0"}},hideActions:["CSB","EXTERNAL"],identifier:"beautiful-dnd-tables"}},"onbeforecapture-addingthings":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"83iV"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:b},"reorder.ts":{import:"../reorder",content:y},"index.modules.less":{import:"./index.modules.less",content:g}},dependencies:{react:{version:"^16.8.5 || ^17.0.0"},"react-beautiful-dnd":{version:"13.1.0"},"react-dom":{version:"^16.8.5 || ^17.0.0"}},hideActions:["CSB","EXTERNAL"],identifier:"onbeforecapture-addingthings"}},"beautiful-dnd-multidrag":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"8Wu5"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:E},"data.ts":{import:"./data",content:H},"utils.ts":{import:"./utils",content:w},"reorder.ts":{import:"../reorder",content:y},"column.tsx":{import:"./column",content:x},"task.tsx":{import:"./task",content:I},"index.modules.less":{import:"./index.modules.less",content:T}},dependencies:{react:{version:"^16.8.5 || ^17.0.0"},"react-beautiful-dnd":{version:"13.1.0"},"react-dom":{version:"^16.8.5 || ^17.0.0"},"memoize-one":{version:"4.1.0"}},hideActions:["CSB","EXTERNAL"],identifier:"beautiful-dnd-multidrag"}},"button-drawer-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(34)]).then(t.bind(null,"C0KE"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:C}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"button-drawer",title:"\u57fa\u672c",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>children\u662f\u4e00\u4e2aelement\u6216\u8005\u66b4\u9732\u4e86onClick\u4e8b\u4ef6\u7684\u7ec4\u4ef6</p></div>',identifier:"button-drawer-base"}},"button-drawer-refdemo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(34)]).then(t.bind(null,"82eE"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:M}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"button-drawer",hideActions:["CSB","EXTERNAL"],identifier:"button-drawer-refdemo"}},"button-drawer-functiondemo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(34)]).then(t.bind(null,"ig+p"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:L}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"button-drawer",title:"Function",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>children\u662f\u4e00\u4e2aFunction</p></div>',identifier:"button-drawer-functiondemo"}},"button-modal-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(25)]).then(t.bind(null,"Ac3V"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:D}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"button-modal",title:"\u57fa\u672c",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>children\u662f\u4e00\u4e2aelement\u6216\u8005\u66b4\u9732\u4e86onClick\u4e8b\u4ef6\u7684\u7ec4\u4ef6</p></div>',identifier:"button-modal-base"}},"button-modal-refdemo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(25)]).then(t.bind(null,"gviX"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:R}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"button-modal",hideActions:["CSB","EXTERNAL"],identifier:"button-modal-refdemo"}},"button-modal-functiondemo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(25)]).then(t.bind(null,"q5kM"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:k}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"button-modal",title:"Function",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>children\u662f\u4e00\u4e2aFunction</p></div>',identifier:"button-modal-functiondemo"}},"condition-input-normalregexp":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(41)]).then(t.bind(null,"N5gK"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:S}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"condition-input",title:"\u6b63\u5219",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7\u6b63\u5219\u7d2f\u8ba1\u8fc7\u6ee4</p></div>',identifier:"condition-input-normalregexp"}},"condition-input-formatter":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(41)]).then(t.bind(null,"WP6+"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:P}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"condition-input",title:"formatter",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7<code>formatter</code>\u8ba9\u8f93\u5165\u6846\u59cb\u7ec8\u672a\u5927\u5199</p></div>',identifier:"condition-input-formatter"}},"condition-input-form":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(41)]).then(t.bind(null,"k2uV"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:N}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"condition-input",hideActions:["CSB","EXTERNAL"],identifier:"condition-input-form"}},"config-provider-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(30)]).then(t.bind(null,"NVm7"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:B}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},moment:{version:"2.29.4"},"react-dom":{version:">=16.9.0"}},componentName:"config-provider",hideActions:["CSB","EXTERNAL"],identifier:"config-provider-demo"}},"copy-to-clipboard-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(20)]).then(t.bind(null,"1rWT"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:O}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"copy-to-clipboard",hideActions:["CSB","EXTERNAL"],identifier:"copy-to-clipboard-base"}},"copy-to-clipboard-hastooltip":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(20)]).then(t.bind(null,"lPfi"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:A}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"copy-to-clipboard",hideActions:["CSB","EXTERNAL"],identifier:"copy-to-clipboard-hastooltip"}},"highlight-textarea-string":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"8uf/"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:j}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-string"}},"highlight-textarea-regexp":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"yuV5"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:F}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-regexp"}},"highlight-textarea-range":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"k/lB"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:z}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-range"}},"highlight-textarea-things":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"0VtL"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:U},"index.css":{import:"./index.css",content:K}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-things"}},"highlight-textarea-function":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"9gsd"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:q},"index.css":{import:"./index.css",content:K}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-function"}},"highlight-textarea-settingclassname":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"YQ8P"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:V},"index.css":{import:"./index.css",content:K}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-settingclassname"}},"highlight-textarea-insert":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(8),t.e(106),t.e(16)]).then(t.bind(null,"HCTr"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:_}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"highlight-textarea",hideActions:["CSB","EXTERNAL"],identifier:"highlight-textarea-insert"}},"highlight-words-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"16j8"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:X}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},hideActions:["CSB","EXTERNAL"],identifier:"highlight-words-demo"}},"highlight-words-active":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"u7ZI"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:W},"index.css":{import:"./index.css",content:G}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"highlight-words-active"}},"img-crop-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(29)]).then(t.bind(null,"agGJ"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Y}},dependencies:{assui:{version:"^2.0.2"},"a-icons":{version:"1.0.82"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"img-crop",hideActions:["CSB","EXTERNAL"],identifier:"img-crop-demo"}},"keep-tab-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(17)]).then(t.bind(null,"XezF"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Q}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"keep-tab",hideActions:["CSB","EXTERNAL"],identifier:"keep-tab-base"}},"keep-tab-control":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(17)]).then(t.bind(null,"tyOp"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:$}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"keep-tab",hideActions:["CSB","EXTERNAL"],identifier:"keep-tab-control"}},"keep-tab-count":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(17)]).then(t.bind(null,"9U2d"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:J},"index.modules.less":{import:"./index.modules.less",content:Z}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"keep-tab",title:"\u6ce8\u610f",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u5f53\u4e00\u4e2a\u9875\u9762\u5b58\u5728\u591a\u4e2a<code>KeepTab</code>\u65f6\uff0c\u8bf7\u8bbe\u7f6e\u4e0d\u540c\u7684<code>saveActiveKeyName</code></p></div>',identifier:"keep-tab-count"}},"label-auto-complete-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(24)]).then(t.bind(null,"P7V4"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:ee}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-auto-complete",hideActions:["CSB","EXTERNAL"],identifier:"label-auto-complete-demo"}},"label-condition-input-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(42)]).then(t.bind(null,"duYr"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:ne}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-condition-input",title:"\u6b63\u5219",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7\u6b63\u5219\u7d2f\u8ba1\u8fc7\u6ee4</p></div>',identifier:"label-condition-input-demo"}},"label-customize-range-picker-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(31)]).then(t.bind(null,"IXxz"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:te}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-customize-range-picker",hideActions:["CSB","EXTERNAL"],identifier:"label-customize-range-picker-demo"}},"label-customize-range-picker-control":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(31)]).then(t.bind(null,"pWxq"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:ie}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},moment:{version:"2.29.4"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"label-customize-range-picker",hideActions:["CSB","EXTERNAL"],identifier:"label-customize-range-picker-control"}},"label-customize-range-picker-customizetime":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(31)]).then(t.bind(null,"aiTp"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:re}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},moment:{version:"2.29.4"},"react-dom":{version:">=16.9.0"}},componentName:"label-customize-range-picker",hideActions:["CSB","EXTERNAL"],identifier:"label-customize-range-picker-customizetime"}},"label-customize-range-picker-maxscope":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(31)]).then(t.bind(null,"OZwD"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:ae}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"label-customize-range-picker",hideActions:["CSB","EXTERNAL"],identifier:"label-customize-range-picker-maxscope"}},"label-date-picker-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(33)]).then(t.bind(null,"CTPp"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:oe}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-date-picker",hideActions:["CSB","EXTERNAL"],identifier:"label-date-picker-demo"}},"label-input-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(40)]).then(t.bind(null,"1Yjc"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:se},"index.less":{import:"./index.less",content:de}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-input",hideActions:["CSB","EXTERNAL"],identifier:"label-input-demo"}},"label-number-input-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(44)]).then(t.bind(null,"yMrn"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:le}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"label-number-input",title:"\u57fa\u672c",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>int \u8f93\u5165\u6846</p></div>',identifier:"label-number-input-demo"}},"label-range-picker-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(32)]).then(t.bind(null,"Jdls"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:pe}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-range-picker",hideActions:["CSB","EXTERNAL"],identifier:"label-range-picker-demo"}},"label-select-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(38)]).then(t.bind(null,"u+gO"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:ce}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-select",hideActions:["CSB","EXTERNAL"],identifier:"label-select-demo"}},"label-select-multiple":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(38)]).then(t.bind(null,"KWZX"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:ue}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-select",hideActions:["CSB","EXTERNAL"],identifier:"label-select-multiple"}},"label-text-area-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(15)]).then(t.bind(null,"HYSB"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:me}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"label-text-area",hideActions:["CSB","EXTERNAL"],identifier:"label-text-area-demo"}},"label-tree-select-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(37)]).then(t.bind(null,"P7Im"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:fe},"index.tsx":{import:"../index",content:he},"style/index.tsx":{import:"../style/index",content:ye},"style/index.less":{import:"./index.less",content:ve}},dependencies:{antd:{version:"4.21.7",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"},ahooks:{version:"3.3.10"},classnames:{version:"2.3.1"},lodash:{version:"4.17.21"}},componentName:"label-tree-select",hideActions:["CSB","EXTERNAL"],identifier:"label-tree-select-demo"}},"number-format-input-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"FGcP"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:be}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",hideActions:["CSB","EXTERNAL"],identifier:"number-format-input-demo"}},"number-format-input-format":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"Q90P"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:ge}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"\u6839\u636ehash\u683c\u5f0f\u5316\u6216\u8005\u4f20\u5165\u7684function\u683c\u5f0f\u5316\u5185\u5bb9",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7 format  (####</p></div>',identifier:"number-format-input-format"}},"number-format-input-mask":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"gt5e"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Ee}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"mask",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u672a\u8f93\u5165\u65f6 format \u7684\u5360\u4f4d</p></div>',identifier:"number-format-input-mask"}},"number-format-input-maskarray":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"7Ucn"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:He}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"mask",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u672a\u8f93\u5165\u65f6 format \u7684\u5360\u4f4d\u5217\u8868</p></div>',identifier:"number-format-input-maskarray"}},"number-format-input-thousandseparator":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"Ej8c"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:we}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"thousandSeparator",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u5728\u6570\u5b57\u4e0a\u6dfb\u52a0\u5343\u4f4d\u5206\u9694\u7b26 \u5355\u4e2a\u5b57\u7b26\u4e32\u6216\u5e03\u5c14\u503c true\uff08true \u9ed8\u8ba4\u4e3a ,\uff09</p></div>',identifier:"number-format-input-thousandseparator"}},"number-format-input-chinesewan":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"wefX"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:xe}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"\u5b9a\u4e49\u5343\u4f4d\u5206\u7ec4\u65b9\u5f0f",hideActions:["CSB","EXTERNAL"],description:"<div class=\"markdown\"><p>\u901a\u8fc7 thousandsGroupStyle  \u5343\u5f0f\uff08\u5343\uff09\u5370\u5ea6\u5f0f\uff08\u5341\u4e07\uff09\uff1a\uff0c\u4e2d\u56fd\u5f0f\uff08\u4e07\uff09['thousand', 'lakh', 'wan']</p></div>",identifier:"number-format-input-chinesewan"}},"number-format-input-isallowed":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"F1gc"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Ie}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"isAllowed",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u68c0\u67e5\u8f93\u5165\u503c\u662f\u5426\u6709\u6548\u7684\u68c0\u67e5\u51fd\u6570 \u5982\u679c\u6b64\u51fd\u6570\u8fd4\u56defalse\uff0c\u5219\u4e0d\u4f1a\u89e6\u53d1 onChange \u65b9\u6cd5</p></div>',identifier:"number-format-input-isallowed"}},"number-format-input-getinputref":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(112),t.e(46)]).then(t.bind(null,"kSz7"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Te}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"}},componentName:"number-format-input",title:"getInputRef",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u83b7\u53d6Ref</p></div>',identifier:"number-format-input-getinputref"}},"number-input-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(43)]).then(t.bind(null,"h5/8"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Ce}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"number-input",title:"\u57fa\u672c",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>int \u8f93\u5165\u6846</p></div>',identifier:"number-input-base"}},"number-input-float":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(43)]).then(t.bind(null,"w+JT"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Me}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"number-input",title:"float",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>float \u8f93\u5165\u6846, \u53ef\u4ee5\u901a\u8fc7precision\u8bbe\u7f6e\u7cbe\u5ea6</p></div>',identifier:"number-input-float"}},"number-input-formatter":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(43)]).then(t.bind(null,"9PmA"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Le}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"number-input",title:"\u683c\u5f0f\u5316\u5c55\u793a",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7 formatter \u683c\u5f0f\u5316\u6570\u5b57\uff0c\u4ee5\u5c55\u793a\u5177\u6709\u5177\u4f53\u542b\u4e49\u7684\u6570\u636e</p></div>',identifier:"number-input-formatter"}},"number-input-form":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(43)]).then(t.bind(null,"mQBj"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:De}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"number-input",title:"\u5728form\u4e2d\u4f7f\u7528",hideActions:["CSB","EXTERNAL"],identifier:"number-input-form"}},"rc-echart-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(4),t.e(5),t.e(8),t.e(39)]).then(t.bind(null,"eN44"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Re}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},componentName:"rc-echart",hideActions:["CSB","EXTERNAL"],identifier:"rc-echart-demo"}},"rc-echart-minimaloption":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(4),t.e(5),t.e(8),t.e(39)]).then(t.bind(null,"XEkw"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:ke}},dependencies:{react:{version:"^16.8.6 || ^17.0 || ^18.0"},assui:{version:"2.1.49"},echarts:{version:"5.3.2"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"rc-echart",hideActions:["CSB","EXTERNAL"],identifier:"rc-echart-minimaloption"}},"rc-echart-minimaloptionts":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(4),t.e(5),t.e(8),t.e(39)]).then(t.bind(null,"o0P9"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Se}},dependencies:{react:{version:"^16.8.6 || ^17.0 || ^18.0"},assui:{version:"2.1.49"},echarts:{version:"5.3.2"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"rc-echart",hideActions:["CSB","EXTERNAL"],identifier:"rc-echart-minimaloptionts"}},"rc-motion-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"/+f8"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Pe},"CSSMotion.less":{import:"./CSSMotion.less",content:Ne}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},classnames:{version:"2.3.1"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"rc-motion-demo"}},"rc-motion-animation":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"W8nQ"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Be},"CSSMotion.less":{import:"./CSSMotion.less",content:Ne}},dependencies:{assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},classnames:{version:"2.3.1"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"rc-motion-animation"}},"rc-qrcode-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(4),t.e(8),t.e(109),t.e(21)]).then(t.bind(null,"WL5M"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Oe}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},assui:{version:"2.1.49"},"react-dom":{version:">=16.9.0"}},componentName:"rc-qrcode",hideActions:["CSB","EXTERNAL"],identifier:"rc-qrcode-demo"}},"rc-qrcode-useqrcode":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(4),t.e(8),t.e(109),t.e(21)]).then(t.bind(null,"7lRn"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Ae}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},assui:{version:"2.1.49"},"react-dom":{version:">=16.9.0"}},componentName:"rc-qrcode",hideActions:["CSB","EXTERNAL"],identifier:"rc-qrcode-useqrcode"}},"rc-transition-group-csstransition":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"qaJL"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:je},"index.css":{import:"./index.css",content:Fe}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"rc-transition-group-csstransition"}},"rc-transition-group-switch-transition":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"dtRv"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:ze},"index.css":{import:"./index.css",content:Ue}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"rc-transition-group-switch-transition"}},"resizable-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"0WCs"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Ke},"index.css":{import:"./index.css",content:qe}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},hideActions:["CSB","EXTERNAL"],identifier:"resizable-demo"}},"resizable-antdtable":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"6gKk"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Ve},"table.css":{import:"./table.css",content:_e}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"resizable-antdtable"}},"rich-text-editor-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(35)]).then(t.bind(null,"DK9a"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Xe}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"rich-text-editor",hideActions:["CSB","EXTERNAL"],identifier:"rich-text-editor-demo"}},"rich-text-editor-form":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(35)]).then(t.bind(null,"Nvpm"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:We}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"rich-text-editor",hideActions:["CSB","EXTERNAL"],identifier:"rich-text-editor-form"}},"rich-text-editor-inserttag":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(35)]).then(t.bind(null,"ziGb"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Ge}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"rich-text-editor",hideActions:["CSB","EXTERNAL"],identifier:"rich-text-editor-inserttag"}},"rich-text-editor-selfsettoolbar":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(35)]).then(t.bind(null,"sO8k"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:Ye}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"rich-text-editor",hideActions:["CSB","EXTERNAL"],identifier:"rich-text-editor-selfsettoolbar"}},"single-img-upload-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(9),t.e(108),t.e(19)]).then(t.bind(null,"7Sgq"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Qe}},dependencies:{assui:{version:"^2.0.2"},"a-icons":{version:"1.0.82"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"single-img-upload",hideActions:["CSB","EXTERNAL"],identifier:"single-img-upload-demo"}},"single-img-upload-value":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(9),t.e(108),t.e(19)]).then(t.bind(null,"88TC"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:$e}},dependencies:{assui:{version:"^2.0.2"},"a-icons":{version:"1.0.82"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"single-img-upload",hideActions:["CSB","EXTERNAL"],identifier:"single-img-upload-value"}},"single-img-upload-disabled":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(9),t.e(108),t.e(19)]).then(t.bind(null,"SdZ2"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Je}},dependencies:{assui:{version:"^2.0.2"},"a-icons":{version:"1.0.82"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"single-img-upload",hideActions:["CSB","EXTERNAL"],identifier:"single-img-upload-disabled"}},"sortable-hoc-verticallistbase":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(107),t.e(18)]).then(t.bind(null,"kKWt"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Ze},"index.modules.less":{import:"./index.modules.less",content:en}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},classnames:{version:"2.3.1"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"sortable-hoc",hideActions:["CSB","EXTERNAL"],identifier:"sortable-hoc-verticallistbase"}},"grid-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(107),t.e(18)]).then(t.bind(null,"brEO"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:nn},"utils.js":{import:"../utils",content:tn},"SortableContainer.jsx":{import:"../SortableContainer",content:rn},"SortItem.jsx":{import:"./SortItem",content:an},"Handle.jsx":{import:"./Handle",content:on},"index.modules.less":{import:"./index.modules.less",content:sn},"ListWrapper.jsx":{import:"../ListWrapper",content:dn}},dependencies:{react:{version:"^16.8.6 || ^17.0 || ^18.0"},classnames:{version:"2.3.1"},lodash:{version:"4.17.21"},assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"sortable-hoc",hideActions:["CSB","EXTERNAL"],identifier:"grid-base"}},"grid-largefirstitem":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(107),t.e(18)]).then(t.bind(null,"EsVm"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:ln},"utils.js":{import:"../utils",content:tn},"SortableContainer.jsx":{import:"../SortableContainer",content:rn},"SortItem.jsx":{import:"./SortItem",content:an},"Handle.jsx":{import:"./Handle",content:on},"index.modules.less":{import:"./index.modules.less",content:sn},"ListWrapper.jsx":{import:"../ListWrapper",content:dn}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},classnames:{version:"2.3.1"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},lodash:{version:"4.17.21"}},componentName:"sortable-hoc",hideActions:["CSB","EXTERNAL"],identifier:"grid-largefirstitem"}},"sortable-hoc-draghandle":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(107),t.e(18)]).then(t.bind(null,"wT5R"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:pn},"utils.js":{import:"../utils",content:tn},"SortableContainer.jsx":{import:"../SortableContainer",content:rn},"SortItem.jsx":{import:"./SortItem",content:an},"Handle.jsx":{import:"./Handle",content:on},"index.modules.less":{import:"./index.modules.less",content:sn},"ListWrapper.jsx":{import:"../ListWrapper",content:dn}},dependencies:{react:{version:"^16.8.6 || ^17.0 || ^18.0"},lodash:{version:"4.17.21"},assui:{version:"2.1.49"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"},classnames:{version:"2.3.1"}},componentName:"sortable-hoc",hideActions:["CSB","EXTERNAL"],identifier:"sortable-hoc-draghandle"}},"split-pane-demo1":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(110),t.e(23)]).then(t.bind(null,"CSYi"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:cn}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"split-pane",hideActions:["CSB","EXTERNAL"],identifier:"split-pane-demo1"}},"split-pane-demo2":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(110),t.e(23)]).then(t.bind(null,"t83h"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:un}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"split-pane",hideActions:["CSB","EXTERNAL"],identifier:"split-pane-demo2"}},"step-number-input-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(45)]).then(t.bind(null,"n9w4"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:mn}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"step-number-input",title:"\u57fa\u672c",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>int \u8f93\u5165\u6846</p></div>',identifier:"step-number-input-base"}},"step-number-input-float":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(45)]).then(t.bind(null,"/5ad"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:fn}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"step-number-input",title:"float",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>float \u8f93\u5165\u6846, \u53ef\u4ee5\u901a\u8fc7precision\u8bbe\u7f6e\u7cbe\u5ea6</p></div>',identifier:"step-number-input-float"}},"step-number-input-step":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(45)]).then(t.bind(null,"E7Gj"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:hn}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"step-number-input",title:"step \u6b65\u8fdb",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>int/float \u8f93\u5165\u6846, \u53ef\u4ee5\u901a\u8fc7step\u63a7\u5236\u6b65\u8fdb</p></div>',identifier:"step-number-input-step"}},"step-number-input-formatter":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(45)]).then(t.bind(null,"+zLL"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:yn}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"step-number-input",title:"\u683c\u5f0f\u5316\u5c55\u793a",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7 formatter \u683c\u5f0f\u5316\u6570\u5b57\uff0c\u4ee5\u5c55\u793a\u5177\u6709\u5177\u4f53\u542b\u4e49\u7684\u6570\u636e</p></div>',identifier:"step-number-input-formatter"}},"step-number-input-form":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(45)]).then(t.bind(null,"Lpte"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:vn}},dependencies:{antd:{version:"^4.21.6",css:"antd/dist/antd.css"},assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-dom":{version:">=16.9.0"}},componentName:"step-number-input",title:"\u5728form\u4e2d\u4f7f\u7528",hideActions:["CSB","EXTERNAL"],identifier:"step-number-input-form"}},"text-area-index":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(14)]).then(t.bind(null,"Pche"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:bn}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"text-area",hideActions:["CSB","EXTERNAL"],identifier:"text-area-index"}},"text-area-formatter":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(14)]).then(t.bind(null,"dNW1"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:gn}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"text-area",title:"formatter",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u901a\u8fc7<code>formatter</code>\u8ba9\u8f93\u5165\u6846\u59cb\u7ec8\u672a\u5927\u5199</p></div>',identifier:"text-area-formatter"}},"text-input-index":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(47)]).then(t.bind(null,"cgjP"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:En}},dependencies:{assui:{version:"2.1.49"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},antd:{version:"^4.21.6",css:"antd/dist/antd.css"}},componentName:"text-input",hideActions:["CSB","EXTERNAL"],identifier:"text-input-index"}},"demo-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,t.e(115).then(t.bind(null,"8X0T"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return r["default"].createElement(i["default"],{style:{width:24}})},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { PeopleTeamOutlined } from 'a-icons';\nexport default () => <PeopleTeamOutlined style={{width: 24}} />"}},dependencies:{"a-icons":{version:"1.0.82"},react:{version:"17.0.2"},assui:{version:"^2.0.2"}},title:"\u4ee3\u7801\u5757",hideActions:["CSB","EXTERNAL"],identifier:"demo-demo"}},"canvastoimg-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"rZLD"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Hn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"canvastoimg-demo"}},"dateutils-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"iY/2"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:wn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},moment:{version:"2.29.3"},"react-dom":{version:">=16.9.0"}},title:"\u683c\u5f0f\u5316",hideActions:["CSB","EXTERNAL"],description:"<div class=\"markdown\"><p>\u9ed8\u8ba4\uff1a <code>dateFormat = 'YYYY-MM-DD'</code>, <code>timeFormat = 'HH:mm'</code></p></div>",identifier:"dateutils-demo"}},"dateutils-parsedate":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"2oq0"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:xn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},moment:{version:"2.29.3"},"react-dom":{version:">=16.9.0"}},title:"\u89e3\u6790",hideActions:["CSB","EXTERNAL"],description:"<div class=\"markdown\"><p>\u9ed8\u8ba4\uff1a <code>dateFormat = 'YYYY-MM-DD'</code>, <code>timeFormat = 'HH:mm'</code></p></div>",identifier:"dateutils-parsedate"}},"dateutils-other":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"dqI8"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:In}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},moment:{version:"2.29.3"},"react-dom":{version:">=16.9.0"}},title:"\u63d0\u793a",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u5982\u679c\u60f3\u5e76\u8bbe\u7f6e\u5230\u4e00\u4e2a\u65f6\u95f4\u7684\u5f00\u59cb\u3002\u8bf7\u4f7f\u7528moment\u7684<code>startOf</code></p></div>',identifier:"dateutils-other"}},"events-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"rqOA"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Tn},"emitter.js":{import:"./emitter",content:Cn},"EmitButtonTwo.jsx":{import:"./EmitButtonTwo",content:Mn},"EmitButtonOne.jsx":{import:"./EmitButtonOne",content:Ln}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"},"aa-utils":{version:"2.0.35"}},title:"\u57fa\u672c\u7528\u6cd5",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u57fa\u7840\u4e8b\u4ef6\u76d1\u542c\u3001\u4e8b\u4ef6\u89e6\u53d1\u3001\u79fb\u9664</p></div>',identifier:"events-base"}},"events-once":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"a1xz"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Dn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"aa-utils":{version:"2.0.35"},"react-dom":{version:">=16.9.0"}},title:"\u53ea\u89e6\u53d1\u4e00\u6b21",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>once\u6267\u884c\u4e00\u6b21</p></div>',identifier:"events-once"}},"formatcountdown-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"ktrD"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Rn}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"formatcountdown-demo"}},"html2canvas-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"5ps0"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:kn},"index.less":{import:"./index.less",content:Sn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"html2canvas-demo"}},"isPromise-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,t.e(117).then(t.bind(null,"QEk9"));case 4:e.t1=e.sent,i=(0,e.t0)(e.t1),(0,i["default"])({}),(0,i["default"])(Promise.reject());case 8:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import { isPromise } from 'aa-utils'\n\nisPromise({})\n// => false\nisPromise(Promise.reject())\n// => true"}},dependencies:{"aa-utils":{version:"2.0.35"}},componentName:"isPromise",identifier:"isPromise-demo"}},"localstorage-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,t.e(22).then(t.bind(null,"Tbm3"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Pn}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},componentName:"localStorage",hideActions:["CSB","EXTERNAL"],identifier:"localstorage-base"}},"localstorage-object":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,t.e(22).then(t.bind(null,"5kjG"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Nn}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},componentName:"localStorage",hideActions:["CSB","EXTERNAL"],identifier:"localstorage-object"}},"numberutils-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"6a3j"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Bn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"aa-utils":{version:"2.0.35"},"react-dom":{version:">=16.9.0"}},title:"\u683c\u5f0f\u5316\u6570\u636e",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u9ed8\u8ba4<code>\u6700\u5c0f2\u4f4d\u5c0f\u6570</code>\uff0c<code>\u6700\u59272\u4f4d\u5c0f\u6570</code>\uff0c<code>\u65e0\u5206\u9694\u7b26</code>\uff0c<code>\u5c0f\u6570\u56db\u820d\u4e94\u5165</code>\uff0c<code>\u65e0+</code></p></div>',identifier:"numberutils-demo"}},"numberutils-useplus":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"UXRI"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:On}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"aa-utils":{version:"2.0.35"},"react-dom":{version:">=16.9.0"}},title:"usePlus",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u663e\u793a\u6b63\u8d1f\u524d\u7f00</p></div>',identifier:"numberutils-useplus"}},"numberutils-roundingmode":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"BncS"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:An}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},title:"roundingMode",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u622a\u53d6\u6d6e\u70b9\u6570</p></div>',identifier:"numberutils-roundingmode"}},"numberutils-bigdata":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"YwpR"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:jn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"numberutils-bigdata"}},"numberutils-formatfixedfraction":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"RmkT"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Fn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"aa-utils":{version:"2.0.35"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"numberutils-formatfixedfraction"}},"numberutils-formatpercent":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"mlIP"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:zn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},title:"percent",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u9ed8\u8ba4<code>\u6700\u5c0f2\u4f4d\u5c0f\u6570</code>\uff0c<code>\u6700\u59272\u4f4d\u5c0f\u6570</code>\uff0c<code>\u56db\u820d\u4e94\u5165</code>\uff0c<code>\u65e0+</code></p></div>',identifier:"numberutils-formatpercent"}},"numberutils-claculatefunc":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"HSGW"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Un}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"numberutils-claculatefunc"}},"numberUtils-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a,o;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.next=3,t.e(11).then(t.bind(null,"bP8k"));case 3:return e.t0=n,e.next=6,t.e(12).then(t.bind(null,"gFTJ"));case 6:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=11,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 11:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=16,Promise.all([t.e(10),t.e(13)]).then(t.bind(null,"tIFQ"));case 16:return e.t5=e.sent,a=(0,e.t4)(e.t5),o=function(){return r["default"].createElement("div",null,r["default"].createElement(i["default"],{column:1},r["default"].createElement(i["default"].Item,{label:"strip(0.09999999999999998)"},a["default"].strip(.09999999999999998))))},e.abrupt("return",o);case 20:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\n import { Descriptions, Typography } from 'antd';\n import numberUtils from 'aa-utils/lib/numberUtils';\n\nexport default () => (\n  <div>\n     <Descriptions column={1}>\n        <Descriptions.Item label=\"strip(0.09999999999999998)\">\n          {\n            numberUtils.strip(0.09999999999999998)\n          }\n        </Descriptions.Item>\n       </Descriptions>\n  </div>\n)"}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"aa-utils":{version:"2.0.35"},"react-dom":{version:">=16.9.0"}},title:"\u4ee3\u7801\u5757",hideActions:["CSB","EXTERNAL"],identifier:"numberUtils-demo"}},"numberUtils-demo-1":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a,o;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.next=3,t.e(11).then(t.bind(null,"bP8k"));case 3:return e.t0=n,e.next=6,t.e(12).then(t.bind(null,"gFTJ"));case 6:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=11,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 11:return e.t3=e.sent,r=(0,e.t2)(e.t3),e.t4=n,e.next=16,Promise.all([t.e(10),t.e(13)]).then(t.bind(null,"tIFQ"));case 16:return e.t5=e.sent,a=(0,e.t4)(e.t5),o=function(){return r["default"].createElement("div",null,r["default"].createElement(i["default"],{column:1},r["default"].createElement(i["default"].Item,{label:"strip(0.099999)"},a["default"].float2Fixed(.099999))))},e.abrupt("return",o);case 20:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\n import { Descriptions, Typography } from 'antd';\n import numberUtils from 'aa-utils/lib/numberUtils';\n\nexport default () => (\n  <div>\n     <Descriptions column={1}>\n        <Descriptions.Item label=\"strip(0.099999)\">\n          {\n            numberUtils.float2Fixed(0.099999)\n          }\n        </Descriptions.Item>\n       </Descriptions>\n  </div>\n)"}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"aa-utils":{version:"2.0.35"},"react-dom":{version:">=16.9.0"}},title:"\u4ee3\u7801\u5757",hideActions:["CSB","EXTERNAL"],identifier:"numberUtils-demo-1"}},"numberutils-compare":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"N7/6"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Kn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},title:"compare",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>\u57fa\u4e8ebignumber\u5927\u5c0f\u6bd4\u8f83</p></div>',identifier:"numberutils-compare"}},"qsHelp-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.all([t.e(6),t.e(7)]).then(t.bind(null,"2G7w"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return r["default"].createElement("div",null,"/utils/qs-help?name=lixiaoalong&age=32 => ",i["default"].getQueryString("?name=lixiaoalong&age=32"))},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { qsHelp } from 'aa-utils';\n\nexport default () => (\n  <div>\n    /utils/qs-help?name=lixiaoalong&age=32 => {qsHelp.getQueryString('?name=lixiaoalong&age=32')}\n  </div>\n)"}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"qsHelp-demo"}},"qsHelp-demo-1":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.all([t.e(6),t.e(7)]).then(t.bind(null,"2G7w"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return r["default"].createElement("div",null,"/utils/qs-help?name=lixiaoalong&age=32 => ",JSON.stringify(i["default"].getQueryObject("name=lixiaoalong&age=32")))},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { qsHelp } from 'aa-utils';\n\nexport default () => (\n  <div>\n    /utils/qs-help?name=lixiaoalong&age=32 => {\n      JSON.stringify(qsHelp.getQueryObject('name=lixiaoalong&age=32'))\n    }\n  </div>\n)"}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"qsHelp-demo-1"}},"qsHelp-demo-2":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.all([t.e(6),t.e(7)]).then(t.bind(null,"2G7w"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return r["default"].createElement("div",null,JSON.stringify({name:"bin",age:23,id:2})," => ",i["default"].toQueryString({name:"bin",age:23,id:2}))},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { qsHelp } from 'aa-utils';\n\nexport default () => (\n  <div>\n    {JSON.stringify({ name: 'bin', age: 23, id: 2 })} => {\n      qsHelp.toQueryString({ name: 'bin', age: 23, id: 2 }) }\n  </div>\n)"}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"qsHelp-demo-2"}},"qsHelp-demo-3":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.all([t.e(6),t.e(7)]).then(t.bind(null,"2G7w"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return r["default"].createElement("div",null,"/userCenter/:name/age/:age => ",i["default"].toPath("/userCenter/:name/age/:age",{name:"bin",age:23}))},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { qsHelp } from 'aa-utils';\n\nexport default () => (\n  <div>\n    /userCenter/:name/age/:age => {\n      qsHelp.toPath('/userCenter/:name/age/:age', { name: 'bin', age: 23 }) }\n  </div>\n)"}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"qsHelp-demo-3"}},"qsHelp-demo-4":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.all([t.e(6),t.e(7)]).then(t.bind(null,"2G7w"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),console.log("qsHelp",i["default"].urlToList("/user/list/detail")),a=function(){return r["default"].createElement("div",null,"/user/list/detail =>",JSON.stringify(i["default"].urlToList("/user/list/detail")))},e.abrupt("return",a);case 14:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { qsHelp } from 'aa-utils';\n\nconsole.log('qsHelp', qsHelp.urlToList('/user/list/detail'));\n\nexport default () => (\n  <div>\n    /user/list/detail =>\n    {\n      JSON.stringify(qsHelp.urlToList('/user/list/detail') )\n    }\n  </div>\n)"}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"qsHelp-demo-4"}},"qsHelp-demo-5":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.all([t.e(6),t.e(7)]).then(t.bind(null,"2G7w"));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return r["default"].createElement("div",null,"/user/list/detail?name=lixiaoalong&age=32 =>",JSON.stringify(i["default"].getPathAndQueryObject("/user/list/detail?name=lixiaoalong&age=32")))},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:"import React from 'react';\nimport { qsHelp } from 'aa-utils';\n\nexport default () => (\n  <div>\n    /user/list/detail?name=lixiaoalong&age=32 =>\n    {\n      JSON.stringify(\n        qsHelp.getPathAndQueryObject('/user/list/detail?name=lixiaoalong&age=32')\n      )\n    }\n  </div>\n)"}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"qsHelp-demo-5"}},"resizablecolumnstable-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"ZO3Y"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:qn},"Table.jsx":{import:"./Table",content:Vn},"index.less":{import:"./index.less",content:_n}},dependencies:{"aa-utils":{version:"2.0.35"},react:{version:"17.0.2"}},hideActions:["CSB","EXTERNAL"],identifier:"resizablecolumnstable-demo"}},"scrollintoview-base":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"sczt"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Xn},"index.less":{import:"./index.less",content:Wn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"scrollintoview-base"}},"scrollintoview-alignment":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"neTS"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Gn},"index.less":{import:"./index.less",content:Wn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"scrollintoview-alignment"}},"scrollintoview-customtransition":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(5),t.e(27)]).then(t.bind(null,"xaRG"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Yn},"index.modules.less":{import:"./index.modules.less",content:Qn}},dependencies:{antd:{version:"4.20.1",css:"antd/dist/antd.css"},"aa-utils":{version:"2.0.35"},popmotion:{version:"9.4.2"},react:{version:">=16.9.0"},stylefire:{version:"7.0.3"},"react-dom":{version:">=16.9.0"}},hideActions:["CSB","EXTERNAL"],identifier:"scrollintoview-customtransition"}},"button-modal-base-1":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(25)]).then(t.bind(null,"0Nav"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:$n}},dependencies:{amssui:{version:"1.0.21"},react:{version:">=16.14.0"},"react-vant":{version:"^2.0.0-alpha.41 || ^3.0.0"},"react-dom":{version:">=16.14.0"}},componentName:"button-modal",title:"\u57fa\u672c",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>children\u662f\u4e00\u4e2aelement\u6216\u8005\u66b4\u9732\u4e86onClick\u4e8b\u4ef6\u7684\u7ec4\u4ef6</p></div>',identifier:"button-modal-base-1"}},"button-modal-refdemo-1":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(25)]).then(t.bind(null,"8V6E"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Jn}},dependencies:{amssui:{version:"1.0.21"},react:{version:">=16.14.0"},"react-vant":{version:"^2.0.0-alpha.41 || ^3.0.0"},"react-dom":{version:">=16.14.0"}},componentName:"button-modal",hideActions:["CSB","EXTERNAL"],identifier:"button-modal-refdemo-1"}},"button-modal-functiondemo-1":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([t.e(2),t.e(3),t.e(4),t.e(8),t.e(25)]).then(t.bind(null,"2HTC"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{jsx:Zn}},dependencies:{amssui:{version:"1.0.21"},react:{version:">=16.14.0"},"react-vant":{version:"^2.0.0-alpha.41 || ^3.0.0"},"react-dom":{version:">=16.14.0"}},componentName:"button-modal",title:"Function",hideActions:["CSB","EXTERNAL"],description:'<div class="markdown"><p>children\u662f\u4e00\u4e2aFunction</p></div>',identifier:"button-modal-functiondemo-1"}},"menu-nav-icon-button-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,t.e(28).then(t.bind(null,"523e"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:et}},dependencies:{amssui:{version:"1.0.21"},react:{version:"^16.8.6 || ^17.0 || ^18.0"},"react-vant":{version:"^2.0.0-alpha.41 || ^3.0.0"}},componentName:"menu-nav-icon-button",hideActions:["CSB","EXTERNAL"],identifier:"menu-nav-icon-button-demo"}},"component-demo":{component:Object(p["dynamic"])({loader:function(){var e=Object(s["a"])(l.a.mark((function e(){var n,i,r,a;return l.a.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return n=t("K+nK"),e.t0=n,e.next=4,Promise.resolve().then(t.t.bind(null,"q1tI",7));case 4:return e.t1=e.sent,i=(0,e.t0)(e.t1),e.t2=n,e.next=9,t.e(116).then(t.bind(null,"ljC5"));case 9:return e.t3=e.sent,r=(0,e.t2)(e.t3),a=function(){return i["default"].createElement(r["default"],{title:"First Demo"})},e.abrupt("return",a);case 13:case"end":return e.stop()}}),e)})));function n(){return e.apply(this,arguments)}return n}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport Foo from 'ec-common/lib/component/index';\n\nexport default () => <Foo title=\"First Demo\" />;"}},dependencies:{react:{version:"^16.8.6 || ^17.0 || ^18.0"},"ec-common":{version:"1.0.7"}},componentName:"component",identifier:"component-demo"}}},tt=t("x2v5"),it=t("KcUY"),rt=t.n(it);n["default"]=e=>a.a.createElement(rt.a,Object(i["a"])({},e,{config:o,demos:nt,apis:tt}))},q3YX:function(e){e.exports=JSON.parse('{"menus":{"zh-CN":{"*":[{"path":"/","title":"Library","meta":{}}],"/assui":[{"title":"\u53cd\u9988","path":"/assui/components/feedback","meta":{"order":1},"children":[{"path":"/assui/components/feedback/beautiful-dnd","title":"ReactBeautifulDnd","meta":{}},{"path":"/assui/components/feedback/button-drawer","title":"ButtonDrawer","meta":{}},{"path":"/assui/components/feedback/button-modal","title":"ButtonModal","meta":{}},{"path":"/assui/components/feedback/resizable","title":"Resizable","meta":{}},{"path":"/assui/components/feedback/sortable-hoc","title":"SortableHoc","meta":{}}]},{"title":"\u6570\u636e\u5f55\u5165","path":"/assui/components/input","meta":{"order":1},"children":[{"path":"/assui/components/input/a-select","title":"ASelect","meta":{}},{"path":"/assui/components/input/condition-input","title":"ConditionInput","meta":{}},{"path":"/assui/components/input/highlight-textarea","title":"HighlightTextarea","meta":{}},{"path":"/assui/components/input/img-crop","title":"ImgCrop","meta":{}},{"path":"/assui/components/input/label-auto-complete","title":"LabelAutoComplete","meta":{}},{"path":"/assui/components/input/label-condition-input","title":"LabelConditionInput","meta":{}},{"path":"/assui/components/input/label-customize-range-picker","title":"LabelCustomizeRangePicker","meta":{}},{"path":"/assui/components/input/label-date-picker","title":"LabelDatePicker","meta":{}},{"path":"/assui/components/input/label-input","title":"LabelInput","meta":{}},{"path":"/assui/components/input/label-number-input","title":"LabelNumberInput","meta":{}},{"path":"/assui/components/input/label-range-picker","title":"LabelRangePicker","meta":{}},{"path":"/assui/components/input/label-select","title":"LabelSelect","meta":{}},{"path":"/assui/components/input/label-text-area","title":"LabelTextArea","meta":{}},{"path":"/assui/components/input/label-tree-select","title":"LabelSelectTree","meta":{}},{"path":"/assui/components/input/number-format-input","title":"NumberFormatInput","meta":{}},{"path":"/assui/components/input/number-input","title":"NumberInput","meta":{}},{"path":"/assui/components/input/rich-text-editor","title":"RichTextEditor","meta":{}},{"path":"/assui/components/input/single-img-upload","title":"SingleImgUpload","meta":{}},{"path":"/assui/components/input/step-number-input","title":"StepNumberInput","meta":{}},{"path":"/assui/components/input/text-area","title":"TextArea","meta":{}},{"path":"/assui/components/input/text-input","title":"TextInput","meta":{}}]},{"title":"\u5c55\u793a","path":"/assui/components/show","meta":{"order":2},"children":[{"path":"/assui/components/show/area-text","title":"AreaText","meta":{}},{"path":"/assui/components/show/highlight-words","title":"HighlightWords","meta":{}},{"path":"/assui/components/show/keep-tab","title":"KeepTab","meta":{}},{"path":"/assui/components/show/rc-echart","title":"RcEchart","meta":{}},{"path":"/assui/components/show/rc-qrcode","title":"RcQrcode","meta":{}},{"path":"/assui/components/show/split-pane","title":"SplitPane","meta":{}}]},{"title":"\u5176\u4ed6","path":"/assui/components/other","meta":{"order":3},"children":[{"path":"/assui/components/other/config-provider","title":"ConfigProvider","meta":{}},{"path":"/assui/components/other/copy-to-clipboard","title":"CopyToClipboard","meta":{}}]},{"title":"animation","path":"/assui/animation","meta":{"order":4},"children":[{"path":"/assui/animation/rc-motion","title":"RcMotion","meta":{}},{"path":"/assui/animation/rc-transition-group","title":"RcTransitionGroup","meta":{}}]}],"/icons":[{"title":"icons","path":"/icons","meta":{"order":11},"children":[]}],"/utils":[{"title":"utils","path":"/utils","meta":{"order":1},"children":[{"path":"/utils/add-prefix-to-eum-value","title":"addPrefixToEumValue","meta":{}},{"path":"/utils/canvas-to-img","title":"canvasToImg","meta":{}},{"path":"/utils/cookie-utils","title":"cookieUtils","meta":{}},{"path":"/utils/date-utils","title":"dateUtils","meta":{}},{"path":"/utils/events","title":"events","meta":{}},{"path":"/utils/format-countdown","title":"formatCountdown","meta":{}},{"path":"/utils/html2canvas","title":"html2canvas","meta":{}},{"path":"/utils/is-promise","title":"isPromise","meta":{}},{"path":"/utils/local-storage","title":"localStorage","meta":{}},{"path":"/utils/number-utils","title":"numberUtils","meta":{}},{"path":"/utils/qs-help","title":"qsHelp","meta":{}},{"path":"/utils/resizable-columns-table","title":"resizableColumnsTable","meta":{}},{"path":"/utils/scroll-into-view","title":"scrollIntoView","meta":{}}]}],"/amssui":[{"title":"\u53cd\u9988","path":"/amssui/components/feedback","meta":{"order":1},"children":[{"path":"/amssui/components/feedback/button-modal","title":"ButtonModal","meta":{}},{"path":"/amssui/components/feedback/menu-nav-icon-button","title":"MenuIconButton","meta":{}}]}],"/ec-common":[{"title":"component","path":"/ec-common/component","meta":{"order":1},"children":[{"path":"/ec-common/component/component","title":"test","meta":{}}]},{"title":"consts","path":"/ec-common/consts","meta":{"order":1},"children":[{"path":"/ec-common/consts/gender-type","title":"genderType","meta":{}}]}]}},"locales":[{"name":"zh-CN","label":"\u4e2d\u6587"}],"navs":{"zh-CN":[{"title":"assui","path":"/assui"},{"title":"icons","path":"/icons"},{"title":"utils","path":"/utils"},{"title":"amssui","path":"/amssui"},{"title":"ec-common","path":"/ec-common"},{"title":"GitHub","path":"https://github.com:SPOTEC-LTD/assui.git"}]},"title":"assui","logo":"/sui/logo.svg","mode":"site","repository":{"url":"https://github.com/SPOTEC-LTD/assui","branch":"master"},"theme":{},"exportStatic":{}}')},x2v5:function(e){e.exports=JSON.parse('{"area-text":{"default":[{"identifier":"className","type":"string"},{"identifier":"value","type":"string"}]},"condition-input":{"default":[{"identifier":"regexp","description":"\u8fc7\u6ee4\u7684\u6b63\u5219\u6761\u4ef6","type":"RegExp | (string | RegExp | { pattern: RegExp; replacement?: string; })[]"},{"identifier":"formatter","description":"\u6307\u5b9a\u8f93\u5165\u6846\u5c55\u793a\u503c\u7684\u683c\u5f0f","type":"(value: string) => string"},{"identifier":"onChange","description":"\u53d8\u5316\u56de\u8c03","type":"(value: string) => void"},{"identifier":"value","description":"\u8f93\u5165\u6846\u5185\u5bb9","type":"string"},{"identifier":"size","type":"SizeType"},{"identifier":"prefix","type":"ReactNode"},{"identifier":"type","type":"LiteralUnion<\\"number\\" | \\"hidden\\" | \\"color\\" | \\"button\\" | \\"checkbox\\" | \\"date\\" | \\"datetime-local\\" | \\"email\\" | \\"file\\" | \\"image\\" | \\"month\\" | \\"password\\" | \\"radio\\" | \\"range\\" | \\"reset\\" | \\"search\\" | ... 5 more ... | \\"week\\", string>"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"boolean | \\"user\\" | \\"environment\\""},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"enterKeyHint","type":"\\"search\\" | \\"enter\\" | \\"done\\" | \\"go\\" | \\"next\\" | \\"previous\\" | \\"send\\""},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"max","type":"string | number"},{"identifier":"maxLength","type":"number"},{"identifier":"min","type":"string | number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"src","type":"string"},{"identifier":"step","type":"string | number"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"lang","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"email\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"none\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"date\\" | \\"time\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"prefixCls","type":"string"},{"identifier":"onPressEnter","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"showCount","type":"boolean | ShowCountProps"},{"identifier":"htmlSize","type":"number"},{"identifier":"suffix","type":"ReactNode"},{"identifier":"addonBefore","type":"ReactNode"},{"identifier":"addonAfter","type":"ReactNode"},{"identifier":"allowClear","type":"boolean | { clearIcon?: ReactNode; }"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""},{"identifier":"bordered","type":"boolean"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}]},"copy-to-clipboard":{"CopyToClipboard":[{"identifier":"text","description":"\u9700\u8981\u590d\u5236\u7684\u5b57\u7b26\u4e32","type":"string","required":true},{"identifier":"children","description":"\u89e6\u53d1\u590d\u5236\u4e8b\u4ef6\u7684\u5143\u7d20","type":"ReactElement<any, string | JSXElementConstructor<any>>","required":true},{"identifier":"onCopy","description":"\u6587\u672c\u88ab\u590d\u5236\u65f6\u5019\u7684\u56de\u8c03","type":"(text: string, result: boolean) => void"},{"identifier":"tooltipProps","description":"ant design Tooltip props","type":"Omit<TooltipProps, \\"title\\">"},{"identifier":"tooltipTitle","description":"\u590d\u5236\u6210\u529f\u7684Tooltip\u63d0\u793a\u6587\u6848","type":"ReactNode"},{"identifier":"options","description":"\u4f9d\u8d56\u5e95\u5c42\u7ec4\u4ef6 https://github.com/sudodoki/copy-to-clipboard \u7684 options","type":"{ debug?: boolean; message?: string; format?: string; }"}]},"keep-tab":{"default":[{"identifier":"children","description":"\u7531TabPane\u7ec4\u6210\u7684children","type":"ReactNode","required":true},{"identifier":"defaultActiveKey","description":"\u521d\u59cb\u5316\u9009\u4e2d\u9762\u677f\u7684 key\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e activeKey","type":"string"},{"identifier":"saveActiveKeyName","description":"\u4fdd\u5b58\u6fc0\u6d3b tab \u9762\u677f\u7684\u7684key\u540d","type":"string","default":"active"},{"identifier":"activeKey","description":"\u5f53\u524d\u6fc0\u6d3b tab \u9762\u677f\u7684 key","type":"string"},{"identifier":"onChange","description":"\u5207\u6362\u9762\u677f\u7684\u56de\u8c03","type":"(activeKey: string) => void"},{"identifier":"badgeProps","description":"antd Badge\u7ec4\u4ef6\u9664count\u610f\u5916\u7684\u6240\u6709props","type":"Omit<BadgeProps, \\"count\\">"},{"identifier":"type","type":"TabsType"},{"identifier":"size","type":"SizeType"},{"identifier":"hideAdd","type":"boolean"},{"identifier":"centered","type":"boolean"},{"identifier":"addIcon","type":"ReactNode"},{"identifier":"onEdit","type":"(e: string | MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, action: \\"add\\" | \\"remove\\") => void"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"lang","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"prefix","type":"string"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"text\\" | \\"none\\" | \\"search\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"true\\" | \\"false\\" | \\"page\\" | \\"step\\" | \\"location\\" | \\"date\\" | \\"time\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLDivElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLDivElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLDivElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLDivElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLDivElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLDivElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLDivElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLDivElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLDivElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLDivElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLDivElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLDivElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLDivElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLDivElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLDivElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLDivElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLDivElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLDivElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLDivElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLDivElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLDivElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLDivElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLDivElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLDivElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLDivElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLDivElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLDivElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLDivElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLDivElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLDivElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLDivElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLDivElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLDivElement>"},{"identifier":"prefixCls","type":"string"},{"identifier":"direction","type":"\\"ltr\\" | \\"rtl\\""},{"identifier":"animated","type":"boolean | AnimatedConfig"},{"identifier":"renderTabBar","type":"RenderTabBar"},{"identifier":"tabBarExtraContent","type":"TabBarExtraContent"},{"identifier":"tabBarGutter","type":"number"},{"identifier":"tabBarStyle","type":"CSSProperties"},{"identifier":"tabPosition","type":"TabPosition"},{"identifier":"destroyInactiveTabPane","type":"boolean"},{"identifier":"onTabClick","type":"(activeKey: string, e: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void"},{"identifier":"onTabScroll","type":"OnTabScroll"},{"identifier":"getPopupContainer","type":"(node: HTMLElement) => HTMLElement"},{"identifier":"locale","type":"TabsLocale"},{"identifier":"moreIcon","type":"ReactNode"},{"identifier":"moreTransitionName","description":"@private Internal usage. Not promise will rename in future","type":"string"},{"identifier":"popupClassName","type":"string"}]},"label-condition-input":{"default":[{"identifier":"label","description":"label \u6807\u7b7e\u7684\u6587\u672c","type":"ReactNode"},{"identifier":"onChange","description":"\u8f93\u5165\u6846\u5185\u5bb9\u53d8\u5316\u65f6\u7684\u56de\u8c03","type":"(value: string) => void"},{"identifier":"onBlur","description":"\u8f93\u5165\u6846\u5931\u53bb\u7126\u70b9\u7684\u56de\u8c03","type":"(value: string) => void"},{"identifier":"baseMinWidth","description":"\u8f93\u5165\u6846\u9664\u53bblabel\u4e4b\u540e\u7684\u6700\u5c0f\u672b\u5c3e\u5bbd\u5ea6","type":"number"},{"identifier":"id","description":"\u7ec4\u4ef6dom id","type":"string"},{"identifier":"size","type":"SizeType"},{"identifier":"prefix","type":"ReactNode"},{"identifier":"type","type":"LiteralUnion<\\"number\\" | \\"hidden\\" | \\"color\\" | \\"button\\" | \\"checkbox\\" | \\"date\\" | \\"datetime-local\\" | \\"email\\" | \\"file\\" | \\"image\\" | \\"month\\" | \\"password\\" | \\"radio\\" | \\"range\\" | \\"reset\\" | \\"search\\" | ... 5 more ... | \\"week\\", string>"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"boolean | \\"user\\" | \\"environment\\""},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"enterKeyHint","type":"\\"search\\" | \\"enter\\" | \\"done\\" | \\"go\\" | \\"next\\" | \\"previous\\" | \\"send\\""},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"max","type":"string | number"},{"identifier":"maxLength","type":"number"},{"identifier":"min","type":"string | number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"src","type":"string"},{"identifier":"step","type":"string | number"},{"identifier":"value","description":"\u8f93\u5165\u6846\u5185\u5bb9","type":"string"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"lang","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"email\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"none\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"date\\" | \\"time\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"prefixCls","type":"string"},{"identifier":"onPressEnter","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"showCount","type":"boolean | ShowCountProps"},{"identifier":"htmlSize","type":"number"},{"identifier":"suffix","type":"ReactNode"},{"identifier":"addonBefore","type":"ReactNode"},{"identifier":"addonAfter","type":"ReactNode"},{"identifier":"allowClear","type":"boolean | { clearIcon?: ReactNode; }"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""},{"identifier":"bordered","type":"boolean"},{"identifier":"regexp","description":"\u8fc7\u6ee4\u7684\u6b63\u5219\u6761\u4ef6","type":"RegExp | (string | RegExp | { pattern: RegExp; replacement?: string; })[]"},{"identifier":"formatter","description":"\u6307\u5b9a\u8f93\u5165\u6846\u5c55\u793a\u503c\u7684\u683c\u5f0f","type":"(value: string) => string"}]},"label-customize-range-picker":{"default":[{"identifier":"radioList","type":"RadioListType[]"},{"identifier":"customizeTimeList","type":"dateTypeEnum[]"},{"identifier":"rangePickerType","type":"\\"label\\" | \\"origin\\""},{"identifier":"label","type":"ReactNode"},{"identifier":"maxScope","description":"\u6700\u5927\u65f6\u95f4\u8303\u56f4","type":"number"},{"identifier":"locale","type":"PickerLocale"},{"identifier":"value","type":"[Moment, Moment]"},{"identifier":"defaultValue","type":"[Moment, Moment]"},{"identifier":"defaultPickerValue","type":"[Moment, Moment]"},{"identifier":"placeholder","type":"[string, string]"},{"identifier":"disabled","type":"boolean | [boolean, boolean]"},{"identifier":"disabledTime","type":"(date: Moment, type: RangeType) => DisabledTimes"},{"identifier":"showTime","type":"any"},{"identifier":"mode","type":"[PanelMode, PanelMode]"},{"identifier":"onChange","type":"(values: [Moment, Moment], formatString: [string, string]) => void"},{"identifier":"onPanelChange","type":"(values: [Moment, Moment], modes: [PanelMode, PanelMode]) => void"},{"identifier":"onOk","type":"(dates: [Moment, Moment]) => void"},{"identifier":"dateRender","type":"RangeDateRender<Moment>"},{"identifier":"picker","type":"\\"time\\" | \\"date\\" | \\"week\\" | \\"month\\" | \\"quarter\\" | \\"year\\""},{"identifier":"prefixCls","type":"string"},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"disabledDate","type":"(date: Moment) => boolean"},{"identifier":"monthCellRender","type":"MonthCellRender<Moment>"},{"identifier":"renderExtraFooter","type":"(mode: PanelMode) => ReactNode"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"direction","type":"\\"ltr\\" | \\"rtl\\""},{"identifier":"dropdownClassName","type":"string"},{"identifier":"dropdownAlign","type":"AlignType"},{"identifier":"popupStyle","type":"CSSProperties"},{"identifier":"transitionName","type":"string"},{"identifier":"allowClear","type":"boolean"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"open","type":"boolean"},{"identifier":"defaultOpen","type":"boolean"},{"identifier":"inputReadOnly","description":"Make input readOnly to avoid popup keyboard in mobile","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"format","type":"string | CustomFormat<Moment> | (string | CustomFormat<Moment>)[]"},{"identifier":"suffixIcon","type":"ReactNode"},{"identifier":"clearIcon","type":"ReactNode"},{"identifier":"prevIcon","type":"ReactNode"},{"identifier":"nextIcon","type":"ReactNode"},{"identifier":"superPrevIcon","type":"ReactNode"},{"identifier":"superNextIcon","type":"ReactNode"},{"identifier":"getPopupContainer","type":"(node: HTMLElement) => HTMLElement"},{"identifier":"panelRender","type":"((originPanel: ReactNode) => ReactNode) & ((originPanel: ReactNode) => ReactNode)"},{"identifier":"inputRender","type":"(props: InputHTMLAttributes<HTMLInputElement>) => ReactNode"},{"identifier":"onOpenChange","type":"(open: boolean) => void"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onKeyDown","type":"(event: KeyboardEvent<HTMLInputElement>, preventDefault: () => void) => void"},{"identifier":"pickerRef","description":"@private Internal usage, do not use in production mode!!!","type":"MutableRefObject<PickerRefConfig>"},{"identifier":"role","type":"string"},{"identifier":"name","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"none\\" | \\"inline\\" | \\"list\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"time\\" | \\"date\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"step\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"none\\" | \\"copy\\" | \\"execute\\" | \\"link\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"menu\\" | \\"listbox\\" | \\"tree\\" | \\"grid\\" | \\"dialog\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"ranges","type":"Record<string, [Moment, Moment] | (() => [Moment, Moment])>"},{"identifier":"separator","type":"ReactNode"},{"identifier":"allowEmpty","type":"[boolean, boolean]"},{"identifier":"onCalendarChange","type":"(values: [Moment, Moment], formatString: [string, string], info: RangeInfo) => void"},{"identifier":"activePickerIndex","description":"@private Internal control of active picker. Do not use since it\'s private usage","type":"0 | 1"},{"identifier":"size","type":"SizeType"},{"identifier":"placement","type":"\\"bottomLeft\\" | \\"bottomRight\\" | \\"topLeft\\" | \\"topRight\\""},{"identifier":"bordered","type":"boolean"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""}]},"label-date-picker":{"default":[{"identifier":"label","type":"ReactNode"},{"identifier":"locale","type":"PickerLocale"},{"identifier":"onChange","type":"(value: Moment, dateString: string) => void"},{"identifier":"picker","type":"\\"time\\" | \\"date\\" | \\"week\\" | \\"month\\" | \\"quarter\\" | \\"year\\""},{"identifier":"prefixCls","type":"string"},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"mode","description":"@deprecated Will be removed in next big version. Please use `mode` instead","type":"PanelMode"},{"identifier":"tabIndex","type":"number"},{"identifier":"value","type":"Moment"},{"identifier":"defaultValue","type":"Moment"},{"identifier":"defaultPickerValue","description":"[Legacy] Set default display picker view date","type":"Moment"},{"identifier":"disabledDate","type":"(date: Moment) => boolean"},{"identifier":"dateRender","type":"DateRender<Moment>"},{"identifier":"monthCellRender","type":"MonthCellRender<Moment>"},{"identifier":"renderExtraFooter","type":"(mode: PanelMode) => ReactNode"},{"identifier":"onSelect","type":"(value: Moment) => void"},{"identifier":"onPanelChange","type":"OnPanelChange<Moment>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onOk","type":"(date: Moment) => void"},{"identifier":"direction","type":"\\"ltr\\" | \\"rtl\\""},{"identifier":"dropdownClassName","type":"string"},{"identifier":"dropdownAlign","type":"AlignType"},{"identifier":"popupStyle","type":"CSSProperties"},{"identifier":"transitionName","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"allowClear","type":"boolean"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"disabled","type":"boolean"},{"identifier":"open","type":"boolean"},{"identifier":"defaultOpen","type":"boolean"},{"identifier":"inputReadOnly","description":"Make input readOnly to avoid popup keyboard in mobile","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"format","type":"string | CustomFormat<Moment> | (string | CustomFormat<Moment>)[]"},{"identifier":"suffixIcon","type":"ReactNode"},{"identifier":"clearIcon","type":"ReactNode"},{"identifier":"prevIcon","type":"ReactNode"},{"identifier":"nextIcon","type":"ReactNode"},{"identifier":"superPrevIcon","type":"ReactNode"},{"identifier":"superNextIcon","type":"ReactNode"},{"identifier":"getPopupContainer","type":"(node: HTMLElement) => HTMLElement"},{"identifier":"panelRender","type":"(originPanel: ReactNode) => ReactNode"},{"identifier":"inputRender","type":"(props: InputHTMLAttributes<HTMLInputElement>) => ReactNode"},{"identifier":"onOpenChange","type":"(open: boolean) => void"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onKeyDown","type":"(event: KeyboardEvent<HTMLInputElement>, preventDefault: () => void) => void"},{"identifier":"pickerRef","description":"@private Internal usage, do not use in production mode!!!","type":"MutableRefObject<PickerRefConfig>"},{"identifier":"role","type":"string"},{"identifier":"name","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"none\\" | \\"inline\\" | \\"list\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"time\\" | \\"date\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"step\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"none\\" | \\"copy\\" | \\"execute\\" | \\"link\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"menu\\" | \\"listbox\\" | \\"tree\\" | \\"grid\\" | \\"dialog\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"size","type":"SizeType"},{"identifier":"placement","type":"\\"bottomLeft\\" | \\"bottomRight\\" | \\"topLeft\\" | \\"topRight\\""},{"identifier":"bordered","type":"boolean"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""}]},"label-input":{"default":[{"identifier":"className","description":"\u81ea\u5b9a\u4e49class","type":"string"},{"identifier":"label","description":"label \u6807\u7b7e\u7684\u6587\u672c","type":"ReactNode"},{"identifier":"value","description":"\u8f93\u5165\u6846\u5185\u5bb9","type":"string"},{"identifier":"suffix","description":"\u5e26\u6709\u540e\u7f00\u7684 input","type":"ReactNode"},{"identifier":"prefix","description":"\u5e26\u6709\u524d\u7f00\u7684 input","type":"ReactNode"},{"identifier":"onChange","description":"\u8f93\u5165\u6846\u5185\u5bb9\u53d8\u5316\u65f6\u7684\u56de\u8c03","type":"(value: string) => void"},{"identifier":"onBlur","description":"\u8f93\u5165\u6846\u5931\u53bb\u7126\u70b9\u7684\u56de\u8c03","type":"(value: string) => void"},{"identifier":"type","description":"\u89c4\u5b9a input \u5143\u7d20\u7684\u7c7b\u578b","type":"\\"text\\" | \\"password\\""},{"identifier":"maxLength","description":"\u89c4\u5b9a\u8f93\u5165\u5b57\u6bb5\u4e2d\u7684\u5b57\u7b26\u7684\u6700\u5927\u957f\u5ea6","type":"number"},{"identifier":"onFocus","description":"\u8f93\u5165\u6846\u83b7\u53d6\u7126\u70b9\u7684\u56de\u8c03","type":"(value: string) => void"},{"identifier":"baseMinWidth","description":"\u8f93\u5165\u6846\u9664\u53bblabel\u4e4b\u540e\u7684\u6700\u5c0f\u672b\u5c3e\u5bbd\u5ea6","type":"number"},{"identifier":"id","description":"\u7ec4\u4ef6dom id","type":"string"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"boolean | \\"user\\" | \\"environment\\""},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"enterKeyHint","type":"\\"enter\\" | \\"done\\" | \\"go\\" | \\"next\\" | \\"previous\\" | \\"search\\" | \\"send\\""},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"max","type":"string | number"},{"identifier":"min","type":"string | number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"src","type":"string"},{"identifier":"step","type":"string | number"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"lang","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"text\\" | \\"search\\" | \\"none\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\" | \\"date\\" | \\"time\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"}]},"label-number-input":{"default":[{"identifier":"label","description":"label \u6807\u7b7e\u7684\u6587\u672c","type":"ReactNode"},{"identifier":"baseMinWidth","description":"\u8f93\u5165\u6846\u9664\u53bblabel\u4e4b\u540e\u7684\u6700\u5c0f\u672b\u5c3e\u5bbd\u5ea6","type":"number"},{"identifier":"id","description":"\u7ec4\u4ef6dom id","type":"string"},{"identifier":"value","description":"\u8f93\u5165\u6846\u7684\u5185\u5bb9","type":"NumberInputValueType"},{"identifier":"numberType","description":"\u8f93\u5165\u6570\u636e\u7684\u7c7b\u578b","type":"\\"int\\" | \\"float\\""},{"identifier":"dataType","description":"value\u7684\u6570\u636e\u7c7b\u578b","type":"\\"string\\" | \\"number\\""},{"identifier":"precision","description":"\u7cbe\u5ea6\uff0c\u53ea\u5bf9float\u6709\u6548","type":"number"},{"identifier":"maxLength","description":"\u540chtml input\u5c5e\u6027\u529f\u80fd","type":"number"},{"identifier":"formatter","description":"\u6307\u5b9a\u8f93\u5165\u6846\u5c55\u793a\u503c\u7684\u683c\u5f0f","type":"(value: string) => string"},{"identifier":"parser","description":"\u6307\u5b9a\u4ece formatter \u91cc\u8f6c\u6362\u56de\u6570\u5b57\u7684\u65b9\u5f0f\uff0c\u548c formatter \u642d\u914d\u4f7f\u7528","type":"(value: string) => string"},{"identifier":"enableMinus","description":"\u662f\u5426\u5141\u8bb8\u8f93\u5165\u8d1f\u6570","type":"boolean"},{"identifier":"onChange","description":"\u53d8\u5316\u56de\u8c03","type":"(value: NumberInputValueType) => void"},{"identifier":"onBlur","description":"\u5931\u53bb\u7126\u70b9\u56de\u8c03","type":"(value: NumberInputValueType) => void"},{"identifier":"onPressEnter","description":"\u6309\u4e0b\u56de\u8f66\u7684\u56de\u8c03","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"addonBefore","description":"\u5e26\u6807\u7b7e\u7684 input\uff0c\u8bbe\u7f6e\u524d\u7f6e\u6807\u7b7e","type":"ReactNode"},{"identifier":"addonAfter","description":"\u5e26\u6807\u7b7e\u7684 input\uff0c\u8bbe\u7f6e\u540e\u7f6e\u6807\u7b7e","type":"ReactNode"},{"identifier":"prefix","description":"\u524d\u7f00","type":"ReactNode"},{"identifier":"suffix","description":"\u540e\u7f00","type":"ReactNode"},{"identifier":"allowClear","description":"\u53ef\u4ee5\u70b9\u51fb\u6e05\u9664\u56fe\u6807\u5220\u9664\u5185\u5bb9","type":"boolean"},{"identifier":"size","type":"SizeType"},{"identifier":"type","type":"LiteralUnion<\\"number\\" | \\"hidden\\" | \\"color\\" | \\"button\\" | \\"checkbox\\" | \\"date\\" | \\"datetime-local\\" | \\"email\\" | \\"file\\" | \\"image\\" | \\"month\\" | \\"password\\" | \\"radio\\" | \\"range\\" | \\"reset\\" | \\"search\\" | ... 5 more ... | \\"week\\", string>"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"boolean | \\"user\\" | \\"environment\\""},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"enterKeyHint","type":"\\"search\\" | \\"enter\\" | \\"done\\" | \\"go\\" | \\"next\\" | \\"previous\\" | \\"send\\""},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"max","type":"string | number"},{"identifier":"min","type":"string | number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"src","type":"string"},{"identifier":"step","type":"string | number"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"lang","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"email\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"none\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"date\\" | \\"time\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"prefixCls","type":"string"},{"identifier":"showCount","type":"boolean | ShowCountProps"},{"identifier":"htmlSize","type":"number"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""},{"identifier":"bordered","type":"boolean"}]},"label-range-picker":{"default":[{"identifier":"label","type":"ReactNode","required":true},{"identifier":"showTime","type":"any"},{"identifier":"locale","type":"PickerLocale"},{"identifier":"value","type":"[Moment, Moment]"},{"identifier":"defaultValue","type":"[Moment, Moment]"},{"identifier":"defaultPickerValue","type":"[Moment, Moment]"},{"identifier":"placeholder","type":"[string, string]"},{"identifier":"disabled","type":"boolean | [boolean, boolean]"},{"identifier":"disabledTime","type":"(date: Moment, type: RangeType) => DisabledTimes"},{"identifier":"mode","type":"[PanelMode, PanelMode]"},{"identifier":"onChange","type":"(values: [Moment, Moment], formatString: [string, string]) => void"},{"identifier":"onPanelChange","type":"(values: [Moment, Moment], modes: [PanelMode, PanelMode]) => void"},{"identifier":"onOk","type":"(dates: [Moment, Moment]) => void"},{"identifier":"dateRender","type":"RangeDateRender<Moment>"},{"identifier":"picker","type":"\\"time\\" | \\"date\\" | \\"week\\" | \\"month\\" | \\"quarter\\" | \\"year\\""},{"identifier":"prefixCls","type":"string"},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"disabledDate","type":"(date: Moment) => boolean"},{"identifier":"monthCellRender","type":"MonthCellRender<Moment>"},{"identifier":"renderExtraFooter","type":"(mode: PanelMode) => ReactNode"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"direction","type":"\\"ltr\\" | \\"rtl\\""},{"identifier":"dropdownClassName","type":"string"},{"identifier":"dropdownAlign","type":"AlignType"},{"identifier":"popupStyle","type":"CSSProperties"},{"identifier":"transitionName","type":"string"},{"identifier":"allowClear","type":"boolean"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"open","type":"boolean"},{"identifier":"defaultOpen","type":"boolean"},{"identifier":"inputReadOnly","description":"Make input readOnly to avoid popup keyboard in mobile","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"format","type":"string | CustomFormat<Moment> | (string | CustomFormat<Moment>)[]"},{"identifier":"suffixIcon","type":"ReactNode"},{"identifier":"clearIcon","type":"ReactNode"},{"identifier":"prevIcon","type":"ReactNode"},{"identifier":"nextIcon","type":"ReactNode"},{"identifier":"superPrevIcon","type":"ReactNode"},{"identifier":"superNextIcon","type":"ReactNode"},{"identifier":"getPopupContainer","type":"(node: HTMLElement) => HTMLElement"},{"identifier":"panelRender","type":"((originPanel: ReactNode) => ReactNode) & ((originPanel: ReactNode) => ReactNode)"},{"identifier":"inputRender","type":"(props: InputHTMLAttributes<HTMLInputElement>) => ReactNode"},{"identifier":"onOpenChange","type":"(open: boolean) => void"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onKeyDown","type":"(event: KeyboardEvent<HTMLInputElement>, preventDefault: () => void) => void"},{"identifier":"pickerRef","description":"@private Internal usage, do not use in production mode!!!","type":"MutableRefObject<PickerRefConfig>"},{"identifier":"role","type":"string"},{"identifier":"name","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"none\\" | \\"inline\\" | \\"list\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"time\\" | \\"date\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"step\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"none\\" | \\"copy\\" | \\"execute\\" | \\"link\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"menu\\" | \\"listbox\\" | \\"tree\\" | \\"grid\\" | \\"dialog\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"ranges","type":"Record<string, [Moment, Moment] | (() => [Moment, Moment])>"},{"identifier":"separator","type":"ReactNode"},{"identifier":"allowEmpty","type":"[boolean, boolean]"},{"identifier":"onCalendarChange","type":"(values: [Moment, Moment], formatString: [string, string], info: RangeInfo) => void"},{"identifier":"activePickerIndex","description":"@private Internal control of active picker. Do not use since it\'s private usage","type":"0 | 1"},{"identifier":"size","type":"SizeType"},{"identifier":"placement","type":"\\"bottomLeft\\" | \\"bottomRight\\" | \\"topLeft\\" | \\"topRight\\""},{"identifier":"bordered","type":"boolean"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""}]},"label-select":{"default":[{"identifier":"label","type":"ReactNode"},{"identifier":"placement","type":"\\"bottomLeft\\" | \\"bottomRight\\" | \\"topLeft\\" | \\"topRight\\""},{"identifier":"mode","type":"\\"multiple\\" | \\"tags\\""},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""},{"identifier":"value","type":"any"},{"identifier":"disabled","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"prefixCls","type":"string"},{"identifier":"searchValue","type":"string"},{"identifier":"onSearch","type":"(value: string) => void"},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"showSearch","type":"boolean"},{"identifier":"tagRender","type":"(props: CustomTagProps) => ReactElement<any, string | JSXElementConstructor<any>>"},{"identifier":"direction","type":"\\"ltr\\" | \\"rtl\\""},{"identifier":"maxLength","type":"number"},{"identifier":"tabIndex","type":"number"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"notFoundContent","type":"ReactNode"},{"identifier":"placeholder","type":"ReactNode"},{"identifier":"onClear","type":"() => void"},{"identifier":"choiceTransitionName","type":"string"},{"identifier":"loading","type":"boolean"},{"identifier":"open","type":"boolean"},{"identifier":"defaultOpen","type":"boolean"},{"identifier":"onDropdownVisibleChange","type":"(open: boolean) => void"},{"identifier":"maxTagTextLength","type":"number"},{"identifier":"maxTagCount","type":"number | \\"responsive\\""},{"identifier":"maxTagPlaceholder","type":"ReactNode | ((omittedValues: DisplayValueType[]) => ReactNode)"},{"identifier":"tokenSeparators","type":"string[]"},{"identifier":"allowClear","type":"boolean"},{"identifier":"showArrow","type":"boolean"},{"identifier":"clearIcon","description":"Clear all icon","type":"RenderNode"},{"identifier":"removeIcon","description":"Selector remove icon","type":"RenderNode"},{"identifier":"animation","type":"string"},{"identifier":"transitionName","type":"string"},{"identifier":"dropdownStyle","type":"CSSProperties"},{"identifier":"dropdownClassName","type":"string"},{"identifier":"dropdownMatchSelectWidth","type":"number | boolean"},{"identifier":"dropdownRender","type":"(menu: ReactElement<any, string | JSXElementConstructor<any>>) => ReactElement<any, string | JSXElementConstructor<any>>"},{"identifier":"dropdownAlign","type":"AlignType"},{"identifier":"getPopupContainer","type":"RenderDOMFunc"},{"identifier":"showAction","type":"(\\"focus\\" | \\"click\\")[]"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onPopupScroll","type":"UIEventHandler<HTMLDivElement>"},{"identifier":"onInputKeyDown","type":"KeyboardEventHandler<HTMLInputElement | HTMLTextAreaElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"none\\" | \\"inline\\" | \\"list\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"true\\" | \\"false\\" | \\"page\\" | \\"step\\" | \\"location\\" | \\"date\\" | \\"time\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"none\\" | \\"copy\\" | \\"execute\\" | \\"link\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"menu\\" | \\"listbox\\" | \\"tree\\" | \\"grid\\" | \\"dialog\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"fieldNames","type":"FieldNames"},{"identifier":"inputValue","description":"@deprecated Use `searchValue` instead","type":"string"},{"identifier":"autoClearSearchValue","type":"boolean"},{"identifier":"onSelect","type":"SelectHandler<any, DefaultOptionType>"},{"identifier":"onDeselect","type":"SelectHandler<any, DefaultOptionType>"},{"identifier":"filterOption","description":"In Select, `false` means do nothing.\\nIn TreeSelect, `false` will highlight match item.\\nIt\'s by design.","type":"boolean | FilterFunc<DefaultOptionType>"},{"identifier":"filterSort","type":"(optionA: DefaultOptionType, optionB: DefaultOptionType) => number"},{"identifier":"optionFilterProp","type":"string"},{"identifier":"optionLabelProp","type":"string"},{"identifier":"options","type":"DefaultOptionType[]"},{"identifier":"defaultActiveFirstOption","type":"boolean"},{"identifier":"virtual","type":"boolean"},{"identifier":"listHeight","type":"number"},{"identifier":"listItemHeight","type":"number"},{"identifier":"menuItemSelectedIcon","type":"RenderNode"},{"identifier":"labelInValue","type":"boolean"},{"identifier":"defaultValue","type":"any"},{"identifier":"onChange","type":"(value: any, option: DefaultOptionType | DefaultOptionType[]) => void"},{"identifier":"suffixIcon","type":"ReactNode"},{"identifier":"size","type":"SizeType"},{"identifier":"bordered","type":"boolean"}]},"label-tree-select":{"default":[{"identifier":"label","description":"\u8f93\u5165\u6846\u7684label","type":"ReactNode"},{"identifier":"unit","description":"\u8f93\u5165\u6846value\u7684\u5355\u4f4d","type":"ReactNode"},{"identifier":"onDropdownVisibleChange","type":"(value: boolean) => void"},{"identifier":"treeLine","type":"boolean | { showLeafIcon: boolean; }"},{"identifier":"switcherIcon","type":"string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | ReactFragment | ReactPortal | ((props: { ...; }) => ReactNode) | ((props: TreeNodeProps<...>) => ReactNode)"},{"identifier":"id","type":"string"},{"identifier":"prefixCls","type":"string"},{"identifier":"searchValue","type":"string"},{"identifier":"onSearch","type":"(value: string) => void"},{"identifier":"className","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"showSearch","type":"boolean"},{"identifier":"tagRender","type":"(props: CustomTagProps) => ReactElement<any, string | JSXElementConstructor<any>>"},{"identifier":"direction","type":"\\"ltr\\" | \\"rtl\\""},{"identifier":"maxLength","type":"number"},{"identifier":"tabIndex","type":"number"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"notFoundContent","type":"ReactNode"},{"identifier":"placeholder","type":"ReactNode"},{"identifier":"onClear","type":"() => void"},{"identifier":"choiceTransitionName","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"loading","type":"boolean"},{"identifier":"open","type":"boolean"},{"identifier":"defaultOpen","type":"boolean"},{"identifier":"getRawInputElement","description":"@private Internal usage. Do not use in your production.","type":"() => Element"},{"identifier":"maxTagTextLength","type":"number"},{"identifier":"maxTagCount","type":"number | \\"responsive\\""},{"identifier":"maxTagPlaceholder","type":"ReactNode | ((omittedValues: DisplayValueType[]) => ReactNode)"},{"identifier":"tokenSeparators","type":"string[]"},{"identifier":"allowClear","type":"boolean"},{"identifier":"showArrow","type":"boolean"},{"identifier":"clearIcon","description":"Clear all icon","type":"RenderNode"},{"identifier":"removeIcon","description":"Selector remove icon","type":"RenderNode"},{"identifier":"animation","type":"string"},{"identifier":"transitionName","type":"string"},{"identifier":"dropdownStyle","type":"CSSProperties"},{"identifier":"dropdownClassName","type":"string"},{"identifier":"dropdownMatchSelectWidth","type":"number | boolean"},{"identifier":"dropdownRender","type":"(menu: ReactElement<any, string | JSXElementConstructor<any>>) => ReactElement<any, string | JSXElementConstructor<any>>"},{"identifier":"dropdownAlign","type":"AlignType"},{"identifier":"placement","type":"\\"bottomLeft\\" | \\"bottomRight\\" | \\"topLeft\\" | \\"topRight\\""},{"identifier":"getPopupContainer","type":"RenderDOMFunc"},{"identifier":"showAction","type":"(\\"focus\\" | \\"click\\")[]"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLDivElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onPopupScroll","type":"UIEventHandler<HTMLDivElement>"},{"identifier":"onInputKeyDown","type":"KeyboardEventHandler<HTMLInputElement | HTMLTextAreaElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLDivElement>"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"none\\" | \\"inline\\" | \\"list\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"true\\" | \\"false\\" | \\"page\\" | \\"step\\" | \\"location\\" | \\"date\\" | \\"time\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"none\\" | \\"copy\\" | \\"execute\\" | \\"link\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"menu\\" | \\"listbox\\" | \\"tree\\" | \\"grid\\" | \\"dialog\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"value","type":"string[]"},{"identifier":"defaultValue","type":"string[]"},{"identifier":"onChange","type":"(value: string[], labelList: ReactNode[], extra: ChangeEventExtra) => void"},{"identifier":"inputValue","description":"@deprecated Use `searchValue` instead","type":"string"},{"identifier":"autoClearSearchValue","type":"boolean"},{"identifier":"filterTreeNode","type":"boolean | ((inputValue: string, treeNode: DefaultOptionType) => boolean)"},{"identifier":"treeNodeFilterProp","type":"string"},{"identifier":"onSelect","type":"SelectHandler<string, DefaultOptionType>"},{"identifier":"onDeselect","type":"SelectHandler<string, DefaultOptionType>"},{"identifier":"showCheckedStrategy","type":"CheckedStrategy"},{"identifier":"treeNodeLabelProp","type":"string"},{"identifier":"fieldNames","type":"FieldNames"},{"identifier":"multiple","type":"boolean"},{"identifier":"treeCheckable","type":"ReactNode"},{"identifier":"treeCheckStrictly","type":"boolean"},{"identifier":"labelInValue","type":"boolean"},{"identifier":"treeData","type":"DefaultOptionType[]"},{"identifier":"treeDataSimpleMode","type":"boolean | SimpleModeConfig"},{"identifier":"loadData","type":"(dataNode: LegacyDataNode) => Promise<unknown>"},{"identifier":"treeLoadedKeys","type":"Key[]"},{"identifier":"onTreeLoad","type":"(loadedKeys: Key[]) => void"},{"identifier":"treeDefaultExpandAll","type":"boolean"},{"identifier":"treeExpandedKeys","type":"Key[]"},{"identifier":"treeDefaultExpandedKeys","type":"Key[]"},{"identifier":"onTreeExpand","type":"(expandedKeys: Key[]) => void"},{"identifier":"treeExpandAction","type":"ExpandAction"},{"identifier":"virtual","type":"boolean"},{"identifier":"listHeight","type":"number"},{"identifier":"listItemHeight","type":"number"},{"identifier":"treeIcon","type":"IconType"},{"identifier":"suffixIcon","type":"ReactNode"},{"identifier":"size","type":"SizeType"},{"identifier":"bordered","type":"boolean"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""}]},"number-input":{"default":[{"identifier":"value","description":"\u8f93\u5165\u6846\u7684\u5185\u5bb9","type":"NumberInputValueType"},{"identifier":"numberType","description":"\u8f93\u5165\u6570\u636e\u7684\u7c7b\u578b","type":"\\"int\\" | \\"float\\""},{"identifier":"dataType","description":"value\u7684\u6570\u636e\u7c7b\u578b","type":"\\"string\\" | \\"number\\""},{"identifier":"precision","description":"\u7cbe\u5ea6\uff0c\u53ea\u5bf9float\u6709\u6548","type":"number"},{"identifier":"maxLength","description":"\u540chtml input\u5c5e\u6027\u529f\u80fd","type":"number"},{"identifier":"formatter","description":"\u6307\u5b9a\u8f93\u5165\u6846\u5c55\u793a\u503c\u7684\u683c\u5f0f","type":"(value: string) => string"},{"identifier":"parser","description":"\u6307\u5b9a\u4ece formatter \u91cc\u8f6c\u6362\u56de\u6570\u5b57\u7684\u65b9\u5f0f\uff0c\u548c formatter \u642d\u914d\u4f7f\u7528","type":"(value: string) => string"},{"identifier":"enableMinus","description":"\u662f\u5426\u5141\u8bb8\u8f93\u5165\u8d1f\u6570","type":"boolean","default":"false"},{"identifier":"onChange","description":"\u53d8\u5316\u56de\u8c03","type":"(value: NumberInputValueType) => void"},{"identifier":"onBlur","description":"\u5931\u53bb\u7126\u70b9\u56de\u8c03","type":"(value: NumberInputValueType) => void"},{"identifier":"onPressEnter","description":"\u6309\u4e0b\u56de\u8f66\u7684\u56de\u8c03","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"addonBefore","description":"\u5e26\u6807\u7b7e\u7684 input\uff0c\u8bbe\u7f6e\u524d\u7f6e\u6807\u7b7e","type":"ReactNode"},{"identifier":"addonAfter","description":"\u5e26\u6807\u7b7e\u7684 input\uff0c\u8bbe\u7f6e\u540e\u7f6e\u6807\u7b7e","type":"ReactNode"},{"identifier":"prefix","description":"\u524d\u7f00","type":"ReactNode"},{"identifier":"suffix","description":"\u540e\u7f00","type":"ReactNode"},{"identifier":"allowClear","description":"\u53ef\u4ee5\u70b9\u51fb\u6e05\u9664\u56fe\u6807\u5220\u9664\u5185\u5bb9","type":"boolean"},{"identifier":"size","type":"SizeType"},{"identifier":"type","type":"LiteralUnion<\\"number\\" | \\"hidden\\" | \\"color\\" | \\"button\\" | \\"checkbox\\" | \\"date\\" | \\"datetime-local\\" | \\"email\\" | \\"file\\" | \\"image\\" | \\"month\\" | \\"password\\" | \\"radio\\" | \\"range\\" | \\"reset\\" | \\"search\\" | ... 5 more ... | \\"week\\", string>"},{"identifier":"accept","type":"string"},{"identifier":"alt","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"autoFocus","type":"boolean"},{"identifier":"capture","type":"boolean | \\"user\\" | \\"environment\\""},{"identifier":"checked","type":"boolean"},{"identifier":"crossOrigin","type":"string"},{"identifier":"disabled","type":"boolean"},{"identifier":"enterKeyHint","type":"\\"search\\" | \\"enter\\" | \\"done\\" | \\"go\\" | \\"next\\" | \\"previous\\" | \\"send\\""},{"identifier":"form","type":"string"},{"identifier":"formAction","type":"string"},{"identifier":"formEncType","type":"string"},{"identifier":"formMethod","type":"string"},{"identifier":"formNoValidate","type":"boolean"},{"identifier":"formTarget","type":"string"},{"identifier":"height","type":"string | number"},{"identifier":"list","type":"string"},{"identifier":"max","type":"string | number"},{"identifier":"min","type":"string | number"},{"identifier":"minLength","type":"number"},{"identifier":"multiple","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"pattern","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"readOnly","type":"boolean"},{"identifier":"required","type":"boolean"},{"identifier":"src","type":"string"},{"identifier":"step","type":"string | number"},{"identifier":"width","type":"string | number"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\"inherit\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"lang","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\"yes\\" | \\"no\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\"on\\" | \\"off\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\"email\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"none\\" | \\"numeric\\" | \\"decimal\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\\npresented if they are made.","type":"\\"list\\" | \\"none\\" | \\"inline\\" | \\"both\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.\\n@see aria-pressed\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\n@see aria-colcount\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-colindex\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\"step\\" | \\"date\\" | \\"time\\" | \\"true\\" | \\"false\\" | \\"page\\" | \\"location\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\n@see aria-hidden\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\n@deprecated in ARIA 1.1","type":"\\"link\\" | \\"none\\" | \\"copy\\" | \\"execute\\" | \\"move\\" | \\"popup\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\n@see aria-invalid\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\'s \\"grabbed\\" state in a drag-and-drop operation.\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\"true\\" | \\"false\\" | \\"dialog\\" | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"tree\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\n@see aria-errormessage.","type":"boolean | \\"true\\" | \\"false\\" | \\"grammar\\" | \\"spelling\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\"off\\" | \\"assertive\\" | \\"polite\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\"horizontal\\" | \\"vertical\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\"pressed\\" state of toggle buttons.\\n@see aria-checked\\n@see aria-selected.","type":"boolean | \\"true\\" | \\"false\\" | \\"mixed\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\n@see aria-atomic.","type":"\\"text\\" | \\"additions\\" | \\"additions removals\\" | \\"additions text\\" | \\"all\\" | \\"removals\\" | \\"removals additions\\" | \\"removals text\\" | \\"text additions\\" | \\"text removals\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\n@see aria-rowcount\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\n@see aria-rowindex\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\"selected\\" state of various widgets.\\n@see aria-checked\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLInputElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLInputElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmit","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLInputElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLInputElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLInputElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLInputElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLInputElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLInputElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLInputElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLInputElement>"},{"identifier":"prefixCls","type":"string"},{"identifier":"showCount","type":"boolean | ShowCountProps"},{"identifier":"htmlSize","type":"number"},{"identifier":"status","type":"\\"\\" | \\"warning\\" | \\"error\\""},{"identifier":"bordered","type":"boolean"},{"identifier":"ref","type":"Ref<unknown>"},{"identifier":"key","type":"Key"}]},"rc-qrcode":{"default":[{"identifier":"value","description":"\u751f\u6210\u4e8c\u7ef4\u7801\u7684\u503c","type":"string | QRCodeSegment[]","default":""},{"identifier":"options","description":"qrcode\u7684QRCodeRenderersOptions","type":"QRCodeRenderersOptions","default":"{}"},{"identifier":"getCanvasInstance","description":"\u83b7\u53d6HTMLCanvasElement","type":"(result: HTMLCanvasElement) => void"}]},"rich-text-editor":{"default":[{"identifier":"apiKey","type":"string"},{"identifier":"id","type":"string"},{"identifier":"inline","type":"boolean"},{"identifier":"initialValue","type":"string"},{"identifier":"onEditorChange","type":"(a: string, editor: Editor) => void"},{"identifier":"value","type":"string"},{"identifier":"init","type":"RawEditorOptions & { selector?: undefined; target?: undefined; }"},{"identifier":"tagName","type":"string"},{"identifier":"cloudChannel","type":"string"},{"identifier":"plugins","type":"string | string[]"},{"identifier":"toolbar","type":"string | boolean | string[] | ToolbarGroup[]"},{"identifier":"disabled","type":"boolean"},{"identifier":"textareaName","type":"string"},{"identifier":"tinymceScriptSrc","type":"string"},{"identifier":"rollback","type":"number | false"},{"identifier":"scriptLoading","type":"{ async?: boolean; defer?: boolean; delay?: number; }"},{"identifier":"onBeforePaste","type":"EEventHandler<\\"beforepaste\\">"},{"identifier":"onBlur","type":"EEventHandler<\\"blur\\">"},{"identifier":"onClick","type":"EEventHandler<\\"click\\">"},{"identifier":"onContextMenu","type":"EEventHandler<\\"contextmenu\\">"},{"identifier":"onCopy","type":"EEventHandler<\\"copy\\">"},{"identifier":"onCut","type":"EEventHandler<\\"cut\\">"},{"identifier":"onDblclick","type":"EEventHandler<\\"dblclick\\">"},{"identifier":"onDrag","type":"EEventHandler<\\"drag\\">"},{"identifier":"onDragDrop","type":"EEventHandler<\\"dragdrop\\">"},{"identifier":"onDragEnd","type":"EEventHandler<\\"dragend\\">"},{"identifier":"onDragGesture","type":"EEventHandler<\\"draggesture\\">"},{"identifier":"onDragOver","type":"EEventHandler<\\"dragover\\">"},{"identifier":"onDrop","type":"EEventHandler<\\"drop\\">"},{"identifier":"onFocus","type":"EEventHandler<\\"focus\\">"},{"identifier":"onFocusIn","type":"EEventHandler<\\"focusin\\">"},{"identifier":"onFocusOut","type":"EEventHandler<\\"focusout\\">"},{"identifier":"onKeyDown","type":"EEventHandler<\\"keydown\\">"},{"identifier":"onKeyPress","type":"EEventHandler<\\"keypress\\">"},{"identifier":"onKeyUp","type":"EEventHandler<\\"keyup\\">"},{"identifier":"onMouseDown","type":"EEventHandler<\\"mousedown\\">"},{"identifier":"onMouseEnter","type":"EEventHandler<\\"mouseenter\\">"},{"identifier":"onMouseLeave","type":"EEventHandler<\\"mouseleave\\">"},{"identifier":"onMouseMove","type":"EEventHandler<\\"mousemove\\">"},{"identifier":"onMouseOut","type":"EEventHandler<\\"mouseout\\">"},{"identifier":"onMouseOver","type":"EEventHandler<\\"mouseover\\">"},{"identifier":"onMouseUp","type":"EEventHandler<\\"mouseup\\">"},{"identifier":"onPaste","type":"EEventHandler<\\"paste\\">"},{"identifier":"onSelectionChange","type":"EEventHandler<\\"selectionchange\\">"},{"identifier":"onActivate","type":"EEventHandler<\\"activate\\">"},{"identifier":"onAddUndo","type":"EEventHandler<\\"AddUndo\\">"},{"identifier":"onBeforeAddUndo","type":"EEventHandler<\\"BeforeAddUndo\\">"},{"identifier":"onBeforeExecCommand","type":"EEventHandler<\\"BeforeExecCommand\\">"},{"identifier":"onBeforeGetContent","type":"EEventHandler<\\"BeforeGetContent\\">"},{"identifier":"onBeforeRenderUI","type":"EventHandler<unknown>"},{"identifier":"onBeforeSetContent","type":"EEventHandler<\\"BeforeSetContent\\">"},{"identifier":"onChange","type":"EventHandler<unknown>"},{"identifier":"onClearUndos","type":"EEventHandler<\\"ClearUndos\\">"},{"identifier":"onDeactivate","type":"EEventHandler<\\"deactivate\\">"},{"identifier":"onDirty","type":"EventHandler<unknown>"},{"identifier":"onExecCommand","type":"EEventHandler<\\"ExecCommand\\">"},{"identifier":"onGetContent","type":"EEventHandler<\\"GetContent\\">"},{"identifier":"onHide","type":"EventHandler<unknown>"},{"identifier":"onInit","type":"EEventHandler<\\"init\\">"},{"identifier":"onLoadContent","type":"EEventHandler<\\"LoadContent\\">"},{"identifier":"onNodeChange","type":"EEventHandler<\\"NodeChange\\">"},{"identifier":"onPostProcess","type":"EventHandler<unknown>"},{"identifier":"onPostRender","type":"EEventHandler<\\"PostRender\\">"},{"identifier":"onPreProcess","type":"EventHandler<unknown>"},{"identifier":"onProgressState","type":"EEventHandler<\\"ProgressState\\">"},{"identifier":"onRedo","type":"EEventHandler<\\"Redo\\">"},{"identifier":"onRemove","type":"EEventHandler<\\"remove\\">"},{"identifier":"onReset","type":"EventHandler<unknown>"},{"identifier":"onSaveContent","type":"EventHandler<unknown>"},{"identifier":"onSetAttrib","type":"EventHandler<unknown>"},{"identifier":"onObjectResizeStart","type":"EEventHandler<\\"ObjectResizeStart\\">"},{"identifier":"onObjectResized","type":"EEventHandler<\\"ObjectResized\\">"},{"identifier":"onObjectSelected","type":"EEventHandler<\\"ObjectSelected\\">"},{"identifier":"onSetContent","type":"EEventHandler<\\"SetContent\\">"},{"identifier":"onShow","type":"EventHandler<unknown>"},{"identifier":"onSubmit","type":"EventHandler<unknown>"},{"identifier":"onUndo","type":"EEventHandler<\\"Undo\\">"},{"identifier":"onVisualAid","type":"EventHandler<unknown>"}]},"split-pane":{"default":[{"identifier":"allowResize","description":"\u662f\u5426\u5141\u8bb8\u62d6\u52a8","type":"boolean","default":"true"},{"identifier":"className","description":"\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7c7b\u540d","type":"string"},{"identifier":"primary","description":"\u8bbe\u7f6e\u4e3b\u4f53\u7a97\u53e3","type":"\\"first\\" | \\"second\\"","default":"first"},{"identifier":"minSize","description":"\u7a97\u53e3\u6700\u5c0f\u5927\u5c0f","type":"string | number","default":"50"},{"identifier":"maxSize","description":"\u7a97\u53e3\u6700\u5927\u5927\u5c0f","type":"string | number"},{"identifier":"defaultSize","description":"\u9ed8\u8ba4\u7a97\u53e3\u5927\u5c0f","type":"string | number"},{"identifier":"size","description":"\u7a97\u53e3\u5927\u5c0f","type":"string | number"},{"identifier":"split","description":"\u62c6\u5206\u65b9\u5f0f","type":"\\"vertical\\" | \\"horizontal\\"","default":"vertical"},{"identifier":"onDragStarted","description":"\u62d6\u62fd\u5f00\u59cb\u56de\u8c03","type":"() => void"},{"identifier":"onDragFinished","description":"\u62d6\u62fd\u5b8c\u6210\u56de\u8c03","type":"(newSize: number) => void"},{"identifier":"onChange","description":"\u62d6\u62fd\u8fc7\u7a0b\u56de\u8c03","type":"(newSize: number) => void"},{"identifier":"onResizerClick","description":"\u62d6\u62fd\u6761\u5355\u51fb\u56de\u8c03","type":"(event: MouseEvent) => void"},{"identifier":"onResizerDoubleClick","description":"\u62d6\u62fd\u6761\u53cc\u51fb\u56de\u8c03","type":"(event: MouseEvent) => void"},{"identifier":"style","description":"\u603b\u7a97\u53e3\u6837\u5f0f","type":"CSSProperties"},{"identifier":"resizerStyle","description":"\u62d6\u62fd\u6761\u6837\u5f0f","type":"CSSProperties"},{"identifier":"paneStyle","description":"\u6bcf\u4e2a\u7a97\u53e3\u5171\u540c\u6837\u5f0f","type":"CSSProperties"},{"identifier":"pane1Style","description":"\u62c6\u5206\u7a97\u53e31\u6837\u5f0f","type":"CSSProperties"},{"identifier":"pane2Style","description":"\u62c6\u5206\u7a97\u53e32\u6837\u5f0f","type":"CSSProperties"},{"identifier":"resizerClassName","description":"\u62c6\u5206\u7a97\u53e32\u6837\u5f0f","type":"string"},{"identifier":"step","description":"\u62d6\u52a8\u56fa\u5b9a\u6b65\u8fdb\u503c","type":"number"}]},"step-number-input":{"default":[{"identifier":"value","description":"\u8f93\u5165\u6846\u7684\u5185\u5bb9","type":"string | number"},{"identifier":"numberType","description":"\u8f93\u5165\u6570\u636e\u7684\u7c7b\u578b","type":"\\"int\\" | \\"float\\"","default":"int"},{"identifier":"precision","description":"\u7cbe\u5ea6\uff0c\u53ea\u5bf9float\u6709\u6548","type":"number","default":"2"},{"identifier":"maxLength","description":"\u5185\u5bb9\u6700\u5927\u957f\u5ea6","type":"number"},{"identifier":"formatter","description":"\u6307\u5b9a\u8f93\u5165\u6846\u5c55\u793a\u503c\u7684\u683c\u5f0f","type":"(value: string) => string"},{"identifier":"parser","description":"\u6307\u5b9a\u4ece formatter \u91cc\u8f6c\u6362\u56de\u6570\u5b57\u7684\u65b9\u5f0f\uff0c\u548c formatter \u642d\u914d\u4f7f\u7528","type":"(value: string) => string"},{"identifier":"enableMinus","description":"\u662f\u5426\u5141\u8bb8\u8f93\u5165\u8d1f\u6570","type":"boolean","default":"false"},{"identifier":"step","description":"\u6b65\u8fdb, \u6bcf\u6b21\u70b9\u51fb+/- \u591a\u5c11","type":"string | number","default":"1"},{"identifier":"onChange","description":"\u53d8\u5316\u56de\u8c03","type":"(value: string) => void"},{"identifier":"onBlur","description":"\u5931\u53bb\u7126\u70b9\u56de\u8c03","type":"(value: string) => void"},{"identifier":"max","description":"\u6700\u5927\u503c","type":"number"},{"identifier":"min","description":"\u6700\u5c0f\u503c","type":"number"},{"identifier":"prefix","description":"\u524d\u7f00","type":"ReactNode"},{"identifier":"suffix","description":"\u540e\u7f00","type":"ReactNode"},{"identifier":"allowClear","description":"\u53ef\u4ee5\u70b9\u51fb\u6e05\u9664\u56fe\u6807\u5220\u9664\u5185\u5bb9","type":"boolean"}]}}')}}]);